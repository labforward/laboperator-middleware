{
  "paths": {
    "/applications": {
      "get": {
        "description": "Get a list of registerd OAuth 2 Applications.",
        "operationId": "getApplications",
        "summary": "List of registerd OAuth 2 Applications",
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Applications"
                },
                "examples": {
                  "List of Applications": {
                    "summary": "List of Applications",
                    "value": {
                      "data": [
                        {
                          "id": "1",
                          "type": "application",
                          "attributes": {
                            "name": "Subin",
                            "redirect_uri": "urn:ietf:wg:oauth:2.0:oob"
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/applications/1"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "applications"
        ]
      }
    },
    "/authentications": {
      "get": {
        "description": "Get a list of user Authentications.",
        "operationId": "getAuthentications",
        "summary": "Get Authentications",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "List of Authentication attributes to be included in response."
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "List of related resource to include. Allowed values are: `user`."
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "Pagination"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "Sorting"
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Authentications"
                },
                "examples": {
                  "List of Authentications": {
                    "summary": "List of Authentications",
                    "value": {
                      "data": [
                        {
                          "id": "1",
                          "type": "authentication",
                          "attributes": {
                            "provider": "openid_connect",
                            "uid": "chanell@weimannwaelchi.net",
                            "access_token": "c81eae06ec9c5e94ab0c08e3eaaa1c3f"
                          },
                          "relationships": {
                            "user": {
                              "data": {
                                "id": "1",
                                "type": "user"
                              }
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/authentications/1"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Wrong Fields Set Error": {
                    "summary": "Wrong Fields Set Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong `fields` value(s) for authentications given: `invalid`.",
                          "title": "Bad Request",
                          "source": {
                            "messages": {}
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "authentications"
        ]
      }
    },
    "/authentications/{id}": {
      "get": {
        "description": "Get a single Authentication by its id.",
        "operationId": "getAuthentication",
        "summary": "Get Authentication",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            },
            "description": "An encoded id of the Authentication to get."
          },
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "List of Authentication attributes to be included in response."
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "List of related resource to include. Allowed values are: `user`."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Authentication"
                },
                "examples": {
                  "Authentication": {
                    "summary": "Authentication",
                    "value": {
                      "data": {
                        "id": "4",
                        "type": "authentication",
                        "attributes": {
                          "provider": "openid_connect",
                          "uid": "millard@parkerkris.co",
                          "access_token": "bb57ffff1a043c34f3c8de620a176168"
                        },
                        "relationships": {
                          "user": {
                            "data": {
                              "id": "7",
                              "type": "user"
                            }
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/authentications/4"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Wrong Include Error": {
                    "summary": "Wrong Include Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong `include` value(s) given: `spaceships`, `aliens`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Wrong Fields Set Error": {
                    "summary": "Wrong Fields Set Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong `fields` value(s) for authentications given: `invalid`.",
                          "title": "Bad Request",
                          "source": {
                            "messages": {}
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "authentications"
        ]
      }
    },
    "/channels": {
      "get": {
        "description": "Get a list of existing Channels.",
        "operationId": "getChannels",
        "summary": "List of existing Channels",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "List of Channel attributes to be included in response."
          },
          {
            "name": "filter",
            "description": "Resources and/or attributes to filter by.",
            "in": "query",
            "schema": {
              "type": "object",
              "properties": {
                "channels": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "device_id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "device": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "name": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "slug": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "status": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "created_at": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "updated_at": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "device_type_id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "driver_parameters": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "simulate": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "custom_attributes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "users": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "username": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "email": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "List of related resource to include. Allowed values are: `users`, `device`."
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "Pagination"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "Sorting"
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Channels"
                },
                "examples": {
                  "List of Channels": {
                    "summary": "List of Channels",
                    "value": {
                      "data": [
                        {
                          "id": "1",
                          "type": "channel",
                          "attributes": {
                            "capability": null,
                            "interval": null,
                            "name": "weight",
                            "on_update": null,
                            "status": "online",
                            "unit": "mg",
                            "type_sym": "float",
                            "specific_attributes": {
                              "name": "weight",
                              "unit": "mg",
                              "description": ""
                            },
                            "device_class": "25"
                          },
                          "relationships": {
                            "device": {
                              "data": {
                                "id": "1",
                                "type": "device"
                              }
                            },
                            "users": {
                              "data": [
                                {
                                  "id": "1",
                                  "type": "user"
                                }
                              ]
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/channels/1"
                          }
                        },
                        {
                          "id": "2",
                          "type": "channel",
                          "attributes": {
                            "capability": null,
                            "interval": null,
                            "name": "display_weight",
                            "on_update": null,
                            "status": "online",
                            "unit": "mg",
                            "type_sym": "float",
                            "specific_attributes": {
                              "name": "display_weight",
                              "unit": "mg",
                              "description": ""
                            },
                            "device_class": "25"
                          },
                          "relationships": {
                            "device": {
                              "data": {
                                "id": "1",
                                "type": "device"
                              }
                            },
                            "users": {
                              "data": [
                                {
                                  "id": "1",
                                  "type": "user"
                                }
                              ]
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/channels/2"
                          }
                        },
                        {
                          "id": "3",
                          "type": "channel",
                          "attributes": {
                            "capability": null,
                            "interval": null,
                            "name": "status",
                            "on_update": null,
                            "status": "online",
                            "unit": null,
                            "type_sym": "string",
                            "specific_attributes": {},
                            "device_class": "25"
                          },
                          "relationships": {
                            "device": {
                              "data": {
                                "id": "1",
                                "type": "device"
                              }
                            },
                            "users": {
                              "data": [
                                {
                                  "id": "1",
                                  "type": "user"
                                }
                              ]
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/channels/3"
                          }
                        },
                        {
                          "id": "4",
                          "type": "channel",
                          "attributes": {
                            "capability": null,
                            "interval": null,
                            "name": "Enormous Granite Bench",
                            "on_update": null,
                            "status": "online",
                            "unit": "A",
                            "type_sym": "float",
                            "specific_attributes": {},
                            "device_class": "25"
                          },
                          "relationships": {
                            "device": {
                              "data": {
                                "id": "1",
                                "type": "device"
                              }
                            },
                            "users": {
                              "data": [
                                {
                                  "id": "1",
                                  "type": "user"
                                }
                              ]
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/channels/4"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Wrong Fields Set Error (all fieldnames are invalid)": {
                    "summary": "Wrong Fields Set Error (all fieldnames are invalid)",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong `fields` value(s) for channels given: `invalid`, `invalid`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Wrong Fields Set Error (one fieldname is invalid)": {
                    "summary": "Wrong Fields Set Error (one fieldname is invalid)",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong `fields` value(s) for channels given: `wrong`, `invalid`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "channels"
        ]
      }
    },
    "/channels/{id}": {
      "get": {
        "description": "Get a single Channel by its id.",
        "operationId": "getChannel",
        "summary": "Get Channel",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "An id of Channel to get."
          },
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "List of Channel attributes to be included in response."
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "List of related resource to include. Allowed values are: `device`, `users`."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Channel"
                },
                "examples": {
                  "Channel": {
                    "summary": "Channel",
                    "value": {
                      "data": {
                        "id": "36",
                        "type": "channel",
                        "attributes": {
                          "capability": null,
                          "interval": null,
                          "name": "Mediocre Iron Gloves",
                          "on_update": null,
                          "status": "online",
                          "unit": "A",
                          "type_sym": "float",
                          "specific_attributes": {},
                          "device_class": "25"
                        },
                        "relationships": {
                          "device": {
                            "data": {
                              "id": "9",
                              "type": "device"
                            }
                          },
                          "users": {
                            "data": [
                              {
                                "id": "9",
                                "type": "user"
                              }
                            ]
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/channels/36"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Wrong Include Error": {
                    "summary": "Wrong Include Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong `include` value(s) given: `spaceships`, `aliens`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Wrong Fields Set Error (all fieldnames are invalid)": {
                    "summary": "Wrong Fields Set Error (all fieldnames are invalid)",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong `fields` value(s) for channels given: `invalid`, `invalid`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Wrong Fields Set Error (one fieldname is invalid)": {
                    "summary": "Wrong Fields Set Error (one fieldname is invalid)",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong `fields` value(s) for channels given: `invalid`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "channels"
        ]
      }
    },
    "/collections": {
      "get": {
        "description": "Get a list of existing Collections.",
        "operationId": "getCollections",
        "summary": "Get Collections",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "List of Collection attributes to be included in response."
          },
          {
            "name": "deleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Include soft deleted collections."
          },
          {
            "name": "filter",
            "description": "Resources and/or attributes to filter by.",
            "in": "query",
            "schema": {
              "type": "object",
              "properties": {
                "collections": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "name": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "parent_id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "parent": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "name": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "parent_id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "List of related resource to include. Allowed values are: `user`, `parent`."
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "Pagination"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "Sorting"
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Collections"
                },
                "examples": {
                  "List of Collections": {
                    "summary": "List of Collections",
                    "value": {
                      "data": [
                        {
                          "id": "51",
                          "type": "collection",
                          "attributes": {
                            "name": "default-collection-25",
                            "personal": true,
                            "secure": false,
                            "updated_at": "2020-02-14T12:36:04.279Z",
                            "deleted_at": null,
                            "created_at": "2020-02-14T12:36:04.279Z"
                          },
                          "relationships": {
                            "collection_memberships": {
                              "data": [
                                {
                                  "id": "49",
                                  "type": "permission"
                                }
                              ]
                            },
                            "users": {
                              "data": [
                                {
                                  "id": "25",
                                  "type": "user"
                                }
                              ]
                            },
                            "permissions": {
                              "data": [
                                {
                                  "id": "50",
                                  "type": "permission"
                                },
                                {
                                  "id": "57",
                                  "type": "permission"
                                }
                              ]
                            },
                            "subcollections": {
                              "data": []
                            },
                            "parent": {
                              "data": null
                            },
                            "owner": {
                              "data": {
                                "id": "25",
                                "type": "user"
                              }
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/collections/51"
                          }
                        },
                        {
                          "id": "52",
                          "type": "collection",
                          "attributes": {
                            "name": "Rustic Copper Bottle",
                            "personal": false,
                            "secure": false,
                            "updated_at": "2020-02-14T12:36:04.312Z",
                            "deleted_at": null,
                            "created_at": "2020-02-14T12:36:04.312Z"
                          },
                          "relationships": {
                            "collection_memberships": {
                              "data": [
                                {
                                  "id": "50",
                                  "type": "permission"
                                }
                              ]
                            },
                            "users": {
                              "data": [
                                {
                                  "id": "25",
                                  "type": "user"
                                }
                              ]
                            },
                            "permissions": {
                              "data": [
                                {
                                  "id": "54",
                                  "type": "permission"
                                },
                                {
                                  "id": "55",
                                  "type": "permission"
                                }
                              ]
                            },
                            "subcollections": {
                              "data": [
                                {
                                  "id": "56",
                                  "type": "collection"
                                }
                              ]
                            },
                            "parent": {
                              "data": null
                            },
                            "owner": {
                              "data": {
                                "id": "25",
                                "type": "user"
                              }
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/collections/52"
                          }
                        },
                        {
                          "id": "56",
                          "type": "collection",
                          "attributes": {
                            "name": "Synergistic Marble Shoes",
                            "personal": false,
                            "secure": false,
                            "updated_at": "2020-02-14T12:36:04.422Z",
                            "deleted_at": null,
                            "created_at": "2020-02-14T12:36:04.422Z"
                          },
                          "relationships": {
                            "collection_memberships": {
                              "data": [
                                {
                                  "id": "55",
                                  "type": "permission"
                                },
                                {
                                  "id": "54",
                                  "type": "permission"
                                }
                              ]
                            },
                            "users": {
                              "data": [
                                {
                                  "id": "25",
                                  "type": "user"
                                },
                                {
                                  "id": "27",
                                  "type": "user"
                                }
                              ]
                            },
                            "permissions": {
                              "data": []
                            },
                            "subcollections": {
                              "data": []
                            },
                            "parent": {
                              "data": {
                                "id": "52",
                                "type": "collection"
                              }
                            },
                            "owner": {
                              "data": {
                                "id": "27",
                                "type": "user"
                              }
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/collections/56"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Wrong Filter Error": {
                    "summary": "Wrong Filter Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong collections attributes given for filtering: `hair`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Wrong Fields Set Error": {
                    "summary": "Wrong Fields Set Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong `fields` value(s) for collections given: `invalid`, `DROP TABLE USERS`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "collections"
        ]
      },
      "post": {
        "description": "Create a Collection.",
        "operationId": "createCollection",
        "summary": "Create Collection",
        "security": [
          {
            "oauth2": [
              "read",
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Collection"
                },
                "examples": {
                  "Collection": {
                    "summary": "Collection",
                    "value": {
                      "data": {
                        "id": "172",
                        "type": "collection",
                        "attributes": {
                          "name": "Test collection",
                          "personal": false,
                          "secure": false,
                          "updated_at": "2020-02-14T12:36:09.183Z",
                          "deleted_at": null,
                          "created_at": "2020-02-14T12:36:09.183Z"
                        },
                        "relationships": {
                          "collection_memberships": {
                            "data": [
                              {
                                "id": "186",
                                "type": "permission"
                              }
                            ]
                          },
                          "users": {
                            "data": [
                              {
                                "id": "82",
                                "type": "user"
                              }
                            ]
                          },
                          "permissions": {
                            "data": []
                          },
                          "subcollections": {
                            "data": []
                          },
                          "parent": {
                            "data": null
                          },
                          "owner": {
                            "data": {
                              "id": "82",
                              "type": "user"
                            }
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/collections/172"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Bad Request Error": {
                    "summary": "Bad Request Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Missing `data` member at document's top level.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Missed Required Attributes Error": {
                    "summary": "Missed Required Attributes Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Missed required attribute(s) for collection: `name`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthorized Error because of a missed scope": {
                    "summary": "Unauthorized Error because of a missed scope",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "Insufficient OAuth2 scope to perform this operation. Required: Update",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Conflict Missing Type Error": {
                    "summary": "Conflict Missing Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "Missing `type` member at document's `data` level.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Conflict Wrong Type Error": {
                    "summary": "Conflict Wrong Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "The given `type` member does not match the resource.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "collections"
        ],
        "requestBody": {
          "description": "Create a Collection.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCollection"
              },
              "example": {
                "data": {
                  "type": "collection",
                  "attributes": {
                    "name": "Test collection"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/collections/{id}": {
      "get": {
        "description": "Get a single Collection by its id.",
        "operationId": "getCollection",
        "summary": "Get Collection",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "An id of Collection to get."
          },
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "List of Collection attributes to be included in response."
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "List of related resource to include. Allowed values are: `parent`."
          },
          {
            "name": "deleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Find in archive."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Collection"
                },
                "examples": {
                  "Collection": {
                    "summary": "Collection",
                    "value": {
                      "data": {
                        "id": "102",
                        "type": "collection",
                        "attributes": {
                          "name": "Synergistic Rubber Lamp",
                          "personal": false,
                          "secure": false,
                          "updated_at": "2020-02-14T12:36:06.362Z",
                          "deleted_at": null,
                          "created_at": "2020-02-14T12:36:06.362Z"
                        },
                        "relationships": {
                          "collection_memberships": {
                            "data": [
                              {
                                "id": "106",
                                "type": "permission"
                              }
                            ]
                          },
                          "users": {
                            "data": [
                              {
                                "id": "50",
                                "type": "user"
                              }
                            ]
                          },
                          "permissions": {
                            "data": [
                              {
                                "id": "110",
                                "type": "permission"
                              },
                              {
                                "id": "111",
                                "type": "permission"
                              }
                            ]
                          },
                          "subcollections": {
                            "data": [
                              {
                                "id": "106",
                                "type": "collection"
                              }
                            ]
                          },
                          "parent": {
                            "data": null
                          },
                          "owner": {
                            "data": {
                              "id": "50",
                              "type": "user"
                            }
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/collections/102"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Wrong Include Error": {
                    "summary": "Wrong Include Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong `include` value(s) given: `spaceships`, `aliens`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Wrong Fields Set Error": {
                    "summary": "Wrong Fields Set Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong `fields` value(s) for collections given: `invalid`, `DROP TABLE USERS`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "collections"
        ]
      },
      "patch": {
        "description": "Update a Collection.",
        "operationId": "updateCollection",
        "summary": "Update Collection",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Id of a Collection to update."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read",
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Collection"
                },
                "examples": {
                  "Collection": {
                    "summary": "Collection",
                    "value": {
                      "data": {
                        "id": "223",
                        "type": "collection",
                        "attributes": {
                          "name": "Test collection updated",
                          "personal": false,
                          "secure": false,
                          "updated_at": "2020-02-14T12:36:11.793Z",
                          "deleted_at": null,
                          "created_at": "2020-02-14T12:36:11.564Z"
                        },
                        "relationships": {
                          "collection_memberships": {
                            "data": [
                              {
                                "id": "242",
                                "type": "permission"
                              }
                            ]
                          },
                          "users": {
                            "data": [
                              {
                                "id": "110",
                                "type": "user"
                              }
                            ]
                          },
                          "permissions": {
                            "data": [
                              {
                                "id": "246",
                                "type": "permission"
                              },
                              {
                                "id": "247",
                                "type": "permission"
                              }
                            ]
                          },
                          "subcollections": {
                            "data": [
                              {
                                "id": "227",
                                "type": "collection"
                              }
                            ]
                          },
                          "parent": {
                            "data": null
                          },
                          "owner": {
                            "data": {
                              "id": "110",
                              "type": "user"
                            }
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/collections/223"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Bad Request Error": {
                    "summary": "Bad Request Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Missing `data` member at document's top level.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthorized Error because of a missed scope": {
                    "summary": "Unauthorized Error because of a missed scope",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "Insufficient OAuth2 scope to perform this operation. Required: Update",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Conflict Missing Type Error": {
                    "summary": "Conflict Missing Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "Missing `type` member at document's `data` level.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Conflict Wrong Type Error": {
                    "summary": "Conflict Wrong Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "The given `type` member does not match the resource.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "collections"
        ],
        "requestBody": {
          "description": "Update a Collection.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCollection"
              },
              "example": {
                "data": {
                  "type": "collection",
                  "attributes": {
                    "name": "Test collection updated"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Delete a Collection.",
        "operationId": "deleteCollection",
        "summary": "Delete Collection",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Id of a Collection to delete."
          },
          {
            "name": "deleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Real destroy."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read",
              "delete"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Success"
                },
                "examples": {
                  "Ok": {
                    "summary": "Ok",
                    "value": {
                      "meta": {
                        "result": "Success"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthorized Error": {
                    "summary": "Unauthorized Error",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "You do not have the required permissions to access this resource. Note: OAuth 2 scopes do not overrule application level permissions.",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Unauthorized Error because of a missed scope": {
                    "summary": "Unauthorized Error because of a missed scope",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "Insufficient OAuth2 scope to perform this operation. Required: Delete",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "collections"
        ]
      }
    },
    "/collections/restore": {
      "patch": {
        "description": "Restore a Collection.",
        "operationId": "restoreCollection",
        "summary": "Restore Collection",
        "security": [
          {
            "oauth2": [
              "read",
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Collections"
                },
                "examples": {
                  "Ok": {
                    "summary": "Ok",
                    "value": {
                      "data": [
                        {
                          "id": "325",
                          "type": "collection",
                          "attributes": {
                            "name": "Fantastic Steel Shoes",
                            "personal": false,
                            "secure": false,
                            "updated_at": "2020-02-14T12:36:16.157Z",
                            "deleted_at": null,
                            "created_at": "2020-02-14T12:36:16.102Z"
                          },
                          "relationships": {
                            "collection_memberships": {
                              "data": [
                                {
                                  "id": "358",
                                  "type": "permission"
                                }
                              ]
                            },
                            "users": {
                              "data": [
                                {
                                  "id": "158",
                                  "type": "user"
                                }
                              ]
                            },
                            "permissions": {
                              "data": []
                            },
                            "subcollections": {
                              "data": []
                            },
                            "parent": {
                              "data": null
                            },
                            "owner": {
                              "data": {
                                "id": "158",
                                "type": "user"
                              }
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/collections/325"
                          }
                        }
                      ]
                    }
                  },
                  "Ignore Unauthorized Error": {
                    "summary": "Ignore Unauthorized Error",
                    "value": {
                      "data": []
                    }
                  },
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "data": []
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "collections"
        ]
      }
    },
    "/command_executions": {
      "get": {
        "description": "Get a list of existing CommandExecutions.",
        "operationId": "getCommandExecutions",
        "summary": "Get Command Executions",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "List of CommandExecution attributes to be included in response."
          },
          {
            "name": "filter",
            "description": "Resources and/or attributes to filter by.",
            "in": "query",
            "schema": {
              "type": "object",
              "properties": {
                "command_executions": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "uuid": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "device_id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "user_id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "status": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "confirmed_at": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "finished_at": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "created_at": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "updated_at": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "user": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "username": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "email": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "device": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "name": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "slug": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "status": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "created_at": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "updated_at": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "device_type_id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "driver_parameters": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "simulate": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "custom_attributes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "List of related resource to include. Allowed values are: `user`, `device`."
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "Pagination"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "Sorting"
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandExecutions"
                },
                "examples": {
                  "List of CommandExecutions": {
                    "summary": "List of CommandExecutions",
                    "value": {
                      "data": [
                        {
                          "id": "1",
                          "type": "command_execution",
                          "attributes": {
                            "id": 1,
                            "uuid": "a21b71ba-56da-4e86-99fa-5809efb451ee",
                            "parameters": null,
                            "device_id": 25,
                            "user_id": 181,
                            "status": "sent",
                            "confirmed_at": null,
                            "finished_at": null,
                            "data": null,
                            "created_at": "2020-02-14T12:36:18.427Z",
                            "updated_at": "2020-02-14T12:36:18.427Z"
                          },
                          "relationships": {
                            "device": {
                              "data": {
                                "id": "25",
                                "type": "device"
                              }
                            },
                            "user": {
                              "data": {
                                "id": "181",
                                "type": "user"
                              }
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/command_executions/1"
                          }
                        },
                        {
                          "id": "2",
                          "type": "command_execution",
                          "attributes": {
                            "id": 2,
                            "uuid": "c390b77c-0e76-4e6c-aa35-4c873649586b",
                            "parameters": null,
                            "device_id": 25,
                            "user_id": 182,
                            "status": "sent",
                            "confirmed_at": null,
                            "finished_at": null,
                            "data": null,
                            "created_at": "2020-02-14T12:36:18.476Z",
                            "updated_at": "2020-02-14T12:36:18.476Z"
                          },
                          "relationships": {
                            "device": {
                              "data": {
                                "id": "25",
                                "type": "device"
                              }
                            },
                            "user": {
                              "data": {
                                "id": "182",
                                "type": "user"
                              }
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/command_executions/2"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Wrong Filter Error": {
                    "summary": "Wrong Filter Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong command_executions attributes given for filtering: `hair`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Wrong Fields Set Error (all fieldnames are invalid)": {
                    "summary": "Wrong Fields Set Error (all fieldnames are invalid)",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong `fields` value(s) for command_executions given: `invalid`, `invalid2`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Wrong Fields Set Error (one fieldname is invalid)": {
                    "summary": "Wrong Fields Set Error (one fieldname is invalid)",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong `fields` value(s) for command_executions given: `wrong`, `invalid`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "command_executions"
        ]
      }
    },
    "/command_executions/{id}": {
      "get": {
        "description": "Get a single CommandExecution by its id.",
        "operationId": "getCommandExecution",
        "summary": "Get Command Execution",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "An id of CommandExecution to get."
          },
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "List of CommandExecution attributes to be included in response."
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "List of related resource to include. Allowed values are: `user`, `device`."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandExecution"
                },
                "examples": {
                  "CommandExecution": {
                    "summary": "CommandExecution",
                    "value": {
                      "data": {
                        "id": "10",
                        "type": "command_execution",
                        "attributes": {
                          "id": 10,
                          "uuid": "a654a089-62a1-4d04-a02b-b0d1a12734b5",
                          "parameters": null,
                          "device_id": 31,
                          "user_id": 190,
                          "status": "sent",
                          "confirmed_at": null,
                          "finished_at": null,
                          "data": null,
                          "created_at": "2020-02-14T12:36:20.290Z",
                          "updated_at": "2020-02-14T12:36:20.290Z"
                        },
                        "relationships": {
                          "device": {
                            "data": {
                              "id": "31",
                              "type": "device"
                            }
                          },
                          "user": {
                            "data": {
                              "id": "190",
                              "type": "user"
                            }
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/command_executions/10"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Wrong Include Error": {
                    "summary": "Wrong Include Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong `include` value(s) given: `spaceships`, `aliens`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Wrong Fields Set Error (all fieldnames are invalid)": {
                    "summary": "Wrong Fields Set Error (all fieldnames are invalid)",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong `fields` value(s) for command_executions given: `invalid`, `invalid2`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Wrong Fields Set Error (one fieldname is invalid)": {
                    "summary": "Wrong Fields Set Error (one fieldname is invalid)",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong `fields` value(s) for command_executions given: `invalid`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "command_executions"
        ]
      }
    },
    "/connectors": {
      "get": {
        "description": "Get a list of existing Connectors.",
        "operationId": "getConnectors",
        "summary": "Get Connectors",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "List of Connector attributes to be included in response."
          },
          {
            "name": "deleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Include soft deleted connectors."
          },
          {
            "name": "filter",
            "description": "Resources and/or attributes to filter by.",
            "in": "query",
            "schema": {
              "type": "object",
              "properties": {
                "connectors": {
                  "type": "object",
                  "additionalProperties": false
                },
                "devices": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "name": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "slug": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "status": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "created_at": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "updated_at": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "device_type_id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "driver_parameters": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "simulate": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "custom_attributes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "organisation": {
                  "type": "object",
                  "additionalProperties": false
                },
                "pairings": {
                  "type": "object",
                  "additionalProperties": false
                },
                "ports": {
                  "type": "object",
                  "additionalProperties": false
                }
              }
            }
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "List of related resource to include. Allowed values are: `devices`, `organisation`, `pairings`, `ports`."
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "Pagination"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "Sorting"
          },
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "Searching"
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Connectors"
                },
                "examples": {
                  "List of Connectors": {
                    "summary": "List of Connectors",
                    "value": {
                      "data": [
                        {
                          "id": "3",
                          "type": "connector",
                          "attributes": {
                            "connector_key": "525586739057",
                            "serial": "2904cca0-95dd-42ab-a1a5-eb9c1b558d6f",
                            "last_seen_at": "2020-05-13T04:54:40.150Z",
                            "last_appeared_at": "2020-05-13T04:54:40.150Z",
                            "status": "offline",
                            "name": "5255-8673-9057",
                            "deleted_at": null,
                            "updated_at": "2020-05-15T04:54:40.217Z",
                            "created_at": "2020-05-15T04:54:40.160Z",
                            "enrollment_server": null,
                            "connector_endpoint": null,
                            "last_reported_at": "2020-05-13T04:54:40.150Z",
                            "hardware": null,
                            "last_pairing_button_press_at": null,
                            "connector_key_nice": "5255-8673-9057",
                            "owner_id": 1,
                            "slugs": [
                              "5255-8673-9057"
                            ],
                            "internal_ip": "83bb:ea52:39a7:228b:7778:f125:f6f2:417b",
                            "external_ip": "e88a:6e7a:c7e8:25a9:776b:72a7:6884:b621"
                          },
                          "relationships": {
                            "organisation": {
                              "data": {
                                "id": "1",
                                "type": "organisation"
                              }
                            },
                            "pairings": {
                              "data": [
                                {
                                  "id": "3",
                                  "type": "pairing"
                                }
                              ]
                            },
                            "ports": {
                              "data": [
                                {
                                  "id": "9",
                                  "type": "port"
                                },
                                {
                                  "id": "10",
                                  "type": "port"
                                },
                                {
                                  "id": "11",
                                  "type": "port"
                                },
                                {
                                  "id": "12",
                                  "type": "port"
                                }
                              ]
                            },
                            "devices": {
                              "data": []
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/connectors/3"
                          }
                        },
                        {
                          "id": "1",
                          "type": "connector",
                          "attributes": {
                            "connector_key": "621888809822",
                            "serial": "c5f3c4a6-657d-41a1-afec-25584bee4bbe",
                            "last_seen_at": "2020-05-13T04:54:39.901Z",
                            "last_appeared_at": "2020-05-13T04:54:39.901Z",
                            "status": "offline",
                            "name": "6218-8880-9822",
                            "deleted_at": null,
                            "updated_at": "2020-05-15T04:54:40.088Z",
                            "created_at": "2020-05-15T04:54:39.963Z",
                            "enrollment_server": null,
                            "connector_endpoint": null,
                            "last_reported_at": "2020-05-13T04:54:39.901Z",
                            "hardware": null,
                            "last_pairing_button_press_at": null,
                            "connector_key_nice": "6218-8880-9822",
                            "owner_id": 1,
                            "slugs": [
                              "6218-8880-9822"
                            ],
                            "internal_ip": "70ba:3ab:2dd1:15ad:7831:cce8:9c59:a83f",
                            "external_ip": "fc68:d40a:54f8:5fa0:e189:6105:1541:a0e6"
                          },
                          "relationships": {
                            "organisation": {
                              "data": {
                                "id": "1",
                                "type": "organisation"
                              }
                            },
                            "pairings": {
                              "data": [
                                {
                                  "id": "1",
                                  "type": "pairing"
                                }
                              ]
                            },
                            "ports": {
                              "data": [
                                {
                                  "id": "1",
                                  "type": "port"
                                },
                                {
                                  "id": "2",
                                  "type": "port"
                                },
                                {
                                  "id": "3",
                                  "type": "port"
                                },
                                {
                                  "id": "4",
                                  "type": "port"
                                }
                              ]
                            },
                            "devices": {
                              "data": []
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/connectors/1"
                          }
                        }
                      ]
                    }
                  },
                  "List of found Connectors": {
                    "summary": "List of found Connectors",
                    "value": {
                      "data": [
                        {
                          "id": "4",
                          "type": "connector",
                          "attributes": {
                            "connector_key": "616997559732",
                            "serial": "12c3c520-d15b-453c-8084-9f2c7c2fdb34",
                            "last_seen_at": "2020-05-13T04:54:41.355Z",
                            "last_appeared_at": "2020-05-13T04:54:41.355Z",
                            "status": "offline",
                            "name": "6169-9755-9732",
                            "deleted_at": null,
                            "updated_at": "2020-05-15T04:54:41.420Z",
                            "created_at": "2020-05-15T04:54:41.364Z",
                            "enrollment_server": null,
                            "connector_endpoint": null,
                            "last_reported_at": "2020-05-13T04:54:41.355Z",
                            "hardware": null,
                            "last_pairing_button_press_at": null,
                            "connector_key_nice": "6169-9755-9732",
                            "owner_id": 2,
                            "slugs": [
                              "6169-9755-9732"
                            ],
                            "internal_ip": "8dba:4989:497e:9f65:2ca4:1acf:3f07:d20d",
                            "external_ip": "a9ea:c2ce:6baa:6df0:6b2a:b979:7c72:4452"
                          },
                          "relationships": {
                            "organisation": {
                              "data": {
                                "id": "2",
                                "type": "organisation"
                              }
                            },
                            "pairings": {
                              "data": [
                                {
                                  "id": "4",
                                  "type": "pairing"
                                }
                              ]
                            },
                            "ports": {
                              "data": [
                                {
                                  "id": "13",
                                  "type": "port"
                                },
                                {
                                  "id": "14",
                                  "type": "port"
                                },
                                {
                                  "id": "15",
                                  "type": "port"
                                },
                                {
                                  "id": "16",
                                  "type": "port"
                                }
                              ]
                            },
                            "devices": {
                              "data": []
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/connectors/4"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "connectors"
        ]
      },
      "post": {
        "description": "Create a Connector.",
        "operationId": "createConnector",
        "summary": "Create Connector",
        "security": [
          {
            "oauth2": [
              "read",
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Connector"
                },
                "examples": {
                  "Connector": {
                    "summary": "Connector",
                    "value": {
                      "data": {
                        "id": "14",
                        "type": "connector",
                        "attributes": {
                          "connector_key": "321232123212",
                          "serial": "844bace6-2e94-4fe1-b79e-fbb3e16b6d77",
                          "last_seen_at": "2020-05-13T04:54:45.187Z",
                          "last_appeared_at": "2020-05-13T04:54:45.187Z",
                          "status": "offline",
                          "name": "3212-3212-3212",
                          "deleted_at": null,
                          "updated_at": "2020-05-15T04:54:45.869Z",
                          "created_at": "2020-05-15T04:54:45.195Z",
                          "enrollment_server": null,
                          "connector_endpoint": null,
                          "last_reported_at": "2020-05-13T04:54:45.188Z",
                          "hardware": null,
                          "last_pairing_button_press_at": null,
                          "connector_key_nice": "3212-3212-3212",
                          "owner_id": 6,
                          "slugs": [
                            "3212-3212-3212"
                          ],
                          "internal_ip": "6a2d:74f5:bb09:503c:d5f9:663c:9abc:20ef",
                          "external_ip": "e4f0:c545:2522:d8b9:b7ef:9fdc:a2b3:6313"
                        },
                        "relationships": {
                          "organisation": {
                            "data": {
                              "id": "6",
                              "type": "organisation"
                            }
                          },
                          "pairings": {
                            "data": [
                              {
                                "id": "15",
                                "type": "pairing"
                              }
                            ]
                          },
                          "ports": {
                            "data": [
                              {
                                "id": "53",
                                "type": "port"
                              },
                              {
                                "id": "54",
                                "type": "port"
                              },
                              {
                                "id": "55",
                                "type": "port"
                              },
                              {
                                "id": "56",
                                "type": "port"
                              }
                            ]
                          },
                          "devices": {
                            "data": []
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/connectors/14"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Bad Request Error": {
                    "summary": "Bad Request Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Missing `data` member at document's top level.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Missed Required Attributes Error": {
                    "summary": "Missed Required Attributes Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Missed required attribute(s) for connector: `connector_key`.",
                          "title": "Bad Request",
                          "source": {
                            "messages": {
                              "target_collection": [
                                "can't be blank"
                              ],
                              "connector_key": [
                                "can't be blank"
                              ]
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthorized Error because of a missed scope": {
                    "summary": "Unauthorized Error because of a missed scope",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "Insufficient OAuth2 scope to perform this operation. Required: Update",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Conflict Missing Type Error": {
                    "summary": "Conflict Missing Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "Missing `type` member at document's `data` level.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Conflict Wrong Type Error": {
                    "summary": "Conflict Wrong Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "The given `type` member does not match the resource.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "connectors"
        ],
        "requestBody": {
          "description": "Create a Connector.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateConnector"
              },
              "example": {
                "data": {
                  "type": "connector",
                  "attributes": {
                    "connector_key": "321232123212"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/connectors/{id}": {
      "get": {
        "description": "Get a single Connector by its id.",
        "operationId": "getConnector",
        "summary": "Get Connector",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "An id of Connector to get."
          },
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "List of Connector attributes to be included in response."
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "List of related resource to include. Allowed values are: `devices`, `organisation`, `pairings`, `ports`."
          },
          {
            "name": "deleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Find in archive."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Connector"
                },
                "examples": {
                  "Connector": {
                    "summary": "Connector",
                    "value": {
                      "data": {
                        "id": "27",
                        "type": "connector",
                        "attributes": {
                          "connector_key": "257107673317",
                          "serial": "369b81a4-e6c1-4e67-8d9a-b93b5b0405d0",
                          "last_seen_at": "2020-05-13T04:54:51.236Z",
                          "last_appeared_at": "2020-05-13T04:54:51.237Z",
                          "status": "offline",
                          "name": "2571-0767-3317",
                          "deleted_at": null,
                          "updated_at": "2020-05-15T04:54:51.301Z",
                          "created_at": "2020-05-15T04:54:51.246Z",
                          "enrollment_server": null,
                          "connector_endpoint": null,
                          "last_reported_at": "2020-05-13T04:54:51.237Z",
                          "hardware": null,
                          "last_pairing_button_press_at": null,
                          "connector_key_nice": "2571-0767-3317",
                          "owner_id": 13,
                          "slugs": [
                            "2571-0767-3317"
                          ],
                          "internal_ip": "63d9:78ab:3c0b:b4bb:e768:f2d2:360c:5c8c",
                          "external_ip": "8d51:6342:7990:aee5:705a:8d64:2f42:80c6"
                        },
                        "relationships": {
                          "organisation": {
                            "data": {
                              "id": "13",
                              "type": "organisation"
                            }
                          },
                          "pairings": {
                            "data": [
                              {
                                "id": "28",
                                "type": "pairing"
                              }
                            ]
                          },
                          "ports": {
                            "data": [
                              {
                                "id": "105",
                                "type": "port"
                              },
                              {
                                "id": "106",
                                "type": "port"
                              },
                              {
                                "id": "107",
                                "type": "port"
                              },
                              {
                                "id": "108",
                                "type": "port"
                              }
                            ]
                          },
                          "devices": {
                            "data": []
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/connectors/27"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Wrong Include Error": {
                    "summary": "Wrong Include Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong `include` value(s) given: `spaceships`, `aliens`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "connectors"
        ]
      },
      "patch": {
        "description": "Update a Connector.",
        "operationId": "updateConnector",
        "summary": "Update Connector",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Id of a Connector to update."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read",
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Connector"
                },
                "examples": {
                  "Connector": {
                    "summary": "Connector",
                    "value": {
                      "data": {
                        "id": "43",
                        "type": "connector",
                        "attributes": {
                          "connector_key": "336173038107",
                          "serial": "4ba1f094-e9fa-48d3-90fd-fa7e11293885",
                          "last_seen_at": "2020-05-13T04:54:59.022Z",
                          "last_appeared_at": "2020-05-13T04:54:59.022Z",
                          "status": "offline",
                          "name": "Connector's name",
                          "deleted_at": null,
                          "updated_at": "2020-05-15T04:54:59.744Z",
                          "created_at": "2020-05-15T04:54:59.032Z",
                          "enrollment_server": null,
                          "connector_endpoint": null,
                          "last_reported_at": "2020-05-13T04:54:59.022Z",
                          "hardware": null,
                          "last_pairing_button_press_at": null,
                          "connector_key_nice": "3361-7303-8107",
                          "owner_id": 21,
                          "slugs": [
                            "connector-s-name",
                            "3361-7303-8107"
                          ],
                          "internal_ip": "dca6:1711:987f:35ac:4a86:b75f:e7af:c4da",
                          "external_ip": "543e:bdfc:89c3:8ac4:c64c:5ee5:b239:ea0b"
                        },
                        "relationships": {
                          "organisation": {
                            "data": {
                              "id": "21",
                              "type": "organisation"
                            }
                          },
                          "pairings": {
                            "data": [
                              {
                                "id": "46",
                                "type": "pairing"
                              }
                            ]
                          },
                          "ports": {
                            "data": [
                              {
                                "id": "171",
                                "type": "port"
                              },
                              {
                                "id": "172",
                                "type": "port"
                              },
                              {
                                "id": "173",
                                "type": "port"
                              },
                              {
                                "id": "174",
                                "type": "port"
                              }
                            ]
                          },
                          "devices": {
                            "data": []
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/connectors/43"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Bad Request Error": {
                    "summary": "Bad Request Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Missing `data` member at document's top level.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Conflict Missing Type Error": {
                    "summary": "Conflict Missing Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "Missing `type` member at document's `data` level.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Conflict Wrong Type Error": {
                    "summary": "Conflict Wrong Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "The given `type` member does not match the resource.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "connectors"
        ],
        "requestBody": {
          "description": "Update a Connector.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateConnector"
              },
              "example": {
                "data": {
                  "type": "connector",
                  "attributes": {
                    "name": "Connector's name"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Delete a Connector.",
        "operationId": "deleteConnector",
        "summary": "Delete Connector",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Id of a Connector to delete."
          },
          {
            "name": "deleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Real destroy."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read",
              "delete"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Success"
                },
                "examples": {
                  "Ok": {
                    "summary": "Ok",
                    "value": {
                      "meta": {
                        "result": "Success"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthorized Error": {
                    "summary": "Unauthorized Error",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "You do not have the required permissions to access this resource. Note: OAuth 2 scopes do not overrule application level permissions.",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Unauthorized Error because of a missed scope": {
                    "summary": "Unauthorized Error because of a missed scope",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "Insufficient OAuth2 scope to perform this operation. Required: Delete",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "connectors"
        ]
      }
    },
    "/connectors/{id}/reset_drivers": {
      "put": {
        "description": "Force reset the driver for all connected devices.",
        "operationId": "reset_driversConnector",
        "summary": "Reset Drivers Connector",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Id of a Connector to delete."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read",
              "write"
            ]
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Success"
                },
                "examples": {
                  "Accepted": {
                    "summary": "Accepted",
                    "value": {
                      "meta": {
                        "result": "Success"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthorized Error": {
                    "summary": "Unauthorized Error",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "You do not have the required permissions to access this resource. Note: OAuth 2 scopes do not overrule application level permissions.",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "connectors"
        ]
      }
    },
    "/connectors/restore": {
      "patch": {
        "description": "Restore a Connector.",
        "operationId": "restoreConnector",
        "summary": "Restore Connector",
        "security": [
          {
            "oauth2": [
              "read",
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Connectors"
                },
                "examples": {
                  "Ok": {
                    "summary": "Ok",
                    "value": {
                      "data": [
                        {
                          "id": "68",
                          "type": "connector",
                          "attributes": {
                            "connector_key": "000252468488",
                            "serial": "c9c574c5-6b95-458f-a001-282af5ff5829",
                            "last_seen_at": "2020-05-13T04:55:08.903Z",
                            "last_appeared_at": "2020-05-13T04:55:08.903Z",
                            "status": "offline",
                            "name": "0002-5246-8488",
                            "deleted_at": null,
                            "updated_at": "2020-05-15T04:55:09.562Z",
                            "created_at": "2020-05-15T04:55:08.912Z",
                            "enrollment_server": null,
                            "connector_endpoint": null,
                            "last_reported_at": "2020-05-13T04:55:08.903Z",
                            "hardware": null,
                            "last_pairing_button_press_at": null,
                            "connector_key_nice": "0002-5246-8488",
                            "owner_id": 34,
                            "slugs": [],
                            "internal_ip": "9dc7:c921:2883:44bf:218b:cea2:9ab8:ede3",
                            "external_ip": "71b1:5b38:d55b:af04:d06d:b516:64a1:63a0"
                          },
                          "relationships": {
                            "organisation": {
                              "data": {
                                "id": "32",
                                "type": "organisation"
                              }
                            },
                            "pairings": {
                              "data": [
                                {
                                  "id": "71",
                                  "type": "pairing"
                                }
                              ]
                            },
                            "ports": {
                              "data": [
                                {
                                  "id": "271",
                                  "type": "port"
                                },
                                {
                                  "id": "272",
                                  "type": "port"
                                },
                                {
                                  "id": "273",
                                  "type": "port"
                                },
                                {
                                  "id": "274",
                                  "type": "port"
                                }
                              ]
                            },
                            "devices": {
                              "data": []
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/connectors/68"
                          }
                        }
                      ]
                    }
                  },
                  "Ignore Unauthorized Error": {
                    "summary": "Ignore Unauthorized Error",
                    "value": {
                      "data": []
                    }
                  },
                  "Ignore Record Not Found Error": {
                    "summary": "Ignore Record Not Found Error",
                    "value": {
                      "data": []
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "connectors"
        ]
      }
    },
    "/dashboards": {
      "get": {
        "description": "Get a list of existing Dashboards.",
        "operationId": "getDashboards",
        "summary": "Get Dashboards",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "List of Dashboard attributes to be included in response."
          },
          {
            "name": "deleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Include soft deleted dashboards."
          },
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "Searching"
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Dashboards"
                },
                "examples": {
                  "List of Dashboards": {
                    "summary": "List of Dashboards",
                    "value": {
                      "data": [
                        {
                          "id": "1",
                          "type": "dashboard",
                          "attributes": {
                            "name": "Heavy Duty Wooden Bottle",
                            "created_at": "2020-03-12T17:28:37.669Z",
                            "slug": null,
                            "deleted_at": null,
                            "updated_at": "2020-03-12T17:28:37.669Z"
                          },
                          "relationships": {
                            "organisation": {
                              "data": {
                                "id": "1",
                                "type": "organisation"
                              }
                            },
                            "collections": {
                              "data": [
                                {
                                  "id": "2",
                                  "type": "collection"
                                }
                              ]
                            },
                            "view": {
                              "data": {
                                "id": "1",
                                "type": "view"
                              }
                            },
                            "owner": {
                              "data": {
                                "id": "1",
                                "type": "user"
                              }
                            }
                          },
                          "links": {
                            "prev": "",
                            "self": "https://cubuslab.lvh.me/api/v2/dashboards/1",
                            "next": "https://cubuslab.lvh.me/api/v2/dashboards/2"
                          }
                        },
                        {
                          "id": "3",
                          "type": "dashboard",
                          "attributes": {
                            "name": "Incredible Linen Bottle",
                            "created_at": "2020-03-12T17:28:38.164Z",
                            "slug": null,
                            "deleted_at": null,
                            "updated_at": "2020-03-12T17:28:38.164Z"
                          },
                          "relationships": {
                            "organisation": {
                              "data": {
                                "id": "1",
                                "type": "organisation"
                              }
                            },
                            "collections": {
                              "data": [
                                {
                                  "id": "2",
                                  "type": "collection"
                                }
                              ]
                            },
                            "view": {
                              "data": {
                                "id": "3",
                                "type": "view"
                              }
                            },
                            "owner": {
                              "data": {
                                "id": "1",
                                "type": "user"
                              }
                            }
                          },
                          "links": {
                            "prev": "https://cubuslab.lvh.me/api/v2/dashboards/2",
                            "self": "https://cubuslab.lvh.me/api/v2/dashboards/3",
                            "next": ""
                          }
                        }
                      ]
                    }
                  },
                  "List of found Dashboards": {
                    "summary": "List of found Dashboards",
                    "value": {
                      "data": [
                        {
                          "id": "4",
                          "type": "dashboard",
                          "attributes": {
                            "name": "Aerodynamic Iron Clock",
                            "created_at": "2020-03-12T17:28:38.672Z",
                            "slug": null,
                            "deleted_at": null,
                            "updated_at": "2020-03-12T17:28:38.672Z"
                          },
                          "relationships": {
                            "organisation": {
                              "data": {
                                "id": "2",
                                "type": "organisation"
                              }
                            },
                            "collections": {
                              "data": [
                                {
                                  "id": "10",
                                  "type": "collection"
                                }
                              ]
                            },
                            "view": {
                              "data": {
                                "id": "4",
                                "type": "view"
                              }
                            },
                            "owner": {
                              "data": {
                                "id": "7",
                                "type": "user"
                              }
                            }
                          },
                          "links": {
                            "prev": "",
                            "self": "https://cubuslab.lvh.me/api/v2/dashboards/4",
                            "next": "https://cubuslab.lvh.me/api/v2/dashboards/5"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Wrong Filter Error": {
                    "summary": "Wrong Filter Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong dashboards attributes given for filtering: `hair`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Wrong Fields Set Error": {
                    "summary": "Wrong Fields Set Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong `fields` value(s) for dashboards given: `invalid`, `DROP TABLE USERS`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "dashboards"
        ]
      },
      "post": {
        "description": "Create a Dashboard.",
        "operationId": "createDashboard",
        "summary": "Create Dashboard",
        "security": [
          {
            "oauth2": [
              "read",
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Dashboard"
                },
                "examples": {
                  "Dashboard": {
                    "summary": "Dashboard",
                    "value": {
                      "data": {
                        "id": "39",
                        "type": "dashboard",
                        "attributes": {
                          "name": "Test name 2",
                          "created_at": "2020-03-12T17:28:47.763Z",
                          "slug": null,
                          "deleted_at": null,
                          "updated_at": "2020-03-12T17:28:47.763Z"
                        },
                        "relationships": {
                          "organisation": {
                            "data": {
                              "id": "16",
                              "type": "organisation"
                            }
                          },
                          "collections": {
                            "data": [
                              {
                                "id": "113",
                                "type": "collection"
                              }
                            ]
                          },
                          "view": {
                            "data": {
                              "id": "39",
                              "type": "view"
                            }
                          },
                          "owner": {
                            "data": {
                              "id": "82",
                              "type": "user"
                            }
                          }
                        },
                        "links": {
                          "prev": "https://cubuslab.lvh.me/api/v2/dashboards/38",
                          "self": "https://cubuslab.lvh.me/api/v2/dashboards/39",
                          "next": ""
                        }
                      }
                    }
                  },
                  "Create a Dashboard copy": {
                    "summary": "Create a Dashboard copy",
                    "value": {
                      "data": {
                        "id": "42",
                        "type": "dashboard",
                        "attributes": {
                          "name": "Test name 2",
                          "created_at": "2020-03-12T17:28:48.443Z",
                          "slug": null,
                          "deleted_at": null,
                          "updated_at": "2020-03-12T17:28:48.443Z"
                        },
                        "relationships": {
                          "organisation": {
                            "data": {
                              "id": "17",
                              "type": "organisation"
                            }
                          },
                          "collections": {
                            "data": [
                              {
                                "id": "120",
                                "type": "collection"
                              }
                            ]
                          },
                          "view": {
                            "data": {
                              "id": "42",
                              "type": "view"
                            }
                          },
                          "owner": {
                            "data": {
                              "id": "87",
                              "type": "user"
                            }
                          }
                        },
                        "links": {
                          "prev": "https://cubuslab.lvh.me/api/v2/dashboards/41",
                          "self": "https://cubuslab.lvh.me/api/v2/dashboards/42",
                          "next": ""
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Bad Request Error": {
                    "summary": "Bad Request Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Missing `data` member at document's top level.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Missed Required Attributes Error": {
                    "summary": "Missed Required Attributes Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Missed required attribute(s) for dashboard: `name`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthorized Error because of a missed scope": {
                    "summary": "Unauthorized Error because of a missed scope",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "Insufficient OAuth2 scope to perform this operation. Required: Update",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Layout exemplar is forbidden": {
                    "summary": "Layout exemplar is forbidden",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "You do not have the required permissions to access this resource. Note: OAuth 2 scopes do not overrule application level permissions.",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Layout exemplar does not exist": {
                    "summary": "Layout exemplar does not exist",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "Dashboard exemplar with the ID that you passed does not exist or it had been archived",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Conflict Missing Type Error": {
                    "summary": "Conflict Missing Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "Missing `type` member at document's `data` level.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Conflict Wrong Type Error": {
                    "summary": "Conflict Wrong Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "The given `type` member does not match the resource.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "dashboards"
        ],
        "requestBody": {
          "description": "Create a Dashboard.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDashboard"
              },
              "example": {
                "data": {
                  "type": "dashboard",
                  "attributes": {
                    "name": "Test name 2",
                    "copy_from": "40"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/dashboards/{id}": {
      "get": {
        "description": "Get a single Dashboard by its id.",
        "operationId": "getDashboard",
        "summary": "Get Dashboard",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "An id of Dashboard to get."
          },
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "List of Dashboard attributes to be included in response."
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "List of related resource to include. Allowed values are: `organisation`."
          },
          {
            "name": "deleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Find in archive."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Dashboard"
                },
                "examples": {
                  "Dashboard": {
                    "summary": "Dashboard",
                    "value": {
                      "data": {
                        "id": "21",
                        "type": "dashboard",
                        "attributes": {
                          "name": "Lightweight Copper Plate",
                          "created_at": "2020-03-12T17:28:42.662Z",
                          "slug": null,
                          "deleted_at": null,
                          "updated_at": "2020-03-12T17:28:42.662Z"
                        },
                        "relationships": {
                          "organisation": {
                            "data": {
                              "id": "8",
                              "type": "organisation"
                            }
                          },
                          "collections": {
                            "data": [
                              {
                                "id": "57",
                                "type": "collection"
                              }
                            ]
                          },
                          "view": {
                            "data": {
                              "id": "21",
                              "type": "view"
                            }
                          },
                          "owner": {
                            "data": {
                              "id": "42",
                              "type": "user"
                            }
                          }
                        },
                        "links": {
                          "prev": "",
                          "self": "https://cubuslab.lvh.me/api/v2/dashboards/21",
                          "next": "https://cubuslab.lvh.me/api/v2/dashboards/22"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Wrong Include Error": {
                    "summary": "Wrong Include Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong `include` value(s) given: `spaceships`, `aliens`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Wrong Fields Set Error": {
                    "summary": "Wrong Fields Set Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong `fields` value(s) for dashboards given: `invalid`, `DROP TABLE USERS`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "dashboards"
        ]
      },
      "patch": {
        "description": "Update a Dashboard.",
        "operationId": "updateDashboard",
        "summary": "Update Dashboard",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Id of a Dashboard to update."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read",
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Dashboard"
                },
                "examples": {
                  "Dashboard": {
                    "summary": "Dashboard",
                    "value": {
                      "data": {
                        "id": "59",
                        "type": "dashboard",
                        "attributes": {
                          "name": "Test name updated",
                          "created_at": "2020-03-12T17:28:53.909Z",
                          "slug": null,
                          "deleted_at": null,
                          "updated_at": "2020-03-12T17:28:54.313Z"
                        },
                        "relationships": {
                          "organisation": {
                            "data": {
                              "id": "26",
                              "type": "organisation"
                            }
                          },
                          "collections": {
                            "data": [
                              {
                                "id": "183",
                                "type": "collection"
                              }
                            ]
                          },
                          "view": {
                            "data": {
                              "id": "59",
                              "type": "view"
                            }
                          },
                          "owner": {
                            "data": {
                              "id": "132",
                              "type": "user"
                            }
                          }
                        },
                        "links": {
                          "prev": "",
                          "self": "https://cubuslab.lvh.me/api/v2/dashboards/59",
                          "next": "https://cubuslab.lvh.me/api/v2/dashboards/60"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Bad Request Error": {
                    "summary": "Bad Request Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Missing `data` member at document's top level.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthorized Error because of a missed scope": {
                    "summary": "Unauthorized Error because of a missed scope",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "Insufficient OAuth2 scope to perform this operation. Required: Update",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Conflict Missing Type Error": {
                    "summary": "Conflict Missing Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "Missing `type` member at document's `data` level.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Conflict Wrong Type Error": {
                    "summary": "Conflict Wrong Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "The given `type` member does not match the resource.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "dashboards"
        ],
        "requestBody": {
          "description": "Update a Dashboard.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDashboard"
              },
              "example": {
                "data": {
                  "type": "dashboard",
                  "attributes": {
                    "name": "Test name updated"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Delete a Dashboard.",
        "operationId": "deleteDashboard",
        "summary": "Delete Dashboard",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Id of a Dashboard to delete."
          },
          {
            "name": "deleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Real destroy."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read",
              "delete"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Success"
                },
                "examples": {
                  "Ok": {
                    "summary": "Ok",
                    "value": {
                      "meta": {
                        "result": "Success"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthorized Error": {
                    "summary": "Unauthorized Error",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "You do not have the required permissions to access this resource. Note: OAuth 2 scopes do not overrule application level permissions.",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Unauthorized Error because of a missed scope": {
                    "summary": "Unauthorized Error because of a missed scope",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "Insufficient OAuth2 scope to perform this operation. Required: Delete",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "dashboards"
        ]
      }
    },
    "/dashboards/restore": {
      "patch": {
        "description": "Restore a Dashboard.",
        "operationId": "restoreDashboard",
        "summary": "Restore Dashboard",
        "security": [
          {
            "oauth2": [
              "read",
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Dashboards"
                },
                "examples": {
                  "Ok": {
                    "summary": "Ok",
                    "value": {
                      "data": [
                        {
                          "id": "85",
                          "type": "dashboard",
                          "attributes": {
                            "name": "Synergistic Wool Table",
                            "created_at": "2020-03-12T17:29:01.318Z",
                            "slug": null,
                            "deleted_at": null,
                            "updated_at": "2020-03-12T17:29:01.438Z"
                          },
                          "relationships": {
                            "organisation": {
                              "data": {
                                "id": "38",
                                "type": "organisation"
                              }
                            },
                            "collections": {
                              "data": [
                                {
                                  "id": "267",
                                  "type": "collection"
                                }
                              ]
                            },
                            "view": {
                              "data": {
                                "id": "85",
                                "type": "view"
                              }
                            },
                            "owner": {
                              "data": {
                                "id": "192",
                                "type": "user"
                              }
                            }
                          },
                          "links": {
                            "prev": "https://cubuslab.lvh.me/api/v2/dashboards/84",
                            "self": "https://cubuslab.lvh.me/api/v2/dashboards/85",
                            "next": ""
                          }
                        }
                      ]
                    }
                  },
                  "Ignore Unauthorized Error": {
                    "summary": "Ignore Unauthorized Error",
                    "value": {
                      "data": []
                    }
                  },
                  "Ignore Record Not Found Error": {
                    "summary": "Ignore Record Not Found Error",
                    "value": {
                      "data": []
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "dashboards"
        ]
      }
    },
    "/data_points": {
      "get": {
        "description": "Get a list of existing DataPoints.",
        "operationId": "getDataPoints",
        "summary": "Get Data Points",
        "parameters": [
          {
            "name": "filter",
            "required": true,
            "description": "Resources and/or attributes to filter by.",
            "in": "query",
            "schema": {
              "type": "object",
              "properties": {
                "data_points": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "channel_id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "timestamp": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "values": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "channel": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "device_id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "List of related channels to include. Allowed value is: `channel`."
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "Pagination"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "Sorting"
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DataPoints"
                },
                "examples": {
                  "List of DataPoints": {
                    "summary": "List of DataPoints",
                    "value": {
                      "data": [
                        [
                          404,
                          "2017-11-01T00:00:00.000Z",
                          10.6,
                          "abc"
                        ],
                        [
                          404,
                          "2017-11-02T00:00:00.000Z",
                          20.7,
                          "abc"
                        ],
                        [
                          404,
                          "2017-11-03T00:00:00.000Z",
                          30.8,
                          "abc"
                        ],
                        [
                          404,
                          "2017-11-04T00:00:00.000Z",
                          40.9,
                          "abc"
                        ],
                        [
                          404,
                          "2017-11-05T00:00:00.000Z",
                          50.1,
                          "abc"
                        ],
                        [
                          404,
                          "2017-11-06T00:00:00.000Z",
                          60.11,
                          "abc"
                        ],
                        [
                          404,
                          "2017-11-07T00:00:00.000Z",
                          70.12,
                          "abc"
                        ],
                        [
                          404,
                          "2017-11-08T00:00:00.000Z",
                          80.13,
                          "abc"
                        ],
                        [
                          405,
                          "2017-12-01T00:00:00.000Z",
                          10,
                          "abc"
                        ],
                        [
                          405,
                          "2017-12-02T00:00:00.000Z",
                          20,
                          "abc"
                        ],
                        [
                          405,
                          "2017-12-03T00:00:00.000Z",
                          30,
                          "abc"
                        ],
                        [
                          405,
                          "2017-12-04T00:00:00.000Z",
                          40,
                          "abc"
                        ],
                        [
                          405,
                          "2017-12-05T00:00:00.000Z",
                          50,
                          "abc"
                        ],
                        [
                          405,
                          "2017-12-06T00:00:00.000Z",
                          60,
                          "abc"
                        ],
                        [
                          405,
                          "2017-12-07T00:00:00.000Z",
                          70,
                          "abc"
                        ],
                        [
                          405,
                          "2017-12-08T00:00:00.000Z",
                          80,
                          "abc"
                        ]
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Bad Request Error": {
                    "summary": "Bad Request Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Missed required attribute(s) for data_points: filter[data_points][channel_id].",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthorized Error": {
                    "summary": "Unauthorized Error",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "You are not allowed to access this resource.",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "data_points"
        ]
      }
    },
    "/device_drivers": {
      "get": {
        "description": "Get a list of existing Device Drivers.",
        "operationId": "getDeviceDrivers",
        "summary": "Get Device Drivers",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "List of Device Driver attributes to be included in response."
          },
          {
            "name": "filter",
            "description": "Resources and/or attributes to filter by.",
            "in": "query",
            "schema": {
              "type": "object",
              "properties": {
                "device_drivers": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "name": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "version": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "Pagination"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "Sorting"
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceDrivers"
                },
                "examples": {
                  "List of Device Drivers": {
                    "summary": "List of Device Drivers",
                    "value": {
                      "data": [
                        {
                          "id": "35",
                          "type": "device_driver",
                          "attributes": {
                            "name": "2mag-mix",
                            "version": "develop",
                            "bundle": null,
                            "schema": null
                          },
                          "relationships": {
                            "devices": {
                              "data": []
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/device_drivers/35"
                          }
                        },
                        {
                          "id": "21",
                          "type": "device_driver",
                          "attributes": {
                            "name": "2mag-stirring-hotplate",
                            "version": "0.0.1",
                            "bundle": null,
                            "schema": null
                          },
                          "relationships": {
                            "devices": {
                              "data": []
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/device_drivers/21"
                          }
                        },
                        {
                          "id": "3",
                          "type": "device_driver",
                          "attributes": {
                            "name": "barcode-hid",
                            "version": "0.1.3",
                            "bundle": null,
                            "schema": null
                          },
                          "relationships": {
                            "devices": {
                              "data": []
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/device_drivers/3"
                          }
                        },
                        {
                          "id": "15",
                          "type": "device_driver",
                          "attributes": {
                            "name": "barcode-serial",
                            "version": "develop",
                            "bundle": null,
                            "schema": null
                          },
                          "relationships": {
                            "devices": {
                              "data": []
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/device_drivers/15"
                          }
                        },
                        {
                          "id": "38",
                          "type": "device_driver",
                          "attributes": {
                            "name": "buechi-b545",
                            "version": "0.0.1",
                            "bundle": null,
                            "schema": null
                          },
                          "relationships": {
                            "devices": {
                              "data": []
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/device_drivers/38"
                          }
                        },
                        {
                          "id": "40",
                          "type": "device_driver",
                          "attributes": {
                            "name": "eppendorf-innova",
                            "version": "develop",
                            "bundle": null,
                            "schema": null
                          },
                          "relationships": {
                            "devices": {
                              "data": []
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/device_drivers/40"
                          }
                        },
                        {
                          "id": "31",
                          "type": "device_driver",
                          "attributes": {
                            "name": "heidolph-connect",
                            "version": "0.0.2",
                            "bundle": null,
                            "schema": null
                          },
                          "relationships": {
                            "devices": {
                              "data": []
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/device_drivers/31"
                          }
                        },
                        {
                          "id": "25",
                          "type": "device_driver",
                          "attributes": {
                            "name": "heidolph-rzr",
                            "version": "develop",
                            "bundle": null,
                            "schema": null
                          },
                          "relationships": {
                            "devices": {
                              "data": []
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/device_drivers/25"
                          }
                        },
                        {
                          "id": "32",
                          "type": "device_driver",
                          "attributes": {
                            "name": "heidolph-torque",
                            "version": "0.0.4",
                            "bundle": null,
                            "schema": null
                          },
                          "relationships": {
                            "devices": {
                              "data": []
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/device_drivers/32"
                          }
                        },
                        {
                          "id": "7",
                          "type": "device_driver",
                          "attributes": {
                            "name": "heidolph-vap",
                            "version": "develop",
                            "bundle": null,
                            "schema": null
                          },
                          "relationships": {
                            "devices": {
                              "data": []
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/device_drivers/7"
                          }
                        },
                        {
                          "id": "36",
                          "type": "device_driver",
                          "attributes": {
                            "name": "huber-ministat",
                            "version": "1.0.0",
                            "bundle": null,
                            "schema": null
                          },
                          "relationships": {
                            "devices": {
                              "data": []
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/device_drivers/36"
                          }
                        },
                        {
                          "id": "13",
                          "type": "device_driver",
                          "attributes": {
                            "name": "huber-unistat",
                            "version": "develop",
                            "bundle": null,
                            "schema": null
                          },
                          "relationships": {
                            "devices": {
                              "data": []
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/device_drivers/13"
                          }
                        },
                        {
                          "id": "2",
                          "type": "device_driver",
                          "attributes": {
                            "name": "idle",
                            "version": "0.0.1",
                            "bundle": null,
                            "schema": null
                          },
                          "relationships": {
                            "devices": {
                              "data": []
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/device_drivers/2"
                          }
                        },
                        {
                          "id": "14",
                          "type": "device_driver",
                          "attributes": {
                            "name": "ika-eurostar",
                            "version": "1.0.0",
                            "bundle": null,
                            "schema": null
                          },
                          "relationships": {
                            "devices": {
                              "data": []
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/device_drivers/14"
                          }
                        },
                        {
                          "id": "43",
                          "type": "device_driver",
                          "attributes": {
                            "name": "ika-retcontrol",
                            "version": "0.0.5",
                            "bundle": null,
                            "schema": null
                          },
                          "relationships": {
                            "devices": {
                              "data": []
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/device_drivers/43"
                          }
                        },
                        {
                          "id": "24",
                          "type": "device_driver",
                          "attributes": {
                            "name": "integra-viaflo",
                            "version": "1.0.0",
                            "bundle": null,
                            "schema": null
                          },
                          "relationships": {
                            "devices": {
                              "data": []
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/device_drivers/24"
                          }
                        },
                        {
                          "id": "41",
                          "type": "device_driver",
                          "attributes": {
                            "name": "julabo-lc",
                            "version": "1.0.0",
                            "bundle": null,
                            "schema": null
                          },
                          "relationships": {
                            "devices": {
                              "data": []
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/device_drivers/41"
                          }
                        },
                        {
                          "id": "23",
                          "type": "device_driver",
                          "attributes": {
                            "name": "kds-legato",
                            "version": "0.0.1",
                            "bundle": null,
                            "schema": null
                          },
                          "relationships": {
                            "devices": {
                              "data": []
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/device_drivers/23"
                          }
                        },
                        {
                          "id": "20",
                          "type": "device_driver",
                          "attributes": {
                            "name": "kern-abj",
                            "version": "0.0.2",
                            "bundle": null,
                            "schema": null
                          },
                          "relationships": {
                            "devices": {
                              "data": []
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/device_drivers/20"
                          }
                        },
                        {
                          "id": "34",
                          "type": "device_driver",
                          "attributes": {
                            "name": "kern-plj",
                            "version": "0.0.2",
                            "bundle": null,
                            "schema": null
                          },
                          "relationships": {
                            "devices": {
                              "data": []
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/device_drivers/34"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Wrong Filter Error": {
                    "summary": "Wrong Filter Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong device_drivers attributes given for filtering: `hair`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "device_drivers"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CreateDeviceDriver"
              }
            }
          }
        },
        "description": "Create a DeviceDriver.",
        "operationId": "createDeviceDriver",
        "summary": "Create Device Driver",
        "security": [
          {
            "oauth2": [
              "read",
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceDriver"
                },
                "examples": {
                  "DeviceDriver": {
                    "summary": "DeviceDriver",
                    "value": {
                      "data": {
                        "id": "66",
                        "type": "device_driver",
                        "attributes": {
                          "name": "MyDriver",
                          "version": "09c96b1f-45fc-4370-b2e9-105f4f3e9d2c",
                          "bundle": "driver-astmserial-0.0.1.zip",
                          "schema": "astmserial_schema.json"
                        },
                        "relationships": {
                          "devices": {
                            "data": []
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/device_drivers/66"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Bad Request Error": {
                    "summary": "Bad Request Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Missing `data` member at document's top level.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthorized Error because of a missed scope": {
                    "summary": "Unauthorized Error because of a missed scope",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "Insufficient OAuth2 scope to perform this operation. Required: Update",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Conflict Missing Type Error": {
                    "summary": "Conflict Missing Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "Missing `type` member at document's `data` level.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Conflict Wrong Type Error": {
                    "summary": "Conflict Wrong Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "The given `type` member does not match the resource.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "device_drivers"
        ]
      }
    },
    "/device_drivers/{id}": {
      "patch": {
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDeviceDriver"
              }
            }
          }
        },
        "description": "Update a DeviceDriver.",
        "operationId": "updateDeviceDriver",
        "summary": "Update Device Driver",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Id of a DeviceDriver to update."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read",
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceDriver"
                },
                "examples": {
                  "DeviceDriver": {
                    "summary": "DeviceDriver",
                    "value": {
                      "data": {
                        "id": "72",
                        "type": "device_driver",
                        "attributes": {
                          "name": "MyDriver",
                          "version": "cc04e4e0-9902-4076-90f7-21f9201b19b3",
                          "bundle": "driver-astmserial-0.0.1.zip",
                          "schema": null
                        },
                        "relationships": {
                          "devices": {
                            "data": []
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/device_drivers/72"
                        }
                      }
                    }
                  },
                  "removing a file": {
                    "summary": "removing a file",
                    "value": {
                      "data": {
                        "id": "73",
                        "type": "device_driver",
                        "attributes": {
                          "name": "MyDriver",
                          "version": "0c34c6af-ac7c-43f8-b4f6-7b3c1881e0e9",
                          "bundle": null,
                          "schema": null
                        },
                        "relationships": {
                          "devices": {
                            "data": []
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/device_drivers/73"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Wrong Fields Set Error (all fieldnames are invalid)": {
                    "summary": "Wrong Fields Set Error (all fieldnames are invalid)",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong `fields` value(s) for device_drivers given: `invalid`, `invalid`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Wrong Fields Set Error (one fieldname is invalid)": {
                    "summary": "Wrong Fields Set Error (one fieldname is invalid)",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong `fields` value(s) for device_drivers given: `wrong`, `invalid`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Bad Request Error": {
                    "summary": "Bad Request Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Missing `data` member at document's top level.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthorized Error because of a missed scope": {
                    "summary": "Unauthorized Error because of a missed scope",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "Insufficient OAuth2 scope to perform this operation. Required: Update",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Conflict Missing Type Error": {
                    "summary": "Conflict Missing Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "Missing `type` member at document's `data` level.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Conflict Wrong Type Error": {
                    "summary": "Conflict Wrong Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "The given `type` member does not match the resource.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "device_drivers"
        ]
      },
      "get": {
        "description": "Get a single DeviceDriver by its id.",
        "operationId": "getDeviceDriver",
        "summary": "Get Device Driver",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "An id of the DeviceDriver to get."
          },
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "List of DeviceDriver attributes to be included in the response."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceDriver"
                },
                "examples": {
                  "DeviceDriver": {
                    "summary": "DeviceDriver",
                    "value": {
                      "data": {
                        "id": "59",
                        "type": "device_driver",
                        "attributes": {
                          "name": "MyDriver",
                          "version": "98a789d6-969d-4432-a813-bc09ab868499",
                          "bundle": null,
                          "schema": null
                        },
                        "relationships": {
                          "devices": {
                            "data": []
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/device_drivers/59"
                        }
                      }
                    }
                  },
                  "removing a file": {
                    "summary": "removing a file",
                    "value": {
                      "data": {
                        "id": "72",
                        "type": "device_driver",
                        "attributes": {
                          "name": "MyDriver",
                          "version": "45a16f46-39aa-4c33-88a0-362b5ec8b3f1",
                          "bundle": null,
                          "schema": null
                        },
                        "relationships": {
                          "devices": {
                            "data": []
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/device_drivers/72"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Wrong Fields Set Error (all fieldnames are invalid)": {
                    "summary": "Wrong Fields Set Error (all fieldnames are invalid)",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong `fields` value(s) for device_drivers given: `invalid`, `invalid`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Wrong Fields Set Error (one fieldname is invalid)": {
                    "summary": "Wrong Fields Set Error (one fieldname is invalid)",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong `fields` value(s) for device_drivers given: `wrong`, `invalid`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthorized Error because of a missed scope": {
                    "summary": "Unauthorized Error because of a missed scope",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "Insufficient OAuth2 scope to perform this operation. Required: Update",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Conflict Missing Type Error": {
                    "summary": "Conflict Missing Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "Missing `type` member at document's `data` level.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Conflict Wrong Type Error": {
                    "summary": "Conflict Wrong Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "The given `type` member does not match the resource.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "device_drivers"
        ]
      },
      "delete": {
        "description": "Delete a DeviceDriver.",
        "operationId": "deleteDeviceDriver",
        "summary": "Delete Device Driver",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Id of a DeviceDriver to delete."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read",
              "delete"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Success"
                },
                "examples": {
                  "Ok": {
                    "summary": "Ok",
                    "value": {
                      "meta": {
                        "result": "Success"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthorized Error": {
                    "summary": "Unauthorized Error",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "You do not have the required permissions to access this resource. Note: OAuth 2 scopes do not overrule application level permissions.",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Delete Restriction Error": {
                    "summary": "Delete Restriction Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "Cannot delete record because of dependent devices",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "device_drivers"
        ]
      }
    },
    "/device_types": {
      "get": {
        "description": "Get a list of existing Device Types.",
        "operationId": "getDeviceTypes",
        "summary": "Get Device Types",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "List of Device Types attributes to be included in response."
          },
          {
            "name": "filter",
            "description": "Resources and/or attributes to filter by.",
            "in": "query",
            "schema": {
              "type": "object",
              "properties": {
                "device_types": {
                  "type": "object",
                  "additionalProperties": false
                },
                "devices": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "name": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "slug": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "status": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "created_at": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "updated_at": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "device_type_id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "driver_parameters": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "simulate": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "custom_attributes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "List of related resource to include. Allowed values are: `devices`."
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "Pagination"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "Sorting"
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceTypes"
                },
                "examples": {
                  "List of Device Types": {
                    "summary": "List of Device Types",
                    "value": {
                      "data": [
                        {
                          "id": "9050",
                          "type": "device_type",
                          "attributes": {
                            "name": "MIXdrive",
                            "vendor": "2mag",
                            "device_class": "20",
                            "parameters": {
                              "usb_serial": {
                                "parity": "none",
                                "baudrate": 9600,
                                "databits": 8,
                                "stopbits": 1
                              }
                            },
                            "commands": [
                              {
                                "title": "set_rotation_setpoint",
                                "type": "number"
                              },
                              {
                                "title": "set_stirrer_status",
                                "enum": [
                                  0,
                                  1
                                ],
                                "enumLabels": [
                                  "off",
                                  "on"
                                ]
                              }
                            ],
                            "device_class_label": "Heating/Cooling Unit"
                          },
                          "relationships": {
                            "devices": {
                              "data": []
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/device_types/9050"
                          }
                        },
                        {
                          "id": "9051",
                          "type": "device_type",
                          "attributes": {
                            "name": "Stirring Hotplate 6",
                            "vendor": "2mag",
                            "device_class": "20",
                            "parameters": {
                              "usb_serial": {
                                "parity": "none",
                                "baudrate": 9600,
                                "databits": 8,
                                "stopbits": 1
                              }
                            },
                            "commands": [
                              {
                                "title": "set_rotation_setpoint",
                                "type": "number"
                              },
                              {
                                "title": "set_stirrer_status",
                                "enum": [
                                  0,
                                  1
                                ],
                                "enumLabels": [
                                  "off",
                                  "on"
                                ]
                              },
                              {
                                "title": "set_temperature_setpoint",
                                "type": "number"
                              },
                              {
                                "title": "set_heater_status",
                                "enum": [
                                  0,
                                  1
                                ],
                                "enumLabels": [
                                  "off",
                                  "on"
                                ]
                              }
                            ],
                            "device_class_label": "Heating/Cooling Unit"
                          },
                          "relationships": {
                            "devices": {
                              "data": []
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/device_types/9051"
                          }
                        },
                        {
                          "id": "9982",
                          "type": "device_type",
                          "attributes": {
                            "name": "MK-5800",
                            "vendor": "AlBaSca",
                            "device_class": "31",
                            "parameters": {
                              "usb_serial": {
                                "parity": "none",
                                "baudrate": 9600,
                                "databits": 8,
                                "stopbits": 1
                              }
                            },
                            "commands": [
                              {
                                "title": "simulate_input",
                                "label": "simulate_input"
                              }
                            ],
                            "device_class_label": "Camera"
                          },
                          "relationships": {
                            "devices": {
                              "data": []
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/device_types/9982"
                          }
                        },
                        {
                          "id": "3700",
                          "type": "device_type",
                          "attributes": {
                            "name": "TMD-56",
                            "vendor": "Amprobe",
                            "device_class": "3100",
                            "parameters": {
                              "usb_serial": {
                                "parity": "even",
                                "baudrate": 19200,
                                "databits": 8,
                                "stopbits": 1
                              }
                            },
                            "commands": [],
                            "device_class_label": "Probe"
                          },
                          "relationships": {
                            "devices": {
                              "data": []
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/device_types/3700"
                          }
                        },
                        {
                          "id": "9980",
                          "type": "device_type",
                          "attributes": {
                            "name": "USB Barcode Scanner",
                            "vendor": "Aplic",
                            "device_class": "31",
                            "parameters": {
                              "hid": {
                                "dummy": 1
                              }
                            },
                            "commands": [
                              {
                                "title": "simulate_input",
                                "label": "simulate_input"
                              }
                            ],
                            "device_class_label": "Camera"
                          },
                          "relationships": {
                            "devices": {
                              "data": []
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/device_types/9980"
                          }
                        },
                        {
                          "id": "3110",
                          "type": "device_type",
                          "attributes": {
                            "name": "Multichannel",
                            "vendor": "Arduino",
                            "device_class": "3100",
                            "parameters": {
                              "usb_serial": {
                                "parity": "none",
                                "baudrate": 9600,
                                "databits": 8,
                                "stopbits": 1
                              },
                              "configuration": {
                                "offset_pressure1": 0,
                                "offset_pressure2": 0,
                                "offset_pressure3": 0,
                                "offset_temperature1": 0,
                                "offset_temperature2": 0,
                                "offset_temperature3": 0
                              }
                            },
                            "commands": [],
                            "device_class_label": "Probe"
                          },
                          "relationships": {
                            "devices": {
                              "data": []
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/device_types/3110"
                          }
                        },
                        {
                          "id": "9941",
                          "type": "device_type",
                          "attributes": {
                            "name": "Safety Storage Cabinet",
                            "vendor": "Asecos",
                            "device_class": "1000",
                            "parameters": {
                              "usb_serial": {
                                "parity": "none",
                                "baudrate": 19200,
                                "databits": 8,
                                "stopbits": 2
                              }
                            },
                            "commands": [],
                            "device_class_label": "Custom Device Class"
                          },
                          "relationships": {
                            "devices": {
                              "data": []
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/device_types/9941"
                          }
                        },
                        {
                          "id": "3200",
                          "type": "device_type",
                          "attributes": {
                            "name": "HYTELOG",
                            "vendor": "B+B Thermo-Technik GmbH",
                            "device_class": "3100",
                            "parameters": {
                              "usb_serial": {
                                "parity": "none",
                                "baudrate": 4800,
                                "databits": 8,
                                "stopbits": 1
                              }
                            },
                            "commands": [],
                            "device_class_label": "Probe"
                          },
                          "relationships": {
                            "devices": {
                              "data": []
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/device_types/3200"
                          }
                        },
                        {
                          "id": "4800",
                          "type": "device_type",
                          "attributes": {
                            "name": "B-545",
                            "vendor": "Büchi",
                            "device_class": "1000",
                            "parameters": {
                              "usb_serial": {
                                "parity": "none",
                                "baudrate": 9600,
                                "databits": 8,
                                "stopbits": 1
                              }
                            },
                            "commands": [
                              {
                                "title": "Start",
                                "label": "Start"
                              },
                              {
                                "title": "Stop",
                                "label": "Stop"
                              },
                              {
                                "title": "SetSample",
                                "description": "Set Sample",
                                "label": "Set Sample"
                              }
                            ],
                            "device_class_label": "Custom Device Class"
                          },
                          "relationships": {
                            "devices": {
                              "data": []
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/device_types/4800"
                          }
                        },
                        {
                          "id": "4300",
                          "type": "device_type",
                          "attributes": {
                            "name": "S/SI Summit",
                            "vendor": "Denver Instruments",
                            "device_class": "25",
                            "parameters": {
                              "usb_serial": {
                                "parity": "odd",
                                "baudrate": 1200,
                                "databits": 7,
                                "stopbits": 1
                              }
                            },
                            "commands": [
                              {
                                "title": "get_weight",
                                "label": "print"
                              }
                            ],
                            "device_class_label": "Balance"
                          },
                          "relationships": {
                            "devices": {
                              "data": []
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/device_types/4300"
                          }
                        },
                        {
                          "id": "8000",
                          "type": "device_type",
                          "attributes": {
                            "name": "Innova 42",
                            "vendor": "Eppendorf",
                            "device_class": "8",
                            "parameters": {
                              "usb_serial": {
                                "parity": "none",
                                "baudrate": 19200,
                                "databits": 8,
                                "stopbits": 1
                              }
                            },
                            "commands": [
                              {
                                "title": "set_temperature_setpoint",
                                "type": "number"
                              },
                              {
                                "title": "set_rotation_setpoint",
                                "type": "number"
                              }
                            ],
                            "device_class_label": "Incubator"
                          },
                          "relationships": {
                            "devices": {
                              "data": []
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/device_types/8000"
                          }
                        },
                        {
                          "id": "9300",
                          "type": "device_type",
                          "attributes": {
                            "name": "Hei-Connect",
                            "vendor": "Heidolph",
                            "device_class": "20",
                            "parameters": {
                              "usb_serial": {
                                "parity": "even",
                                "baudrate": 9600,
                                "databits": 7,
                                "stopbits": 1
                              }
                            },
                            "commands": [
                              {
                                "title": "reset",
                                "label": "reset"
                              },
                              {
                                "title": "set_temperature_setpoint",
                                "type": "number"
                              },
                              {
                                "title": "set_rotation_setpoint",
                                "type": "number"
                              },
                              {
                                "title": "set_heater_status",
                                "enum": [
                                  0,
                                  1
                                ],
                                "enumLabels": [
                                  "off",
                                  "on"
                                ]
                              },
                              {
                                "title": "set_stirrer_status",
                                "enum": [
                                  0,
                                  1
                                ],
                                "enumLabels": [
                                  "off",
                                  "on"
                                ]
                              },
                              {
                                "title": "set_temperature_mode",
                                "enum": [
                                  0,
                                  1
                                ],
                                "enumLabels": [
                                  "int",
                                  "ext"
                                ]
                              }
                            ],
                            "device_class_label": "Heating/Cooling Unit"
                          },
                          "relationships": {
                            "devices": {
                              "data": []
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/device_types/9300"
                          }
                        },
                        {
                          "id": "9310",
                          "type": "device_type",
                          "attributes": {
                            "name": "Hei-TORQUE Precision 100",
                            "vendor": "Heidolph",
                            "device_class": "20",
                            "parameters": {
                              "usb_serial": {
                                "parity": "even",
                                "baudrate": 9600,
                                "databits": 7,
                                "stopbits": 1
                              }
                            },
                            "commands": [
                              {
                                "title": "set_rotation_setpoint",
                                "type": "number"
                              },
                              {
                                "title": "set_stirrer_status",
                                "enum": [
                                  0,
                                  1
                                ],
                                "enumLabels": [
                                  "off",
                                  "on"
                                ]
                              }
                            ],
                            "device_class_label": "Heating/Cooling Unit"
                          },
                          "relationships": {
                            "devices": {
                              "data": []
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/device_types/9310"
                          }
                        },
                        {
                          "id": "6000",
                          "type": "device_type",
                          "attributes": {
                            "name": "Hei-VAP",
                            "vendor": "Heidolph",
                            "device_class": "24",
                            "parameters": {
                              "usb_serial": {
                                "parity": "none",
                                "baudrate": 115200,
                                "databits": 8,
                                "stopbits": 1
                              }
                            },
                            "commands": [],
                            "device_class_label": "Evaporator"
                          },
                          "relationships": {
                            "devices": {
                              "data": []
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/device_types/6000"
                          }
                        },
                        {
                          "id": "9311",
                          "type": "device_type",
                          "attributes": {
                            "name": "RZR control",
                            "vendor": "Heidolph",
                            "device_class": "20",
                            "parameters": {
                              "usb_serial": {
                                "parity": "none",
                                "baudrate": 9600,
                                "databits": 8,
                                "stopbits": 1
                              }
                            },
                            "commands": [
                              {
                                "title": "set_rotation_setpoint",
                                "type": "number"
                              },
                              {
                                "title": "set_stirrer_status",
                                "enum": [
                                  0,
                                  1
                                ],
                                "enumLabels": [
                                  "off",
                                  "on"
                                ]
                              }
                            ],
                            "device_class_label": "Heating/Cooling Unit"
                          },
                          "relationships": {
                            "devices": {
                              "data": []
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/device_types/9311"
                          }
                        },
                        {
                          "id": "8200",
                          "type": "device_type",
                          "attributes": {
                            "name": "Ministat",
                            "vendor": "Huber",
                            "device_class": "5000",
                            "parameters": {
                              "usb_serial": {
                                "parity": "none",
                                "baudrate": 9600,
                                "databits": 8,
                                "stopbits": 1
                              }
                            },
                            "commands": [
                              {
                                "title": "set_temperature_setpoint",
                                "type": "number"
                              },
                              {
                                "title": "set_operation_status",
                                "enum": [
                                  0,
                                  1
                                ],
                                "enumLabels": [
                                  "off",
                                  "on"
                                ]
                              }
                            ],
                            "device_class_label": "Heat Control"
                          },
                          "relationships": {
                            "devices": {
                              "data": []
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/device_types/8200"
                          }
                        },
                        {
                          "id": "8201",
                          "type": "device_type",
                          "attributes": {
                            "name": "Unistat 410W",
                            "vendor": "Huber",
                            "device_class": "5000",
                            "parameters": {
                              "usb_serial": {
                                "parity": "none",
                                "baudrate": 9600,
                                "databits": 8,
                                "stopbits": 1
                              }
                            },
                            "commands": [
                              {
                                "title": "set_temperature_setpoint",
                                "type": "number"
                              },
                              {
                                "title": "set_operation_status",
                                "enum": [
                                  0,
                                  1
                                ],
                                "enumLabels": [
                                  "off",
                                  "on"
                                ]
                              }
                            ],
                            "device_class_label": "Heat Control"
                          },
                          "relationships": {
                            "devices": {
                              "data": []
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/device_types/8201"
                          }
                        },
                        {
                          "id": "9001",
                          "type": "device_type",
                          "attributes": {
                            "name": "C-MAG HS 7 control",
                            "vendor": "IKA",
                            "device_class": "20",
                            "parameters": {
                              "usb_serial": {
                                "parity": "even",
                                "baudrate": 9600,
                                "databits": 7,
                                "stopbits": 1
                              }
                            },
                            "commands": [
                              {
                                "title": "set_temperature_setpoint",
                                "type": "number"
                              },
                              {
                                "title": "set_rotation_setpoint",
                                "type": "number"
                              },
                              {
                                "title": "set_heater_status",
                                "enum": [
                                  0,
                                  1
                                ],
                                "enumLabels": [
                                  "off",
                                  "on"
                                ]
                              },
                              {
                                "title": "set_stirrer_status",
                                "enum": [
                                  0,
                                  1
                                ],
                                "enumLabels": [
                                  "off",
                                  "on"
                                ]
                              }
                            ],
                            "device_class_label": "Heating/Cooling Unit"
                          },
                          "relationships": {
                            "devices": {
                              "data": []
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/device_types/9001"
                          }
                        },
                        {
                          "id": "9201",
                          "type": "device_type",
                          "attributes": {
                            "name": "EUROSTAR 100 control",
                            "vendor": "IKA",
                            "device_class": "20",
                            "parameters": {
                              "usb_serial": {
                                "parity": "even",
                                "baudrate": 9600,
                                "databits": 7,
                                "stopbits": 1
                              }
                            },
                            "commands": [
                              {
                                "title": "reset",
                                "label": "reset"
                              },
                              {
                                "title": "set_rotation_setpoint",
                                "type": "number"
                              },
                              {
                                "title": "set_stirrer_status",
                                "enum": [
                                  0,
                                  1
                                ],
                                "enumLabels": [
                                  "off",
                                  "on"
                                ]
                              }
                            ],
                            "device_class_label": "Heating/Cooling Unit"
                          },
                          "relationships": {
                            "devices": {
                              "data": []
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/device_types/9201"
                          }
                        },
                        {
                          "id": "9200",
                          "type": "device_type",
                          "attributes": {
                            "name": "EUROSTAR 60 control",
                            "vendor": "IKA",
                            "device_class": "20",
                            "parameters": {
                              "usb_serial": {
                                "parity": "even",
                                "baudrate": 9600,
                                "databits": 7,
                                "stopbits": 1
                              }
                            },
                            "commands": [
                              {
                                "title": "reset",
                                "label": "reset"
                              },
                              {
                                "title": "set_rotation_setpoint",
                                "type": "number"
                              },
                              {
                                "title": "set_stirrer_status",
                                "enum": [
                                  0,
                                  1
                                ],
                                "enumLabels": [
                                  "off",
                                  "on"
                                ]
                              }
                            ],
                            "device_class_label": "Heating/Cooling Unit"
                          },
                          "relationships": {
                            "devices": {
                              "data": []
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/device_types/9200"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "device_types"
        ]
      }
    },
    "/device_types/{id}": {
      "get": {
        "description": "Get a single Device Type by its id.",
        "operationId": "getDeviceType",
        "summary": "Get Device Type",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "An id of Device Type to get."
          },
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "List of Device Type attributes to be included in response."
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "List of related resource to include. Allowed values are: `devices`"
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceType"
                },
                "examples": {
                  "Device Type": {
                    "summary": "Device Type",
                    "value": {
                      "data": {
                        "id": "9051",
                        "type": "device_type",
                        "attributes": {
                          "name": "Stirring Hotplate 6",
                          "vendor": "2mag",
                          "device_class": "20",
                          "parameters": {
                            "usb_serial": {
                              "parity": "none",
                              "baudrate": 9600,
                              "databits": 8,
                              "stopbits": 1
                            }
                          },
                          "commands": [
                            {
                              "title": "set_rotation_setpoint",
                              "type": "number"
                            },
                            {
                              "title": "set_stirrer_status",
                              "enum": [
                                0,
                                1
                              ],
                              "enumLabels": [
                                "off",
                                "on"
                              ]
                            },
                            {
                              "title": "set_temperature_setpoint",
                              "type": "number"
                            },
                            {
                              "title": "set_heater_status",
                              "enum": [
                                0,
                                1
                              ],
                              "enumLabels": [
                                "off",
                                "on"
                              ]
                            }
                          ],
                          "device_class_label": "Heating/Cooling Unit"
                        },
                        "relationships": {
                          "devices": {
                            "data": [
                              {
                                "id": "64",
                                "type": "device"
                              },
                              {
                                "id": "65",
                                "type": "device"
                              }
                            ]
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/device_types/9051"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Wrong Include Error": {
                    "summary": "Wrong Include Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong `include` value(s) given: `spaceships`, `aliens`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "device_types"
        ]
      }
    },
    "/devices": {
      "get": {
        "description": "Get a list of existing Devices.",
        "operationId": "getDevices",
        "summary": "Get Devices",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "List of Devices attributes to be included in response."
          },
          {
            "name": "filter",
            "description": "Resources and/or attributes to filter by.",
            "in": "query",
            "schema": {
              "type": "object",
              "properties": {
                "devices": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "name": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "slug": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "status": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "created_at": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "updated_at": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "device_type_id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "driver_parameters": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "simulate": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "custom_attributes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "owner": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "username": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "email": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "channels": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "device_id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "connector": {
                  "type": "object",
                  "additionalProperties": false
                },
                "tasks": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "name": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "custom_attributes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "users": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "username": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "email": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "device_type": {
                  "type": "object",
                  "additionalProperties": false
                },
                "driver": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "name": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "version": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "List of related resource to include. Allowed values are: `admin`, `channels`, `connector`, `tasks`, `users`."
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "Pagination"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "Sorting"
          },
          {
            "name": "deleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Include soft deleted devices."
          },
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "Searching"
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Devices"
                },
                "examples": {
                  "List of Devices": {
                    "summary": "List of Devices",
                    "value": {
                      "data": [
                        {
                          "id": "1",
                          "type": "device",
                          "attributes": {
                            "name": "Practical Copper Car",
                            "status": "online",
                            "slug": "practical-copper-car",
                            "driver_parameters": {
                              "usb_serial": {
                                "parity": "none",
                                "baudrate": 9600,
                                "databits": 8,
                                "stopbits": 1
                              }
                            },
                            "custom_attributes": [],
                            "vendor": "Mettler Toledo",
                            "device_class": "25",
                            "created_at": "2020-02-24T15:04:05.863Z",
                            "updated_at": "2020-02-24T15:04:05.863Z",
                            "deleted_at": null,
                            "device_type": {
                              "id": 4401,
                              "device_class": "25",
                              "name": "AX26",
                              "vendor": "Mettler Toledo",
                              "parameters": {
                                "usb_serial": {
                                  "parity": "none",
                                  "baudrate": 9600,
                                  "databits": 8,
                                  "stopbits": 1
                                }
                              },
                              "created_at": "2020-02-24T15:04:04.016Z",
                              "updated_at": "2020-02-24T15:04:04.016Z",
                              "plugnplay": {
                                "usb_id": "universalserial",
                                "passive_detection": false
                              },
                              "driver_type": {
                                "name": "driver-sicsserial",
                                "version": "1.0.1"
                              },
                              "capabilities": []
                            },
                            "operator_id": null,
                            "slugs": [
                              "practical-copper-car"
                            ],
                            "display_name": "Practical Copper Car",
                            "commands": [
                              {
                                "title": "get_weight",
                                "label": "print"
                              },
                              {
                                "title": "set_zero",
                                "label": "zero"
                              }
                            ],
                            "status_channel_id": 3
                          },
                          "relationships": {
                            "owner": {
                              "data": {
                                "id": "1",
                                "type": "user"
                              }
                            },
                            "connector": {
                              "data": null
                            },
                            "driver": {
                              "data": {
                                "id": "9",
                                "type": "driver"
                              }
                            },
                            "device_type": {
                              "data": {
                                "id": "4401",
                                "type": "device_type"
                              }
                            },
                            "users": {
                              "data": [
                                {
                                  "id": "1",
                                  "type": "user"
                                }
                              ]
                            },
                            "tasks": {
                              "data": []
                            },
                            "channels": {
                              "data": [
                                {
                                  "id": "1",
                                  "type": "channel"
                                },
                                {
                                  "id": "2",
                                  "type": "channel"
                                },
                                {
                                  "id": "3",
                                  "type": "channel"
                                }
                              ]
                            },
                            "view": {
                              "data": {
                                "id": "1",
                                "type": "view"
                              }
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/devices/1"
                          }
                        },
                        {
                          "id": "2",
                          "type": "device",
                          "attributes": {
                            "name": "Aerodynamic Bronze Bench",
                            "status": "offline",
                            "slug": "aerodynamic-bronze-bench",
                            "driver_parameters": {
                              "usb_serial": {
                                "parity": "none",
                                "baudrate": 9600,
                                "databits": 8,
                                "stopbits": 1
                              }
                            },
                            "custom_attributes": [],
                            "vendor": "Mettler Toledo",
                            "device_class": "25",
                            "created_at": "2020-02-24T15:04:06.054Z",
                            "updated_at": "2020-02-24T15:04:06.054Z",
                            "deleted_at": null,
                            "device_type": {
                              "id": 4401,
                              "device_class": "25",
                              "name": "AX26",
                              "vendor": "Mettler Toledo",
                              "parameters": {
                                "usb_serial": {
                                  "parity": "none",
                                  "baudrate": 9600,
                                  "databits": 8,
                                  "stopbits": 1
                                }
                              },
                              "created_at": "2020-02-24T15:04:04.016Z",
                              "updated_at": "2020-02-24T15:04:04.016Z",
                              "plugnplay": {
                                "usb_id": "universalserial",
                                "passive_detection": false
                              },
                              "driver_type": {
                                "name": "driver-sicsserial",
                                "version": "1.0.1"
                              },
                              "capabilities": []
                            },
                            "operator_id": null,
                            "slugs": [
                              "aerodynamic-bronze-bench"
                            ],
                            "display_name": "Aerodynamic Bronze Bench",
                            "commands": [
                              {
                                "title": "get_weight",
                                "label": "print"
                              },
                              {
                                "title": "set_zero",
                                "label": "zero"
                              }
                            ],
                            "status_channel_id": 6
                          },
                          "relationships": {
                            "owner": {
                              "data": {
                                "id": "1",
                                "type": "user"
                              }
                            },
                            "connector": {
                              "data": {
                                "id": "1",
                                "type": "connector"
                              }
                            },
                            "driver": {
                              "data": {
                                "id": "9",
                                "type": "driver"
                              }
                            },
                            "device_type": {
                              "data": {
                                "id": "4401",
                                "type": "device_type"
                              }
                            },
                            "users": {
                              "data": [
                                {
                                  "id": "1",
                                  "type": "user"
                                }
                              ]
                            },
                            "tasks": {
                              "data": []
                            },
                            "channels": {
                              "data": [
                                {
                                  "id": "4",
                                  "type": "channel"
                                },
                                {
                                  "id": "5",
                                  "type": "channel"
                                },
                                {
                                  "id": "6",
                                  "type": "channel"
                                }
                              ]
                            },
                            "view": {
                              "data": {
                                "id": "2",
                                "type": "view"
                              }
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/devices/2"
                          }
                        },
                        {
                          "id": "4",
                          "type": "device",
                          "attributes": {
                            "name": "Enormous Paper Computer",
                            "status": "offline",
                            "slug": "enormous-paper-computer",
                            "driver_parameters": {
                              "usb_serial": {
                                "parity": "none",
                                "baudrate": 9600,
                                "databits": 8,
                                "stopbits": 1
                              }
                            },
                            "custom_attributes": [],
                            "vendor": "KNF",
                            "device_class": "26",
                            "created_at": "2020-02-24T15:04:06.684Z",
                            "updated_at": "2020-02-24T15:04:06.684Z",
                            "deleted_at": null,
                            "device_type": {
                              "id": 5000,
                              "device_class": "26",
                              "name": "SIMDOS 02",
                              "vendor": "KNF",
                              "parameters": {
                                "usb_serial": {
                                  "parity": "none",
                                  "baudrate": 9600,
                                  "databits": 8,
                                  "stopbits": 1
                                }
                              },
                              "created_at": "2020-02-24T15:04:03.873Z",
                              "updated_at": "2020-02-24T15:04:03.873Z",
                              "plugnplay": {
                                "usb_id": "universalserial",
                                "passive_detection": false
                              },
                              "driver_type": {
                                "name": "driver-knf-simdos02",
                                "version": "0.0.2"
                              },
                              "capabilities": []
                            },
                            "operator_id": null,
                            "slugs": [
                              "enormous-paper-computer"
                            ],
                            "display_name": "Enormous Paper Computer",
                            "commands": [
                              {
                                "title": "set_flowrate_setpoint",
                                "type": "number"
                              },
                              {
                                "title": "set_pump_engine",
                                "enum": [
                                  0,
                                  1
                                ],
                                "enumLabels": [
                                  "off",
                                  "on"
                                ]
                              }
                            ],
                            "status_channel_id": 12
                          },
                          "relationships": {
                            "owner": {
                              "data": {
                                "id": "1",
                                "type": "user"
                              }
                            },
                            "connector": {
                              "data": {
                                "id": "2",
                                "type": "connector"
                              }
                            },
                            "driver": {
                              "data": {
                                "id": "29",
                                "type": "driver"
                              }
                            },
                            "device_type": {
                              "data": {
                                "id": "5000",
                                "type": "device_type"
                              }
                            },
                            "users": {
                              "data": [
                                {
                                  "id": "1",
                                  "type": "user"
                                }
                              ]
                            },
                            "tasks": {
                              "data": []
                            },
                            "channels": {
                              "data": [
                                {
                                  "id": "10",
                                  "type": "channel"
                                },
                                {
                                  "id": "11",
                                  "type": "channel"
                                },
                                {
                                  "id": "12",
                                  "type": "channel"
                                }
                              ]
                            },
                            "view": {
                              "data": {
                                "id": "4",
                                "type": "view"
                              }
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/devices/4"
                          }
                        }
                      ]
                    }
                  },
                  "List of found Devices": {
                    "summary": "List of found Devices",
                    "value": {
                      "data": [
                        {
                          "id": "8",
                          "type": "device",
                          "attributes": {
                            "name": "Practical Granite Clock",
                            "status": "offline",
                            "slug": "practical-granite-clock",
                            "driver_parameters": {
                              "usb_serial": {
                                "parity": "none",
                                "baudrate": 9600,
                                "databits": 8,
                                "stopbits": 1
                              }
                            },
                            "custom_attributes": [],
                            "vendor": "KNF",
                            "device_class": "26",
                            "created_at": "2020-02-24T15:04:07.874Z",
                            "updated_at": "2020-02-24T15:04:07.874Z",
                            "deleted_at": null,
                            "device_type": {
                              "id": 5000,
                              "device_class": "26",
                              "name": "SIMDOS 02",
                              "vendor": "KNF",
                              "parameters": {
                                "usb_serial": {
                                  "parity": "none",
                                  "baudrate": 9600,
                                  "databits": 8,
                                  "stopbits": 1
                                }
                              },
                              "created_at": "2020-02-24T15:04:03.873Z",
                              "updated_at": "2020-02-24T15:04:03.873Z",
                              "plugnplay": {
                                "usb_id": "universalserial",
                                "passive_detection": false
                              },
                              "driver_type": {
                                "name": "driver-knf-simdos02",
                                "version": "0.0.2"
                              },
                              "capabilities": []
                            },
                            "operator_id": null,
                            "slugs": [
                              "practical-granite-clock"
                            ],
                            "display_name": "Practical Granite Clock",
                            "commands": [
                              {
                                "title": "set_flowrate_setpoint",
                                "type": "number"
                              },
                              {
                                "title": "set_pump_engine",
                                "enum": [
                                  0,
                                  1
                                ],
                                "enumLabels": [
                                  "off",
                                  "on"
                                ]
                              }
                            ],
                            "status_channel_id": 24
                          },
                          "relationships": {
                            "owner": {
                              "data": {
                                "id": "5",
                                "type": "user"
                              }
                            },
                            "connector": {
                              "data": {
                                "id": "4",
                                "type": "connector"
                              }
                            },
                            "driver": {
                              "data": {
                                "id": "29",
                                "type": "driver"
                              }
                            },
                            "device_type": {
                              "data": {
                                "id": "5000",
                                "type": "device_type"
                              }
                            },
                            "users": {
                              "data": [
                                {
                                  "id": "5",
                                  "type": "user"
                                }
                              ]
                            },
                            "tasks": {
                              "data": []
                            },
                            "channels": {
                              "data": [
                                {
                                  "id": "22",
                                  "type": "channel"
                                },
                                {
                                  "id": "23",
                                  "type": "channel"
                                },
                                {
                                  "id": "24",
                                  "type": "channel"
                                }
                              ]
                            },
                            "view": {
                              "data": {
                                "id": "8",
                                "type": "view"
                              }
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/devices/8"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "devices"
        ]
      }
    },
    "/devices/{id}": {
      "get": {
        "description": "Get a single Device by its id.",
        "operationId": "getDevice",
        "summary": "Get Device",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "An id of Device to get."
          },
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "List of Device attributes to be included in response."
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "List of related resources to include. Allowed values are: `channels`, `tasks`, `users`."
          },
          {
            "name": "deleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Find in archive."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Device"
                },
                "examples": {
                  "Device": {
                    "summary": "Device",
                    "value": {
                      "data": {
                        "id": "12",
                        "type": "device",
                        "attributes": {
                          "name": "Awesome Leather Shoes",
                          "status": "online",
                          "slug": "awesome-leather-shoes",
                          "driver_parameters": {
                            "usb_serial": {
                              "parity": "none",
                              "baudrate": 9600,
                              "databits": 8,
                              "stopbits": 1
                            }
                          },
                          "custom_attributes": [],
                          "vendor": "Mettler Toledo",
                          "device_class": "25",
                          "created_at": "2020-02-24T15:04:09.097Z",
                          "updated_at": "2020-02-24T15:04:09.097Z",
                          "deleted_at": null,
                          "device_type": {
                            "id": 4401,
                            "device_class": "25",
                            "name": "AX26",
                            "vendor": "Mettler Toledo",
                            "parameters": {
                              "usb_serial": {
                                "parity": "none",
                                "baudrate": 9600,
                                "databits": 8,
                                "stopbits": 1
                              }
                            },
                            "created_at": "2020-02-24T15:04:04.016Z",
                            "updated_at": "2020-02-24T15:04:04.016Z",
                            "plugnplay": {
                              "usb_id": "universalserial",
                              "passive_detection": false
                            },
                            "driver_type": {
                              "name": "driver-sicsserial",
                              "version": "1.0.1"
                            },
                            "capabilities": []
                          },
                          "operator_id": null,
                          "slugs": [
                            "awesome-leather-shoes"
                          ],
                          "display_name": "Awesome Leather Shoes",
                          "commands": [
                            {
                              "title": "get_weight",
                              "label": "print"
                            },
                            {
                              "title": "set_zero",
                              "label": "zero"
                            }
                          ],
                          "status_channel_id": 36
                        },
                        "relationships": {
                          "owner": {
                            "data": {
                              "id": "12",
                              "type": "user"
                            }
                          },
                          "connector": {
                            "data": null
                          },
                          "driver": {
                            "data": {
                              "id": "9",
                              "type": "driver"
                            }
                          },
                          "device_type": {
                            "data": {
                              "id": "4401",
                              "type": "device_type"
                            }
                          },
                          "users": {
                            "data": [
                              {
                                "id": "12",
                                "type": "user"
                              }
                            ]
                          },
                          "tasks": {
                            "data": []
                          },
                          "channels": {
                            "data": [
                              {
                                "id": "34",
                                "type": "channel"
                              },
                              {
                                "id": "35",
                                "type": "channel"
                              },
                              {
                                "id": "36",
                                "type": "channel"
                              }
                            ]
                          },
                          "view": {
                            "data": {
                              "id": "12",
                              "type": "view"
                            }
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/devices/12"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Wrong Include Error": {
                    "summary": "Wrong Include Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong `include` value(s) given: `spaceships`, `aliens`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "devices"
        ]
      },
      "patch": {
        "description": "Update a Device.",
        "operationId": "updateDevice",
        "summary": "Update Device",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Id of a Device to update."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read",
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Device"
                },
                "examples": {
                  "Device": {
                    "summary": "Device",
                    "value": {
                      "data": {
                        "id": "30",
                        "type": "device",
                        "attributes": {
                          "name": "Device's name",
                          "status": "online",
                          "slug": "device-s-name",
                          "driver_parameters": {
                            "usb_serial": {
                              "parity": "none",
                              "baudrate": 9600,
                              "databits": 8,
                              "stopbits": 1
                            }
                          },
                          "custom_attributes": [],
                          "vendor": "Mettler Toledo",
                          "device_class": "25",
                          "created_at": "2020-02-24T15:04:14.397Z",
                          "updated_at": "2020-02-24T15:04:15.050Z",
                          "deleted_at": null,
                          "device_type": {
                            "id": 4401,
                            "device_class": "25",
                            "name": "AX26",
                            "vendor": "Mettler Toledo",
                            "parameters": {
                              "usb_serial": {
                                "parity": "none",
                                "baudrate": 9600,
                                "databits": 8,
                                "stopbits": 1
                              }
                            },
                            "created_at": "2020-02-24T15:04:04.016Z",
                            "updated_at": "2020-02-24T15:04:04.016Z",
                            "plugnplay": {
                              "usb_id": "universalserial",
                              "passive_detection": false
                            },
                            "driver_type": {
                              "name": "driver-sicsserial",
                              "version": "1.0.1"
                            },
                            "capabilities": []
                          },
                          "operator_id": null,
                          "slugs": [
                            "device-s-name",
                            "awesome-bronze-clock"
                          ],
                          "display_name": "Device's name",
                          "commands": [
                            {
                              "title": "get_weight",
                              "label": "print"
                            },
                            {
                              "title": "set_zero",
                              "label": "zero"
                            }
                          ],
                          "status_channel_id": 90
                        },
                        "relationships": {
                          "owner": {
                            "data": {
                              "id": "36",
                              "type": "user"
                            }
                          },
                          "connector": {
                            "data": null
                          },
                          "driver": {
                            "data": {
                              "id": "9",
                              "type": "driver"
                            }
                          },
                          "device_type": {
                            "data": {
                              "id": "4401",
                              "type": "device_type"
                            }
                          },
                          "users": {
                            "data": [
                              {
                                "id": "36",
                                "type": "user"
                              }
                            ]
                          },
                          "tasks": {
                            "data": []
                          },
                          "channels": {
                            "data": [
                              {
                                "id": "88",
                                "type": "channel"
                              },
                              {
                                "id": "89",
                                "type": "channel"
                              },
                              {
                                "id": "90",
                                "type": "channel"
                              }
                            ]
                          },
                          "view": {
                            "data": {
                              "id": "30",
                              "type": "view"
                            }
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/devices/30"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Bad Request Error": {
                    "summary": "Bad Request Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Missing `data` member at document's top level.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Conflict Missing Type Error": {
                    "summary": "Conflict Missing Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "Missing `type` member at document's `data` level.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Conflict Wrong Type Error": {
                    "summary": "Conflict Wrong Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "The given `type` member does not match the resource.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "devices"
        ],
        "requestBody": {
          "description": "Update a Device.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDevice"
              },
              "example": {
                "data": {
                  "type": "device",
                  "attributes": {
                    "name": "Device's name"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Delete a Device.",
        "operationId": "deleteDevice",
        "summary": "Delete Device",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Id of a Device to delete."
          },
          {
            "name": "deleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Real destroy."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read",
              "delete"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Success"
                },
                "examples": {
                  "Ok": {
                    "summary": "Ok",
                    "value": {
                      "meta": {
                        "result": "Success"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthorized Error": {
                    "summary": "Unauthorized Error",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "You do not have the required permissions to access this resource. Note: OAuth 2 scopes do not overrule application level permissions.",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "devices"
        ]
      }
    },
    "/devices/{id}/command": {
      "put": {
        "description": "Send a command to a device.",
        "operationId": "commandDevice",
        "summary": "Command Device",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "The ID of the Device that should execute the command."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read",
              "write"
            ]
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Device"
                },
                "examples": {
                  "Command Execution": {
                    "summary": "Command Execution",
                    "value": {
                      "data": {
                        "id": "1",
                        "type": "command_execution",
                        "attributes": {
                          "id": 1,
                          "uuid": "8ec70e82-e876-4916-b0ac-f2138ebfbf13",
                          "parameters": {
                            "command": "get_weight"
                          },
                          "device_id": 48,
                          "user_id": 54,
                          "status": "sent",
                          "confirmed_at": null,
                          "finished_at": null,
                          "data": null,
                          "created_at": "2020-02-24T15:04:19.852Z",
                          "updated_at": "2020-02-24T15:04:19.852Z"
                        },
                        "relationships": {
                          "device": {
                            "data": {
                              "id": "48",
                              "type": "device"
                            }
                          },
                          "user": {
                            "data": {
                              "id": "54",
                              "type": "user"
                            }
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/command_executions/1"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Invalid Command Error": {
                    "summary": "Invalid Command Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Device Type 4401 does not have a command 'invalid_command'.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Device Not Ready Error": {
                    "summary": "Device Not Ready Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "Device is not ready. Current status: offline.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "devices"
        ]
      }
    },
    "/devices/restore": {
      "patch": {
        "description": "Restore a Device.",
        "operationId": "restoreDevice",
        "summary": "Restore Device",
        "security": [
          {
            "oauth2": [
              "read",
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Devices"
                },
                "examples": {
                  "Ok": {
                    "summary": "Ok",
                    "value": {
                      "data": [
                        {
                          "id": "78",
                          "type": "device",
                          "attributes": {
                            "name": "Rustic Iron Pants",
                            "status": "online",
                            "slug": "rustic-iron-pants",
                            "driver_parameters": {
                              "usb_serial": {
                                "parity": "none",
                                "baudrate": 19200,
                                "databits": 8,
                                "stopbits": 1
                              }
                            },
                            "custom_attributes": [],
                            "vendor": "Vacuubrand",
                            "device_class": "27",
                            "created_at": "2020-02-24T15:04:27.764Z",
                            "updated_at": "2020-02-24T15:04:28.098Z",
                            "deleted_at": null,
                            "device_type": {
                              "id": 2000,
                              "device_class": "27",
                              "name": "PC 3001",
                              "vendor": "Vacuubrand",
                              "parameters": {
                                "usb_serial": {
                                  "parity": "none",
                                  "baudrate": 19200,
                                  "databits": 8,
                                  "stopbits": 1
                                }
                              },
                              "created_at": "2020-02-24T15:04:03.849Z",
                              "updated_at": "2020-02-24T15:04:03.849Z",
                              "plugnplay": {
                                "usb_id": "universalserial",
                                "passive_detection": false
                              },
                              "driver_type": {
                                "name": "driver-vacuubrand",
                                "version": "0.0.1"
                              },
                              "capabilities": []
                            },
                            "operator_id": null,
                            "slugs": [],
                            "display_name": "Rustic Iron Pants",
                            "commands": [
                              {
                                "title": "set_pressure_setpoint",
                                "type": "number"
                              },
                              {
                                "title": "set_speed_setpoint",
                                "type": "number"
                              },
                              {
                                "title": "set_pump_engine",
                                "enum": [
                                  0,
                                  1
                                ],
                                "enumLabels": [
                                  "off",
                                  "on"
                                ]
                              },
                              {
                                "title": "set_operation_mode",
                                "enum": [
                                  1,
                                  2
                                ],
                                "enumLabels": [
                                  "pump_down",
                                  "vac_control"
                                ]
                              },
                              {
                                "title": "set_in_line_valve",
                                "enum": [
                                  0,
                                  1
                                ],
                                "enumLabels": [
                                  "closed",
                                  "open"
                                ]
                              },
                              {
                                "title": "set_coolant_valve",
                                "enum": [
                                  0,
                                  1
                                ],
                                "enumLabels": [
                                  "closed",
                                  "open"
                                ]
                              },
                              {
                                "title": "set_venting_valve",
                                "enum": [
                                  0,
                                  1
                                ],
                                "enumLabels": [
                                  "closed",
                                  "open"
                                ]
                              }
                            ],
                            "status_channel_id": 242
                          },
                          "relationships": {
                            "owner": {
                              "data": {
                                "id": "86",
                                "type": "user"
                              }
                            },
                            "connector": {
                              "data": null
                            },
                            "driver": {
                              "data": {
                                "id": "23",
                                "type": "driver"
                              }
                            },
                            "device_type": {
                              "data": {
                                "id": "2000",
                                "type": "device_type"
                              }
                            },
                            "users": {
                              "data": [
                                {
                                  "id": "86",
                                  "type": "user"
                                }
                              ]
                            },
                            "tasks": {
                              "data": []
                            },
                            "channels": {
                              "data": [
                                {
                                  "id": "232",
                                  "type": "channel"
                                },
                                {
                                  "id": "233",
                                  "type": "channel"
                                },
                                {
                                  "id": "234",
                                  "type": "channel"
                                },
                                {
                                  "id": "235",
                                  "type": "channel"
                                },
                                {
                                  "id": "236",
                                  "type": "channel"
                                },
                                {
                                  "id": "237",
                                  "type": "channel"
                                },
                                {
                                  "id": "238",
                                  "type": "channel"
                                },
                                {
                                  "id": "239",
                                  "type": "channel"
                                },
                                {
                                  "id": "240",
                                  "type": "channel"
                                },
                                {
                                  "id": "241",
                                  "type": "channel"
                                },
                                {
                                  "id": "242",
                                  "type": "channel"
                                }
                              ]
                            },
                            "view": {
                              "data": {
                                "id": "78",
                                "type": "view"
                              }
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/devices/78"
                          }
                        }
                      ]
                    }
                  },
                  "Ignore Unauthorized Error": {
                    "summary": "Ignore Unauthorized Error",
                    "value": {
                      "data": []
                    }
                  },
                  "Ignore Record Not Found Error": {
                    "summary": "Ignore Record Not Found Error",
                    "value": {
                      "data": []
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "devices"
        ]
      }
    },
    "/exports": {
      "get": {
        "description": "Get a list of existing Exports.",
        "operationId": "getExports",
        "summary": "Get Exports",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "List of Export attributes to be included in response."
          },
          {
            "name": "deleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Include soft deleted exports."
          },
          {
            "name": "filter",
            "description": "Resources and/or attributes to filter by.",
            "in": "query",
            "schema": {
              "type": "object",
              "properties": {
                "exports": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "owner_id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "owner": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "username": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "email": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Exports"
                },
                "examples": {
                  "List of Exports": {
                    "summary": "List of Exports",
                    "value": {
                      "data": [
                        {
                          "id": "1",
                          "type": "export",
                          "attributes": {
                            "created_at": "2020-02-14T12:37:24.729Z",
                            "updated_at": "2020-02-14T12:37:24.729Z",
                            "original_filename": "export.xlsx",
                            "status": "processing",
                            "deleted_at": null,
                            "secure_token": "7613b74a-8402-444c-85fa-61a9ea5ff370"
                          },
                          "relationships": {
                            "owner": {
                              "data": {
                                "id": "649",
                                "type": "user"
                              }
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/exports/1"
                          }
                        },
                        {
                          "id": "3",
                          "type": "export",
                          "attributes": {
                            "created_at": "2020-02-14T12:37:24.860Z",
                            "updated_at": "2020-02-14T12:37:24.860Z",
                            "original_filename": "export.xlsx",
                            "status": "processing",
                            "deleted_at": null,
                            "secure_token": "861ed893-8701-4582-8c13-7f69e0131b46"
                          },
                          "relationships": {
                            "owner": {
                              "data": {
                                "id": "649",
                                "type": "user"
                              }
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/exports/3"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Wrong Fields Set Error": {
                    "summary": "Wrong Fields Set Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong `fields` value(s) for exports given: `invalid`, `DROP TABLE USERS`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "exports"
        ]
      }
    },
    "/exports/{id}": {
      "get": {
        "description": "Get a single Export by its id.",
        "operationId": "getExport",
        "summary": "Get Export",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "An id of Export to get."
          },
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "List of Export attributes to be included in response."
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "List of related resource to include. Allowed values are: `owner`."
          },
          {
            "name": "deleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Find in archive."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Export"
                },
                "examples": {
                  "Export": {
                    "summary": "Export",
                    "value": {
                      "data": {
                        "id": "18",
                        "type": "export",
                        "attributes": {
                          "created_at": "2020-02-14T12:37:26.162Z",
                          "updated_at": "2020-02-14T12:37:26.162Z",
                          "original_filename": "export.xlsx",
                          "status": "processing",
                          "deleted_at": null,
                          "secure_token": "669e95a3-9e2c-44ed-b216-7f2ea8adf1e5"
                        },
                        "relationships": {
                          "owner": {
                            "data": {
                              "id": "664",
                              "type": "user"
                            }
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/exports/18"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Wrong Include Error": {
                    "summary": "Wrong Include Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong `include` value(s) given: `spaceships`, `aliens`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Wrong Fields Set Error": {
                    "summary": "Wrong Fields Set Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong `fields` value(s) for exports given: `invalid`, `DROP TABLE USERS`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "exports"
        ]
      },
      "delete": {
        "description": "Delete a Export.",
        "operationId": "deleteExport",
        "summary": "Delete Export",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Id of a Export to delete."
          },
          {
            "name": "deleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Real destroy."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read",
              "delete"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Success"
                },
                "examples": {
                  "Ok": {
                    "summary": "Ok",
                    "value": {
                      "meta": {
                        "result": "Success"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthorized Error": {
                    "summary": "Unauthorized Error",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "You do not have the required permissions to access this resource. Note: OAuth 2 scopes do not overrule application level permissions.",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Unauthorized Error because of a missed scope": {
                    "summary": "Unauthorized Error because of a missed scope",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "Insufficient OAuth2 scope to perform this operation. Required: Delete",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "exports"
        ]
      }
    },
    "/exports/restore": {
      "patch": {
        "description": "Restore a Export.",
        "operationId": "restoreExport",
        "summary": "Restore Export",
        "security": [
          {
            "oauth2": [
              "read",
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Exports"
                },
                "examples": {
                  "Ok": {
                    "summary": "Ok",
                    "value": {
                      "data": [
                        {
                          "id": "46",
                          "type": "export",
                          "attributes": {
                            "created_at": "2020-02-14T12:37:29.794Z",
                            "updated_at": "2020-02-14T12:37:29.847Z",
                            "original_filename": "export.xlsx",
                            "status": "processing",
                            "deleted_at": null,
                            "secure_token": "5f7006b2-a166-4475-9577-266ec1309932"
                          },
                          "relationships": {
                            "owner": {
                              "data": {
                                "id": "703",
                                "type": "user"
                              }
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/exports/46"
                          }
                        }
                      ]
                    }
                  },
                  "Ignore Unauthorized Error": {
                    "summary": "Ignore Unauthorized Error",
                    "value": {
                      "data": []
                    }
                  },
                  "Ignore Record Not Found Error": {
                    "summary": "Ignore Record Not Found Error",
                    "value": {
                      "data": []
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "exports"
        ]
      }
    },
    "/jobs": {
      "get": {
        "description": "Get a list of existing Jobs.",
        "operationId": "getJobs",
        "summary": "Get Jobs",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "List of Job attributes to be included in response."
          },
          {
            "name": "deleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Include soft deleted jobs."
          },
          {
            "name": "filter",
            "description": "Resources and/or attributes to filter by.",
            "in": "query",
            "schema": {
              "type": "object",
              "properties": {
                "jobs": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "identifier": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "custom_attributes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "owner": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "username": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "email": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "tasks": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "name": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "custom_attributes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "List of related resource to include. Allowed values are: `owner`, `tasks`."
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "Pagination"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "Sorting"
          },
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "Searching"
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Jobs"
                },
                "examples": {
                  "List of Jobs": {
                    "summary": "List of Jobs",
                    "value": {
                      "data": [
                        {
                          "id": "1",
                          "type": "job",
                          "attributes": {
                            "identifier": "secured line_181",
                            "custom_attributes": [],
                            "response": {
                              "url": "http://hagenes.biz/andrea.howell",
                              "headers": {}
                            },
                            "progress": 1,
                            "deleted_at": null,
                            "updated_at": "2020-02-24T15:06:31.569Z",
                            "created_at": "2020-02-24T15:06:31.569Z",
                            "finished": true
                          },
                          "relationships": {
                            "owner": {
                              "data": {
                                "id": "1",
                                "type": "user"
                              }
                            },
                            "tasks": {
                              "data": []
                            }
                          },
                          "links": {
                            "self": "http://hagenes.biz/andrea.howell"
                          }
                        },
                        {
                          "id": "2",
                          "type": "job",
                          "attributes": {
                            "identifier": "hub_546",
                            "custom_attributes": [],
                            "response": {
                              "url": "http://huel.info/lucien",
                              "headers": {}
                            },
                            "progress": 0,
                            "deleted_at": null,
                            "updated_at": "2020-02-24T15:06:31.747Z",
                            "created_at": "2020-02-24T15:06:31.747Z",
                            "finished": false
                          },
                          "relationships": {
                            "owner": {
                              "data": {
                                "id": "2",
                                "type": "user"
                              }
                            },
                            "tasks": {
                              "data": [
                                {
                                  "id": "1",
                                  "type": "task"
                                }
                              ]
                            }
                          },
                          "links": {
                            "self": "http://huel.info/lucien"
                          }
                        }
                      ]
                    }
                  },
                  "List of found Jobs": {
                    "summary": "List of found Jobs",
                    "value": {
                      "data": [
                        {
                          "id": "3",
                          "type": "job",
                          "attributes": {
                            "identifier": "cohesive_347",
                            "custom_attributes": [],
                            "response": {
                              "url": "http://grant.biz/jenifer_mayert",
                              "headers": {}
                            },
                            "progress": 1,
                            "deleted_at": null,
                            "updated_at": "2020-02-24T15:06:32.533Z",
                            "created_at": "2020-02-24T15:06:32.533Z",
                            "finished": true
                          },
                          "relationships": {
                            "owner": {
                              "data": {
                                "id": "4",
                                "type": "user"
                              }
                            },
                            "tasks": {
                              "data": []
                            }
                          },
                          "links": {
                            "self": "http://grant.biz/jenifer_mayert"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Wrong Filter Error": {
                    "summary": "Wrong Filter Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong jobs attributes given for filtering: `hair`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "jobs"
        ]
      },
      "post": {
        "description": "Create a Job.",
        "operationId": "createJob",
        "summary": "Create Job",
        "security": [
          {
            "oauth2": [
              "read",
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Job"
                },
                "examples": {
                  "Job": {
                    "summary": "Job",
                    "value": {
                      "data": {
                        "id": "26",
                        "type": "job",
                        "attributes": {
                          "identifier": "123-456-789",
                          "custom_attributes": [],
                          "response": null,
                          "progress": 1,
                          "deleted_at": null,
                          "updated_at": "2020-02-24T15:06:38.202Z",
                          "created_at": "2020-02-24T15:06:38.202Z",
                          "finished": true
                        },
                        "relationships": {
                          "owner": {
                            "data": {
                              "id": "37",
                              "type": "user"
                            }
                          },
                          "tasks": {
                            "data": []
                          }
                        },
                        "links": {
                          "self": null
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Bad Request Error": {
                    "summary": "Bad Request Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Missing `data` member at document's top level.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Missed Required Attributes Error": {
                    "summary": "Missed Required Attributes Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Missed required attribute(s) for job: `identifier`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "ID parameter given": {
                    "summary": "ID parameter given",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "ID parameter is not allowed for `create` requests.",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Conflict Missing Type Error": {
                    "summary": "Conflict Missing Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "Missing `type` member at document's `data` level.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Conflict Wrong Type Error": {
                    "summary": "Conflict Wrong Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "The given `type` member does not match the resource.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "jobs"
        ],
        "requestBody": {
          "description": "Create a Job.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateJob"
              },
              "example": {
                "data": {
                  "type": "job",
                  "attributes": {
                    "identifier": "123-456-789"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/jobs/{id}": {
      "get": {
        "description": "Get a single Job by its id.",
        "operationId": "getJob",
        "summary": "Get Job",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "An id of Job to get."
          },
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "List of Job attributes to be included in response."
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "List of related resource to include. Allowed values are: `owner`, `tasks`"
          },
          {
            "name": "deleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Find in archive."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Job"
                },
                "examples": {
                  "Job": {
                    "summary": "Job",
                    "value": {
                      "data": {
                        "id": "12",
                        "type": "job",
                        "attributes": {
                          "identifier": "Networked_682",
                          "custom_attributes": [],
                          "response": {
                            "url": "http://nitzsche.info/maria.rath",
                            "headers": {}
                          },
                          "progress": 1,
                          "deleted_at": null,
                          "updated_at": "2020-02-24T15:06:34.642Z",
                          "created_at": "2020-02-24T15:06:34.642Z",
                          "finished": true
                        },
                        "relationships": {
                          "owner": {
                            "data": {
                              "id": "17",
                              "type": "user"
                            }
                          },
                          "tasks": {
                            "data": []
                          }
                        },
                        "links": {
                          "self": "http://nitzsche.info/maria.rath"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Wrong Include Error": {
                    "summary": "Wrong Include Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong `include` value(s) given: `spaceships`, `aliens`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "jobs"
        ]
      },
      "patch": {
        "description": "Update a Job.",
        "operationId": "updateJob",
        "summary": "Update Job",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Id of a Job to update."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read",
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Job"
                },
                "examples": {
                  "Job": {
                    "summary": "Job",
                    "value": {
                      "data": {
                        "id": "39",
                        "type": "job",
                        "attributes": {
                          "identifier": "local area network_890",
                          "custom_attributes": [],
                          "response": {
                            "new": "response"
                          },
                          "progress": 1,
                          "deleted_at": null,
                          "updated_at": "2020-02-24T15:06:41.685Z",
                          "created_at": "2020-02-24T15:06:41.262Z",
                          "finished": true
                        },
                        "relationships": {
                          "owner": {
                            "data": {
                              "id": "58",
                              "type": "user"
                            }
                          },
                          "tasks": {
                            "data": []
                          }
                        },
                        "links": {
                          "self": null
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Bad Request Error": {
                    "summary": "Bad Request Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Missing `data` member at document's top level.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Conflict Missing Type Error": {
                    "summary": "Conflict Missing Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "Missing `type` member at document's `data` level.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Conflict Wrong Type Error": {
                    "summary": "Conflict Wrong Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "The given `type` member does not match the resource.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "jobs"
        ],
        "requestBody": {
          "description": "Update a Job.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateJob"
              },
              "example": {
                "data": {
                  "type": "job",
                  "attributes": {
                    "response": {
                      "new": "response"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Delete a Job.",
        "operationId": "deleteJob",
        "summary": "Delete Job",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Id of a Job to delete."
          },
          {
            "name": "deleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Real destroy."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read",
              "delete"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Success"
                },
                "examples": {
                  "Ok": {
                    "summary": "Ok",
                    "value": {
                      "meta": {
                        "result": "Success"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthorized Error": {
                    "summary": "Unauthorized Error",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "You do not have the required permissions to access this resource. Note: OAuth 2 scopes do not overrule application level permissions.",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "jobs"
        ]
      }
    },
    "/jobs/restore": {
      "patch": {
        "description": "Restore a Job.",
        "operationId": "restoreJob",
        "summary": "Restore Job",
        "security": [
          {
            "oauth2": [
              "read",
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Jobs"
                },
                "examples": {
                  "Ok": {
                    "summary": "Ok",
                    "value": {
                      "data": [
                        {
                          "id": "61",
                          "type": "job",
                          "attributes": {
                            "identifier": "solution-oriented_790",
                            "custom_attributes": [],
                            "response": {
                              "url": "http://cremin.co/ambrose",
                              "headers": {}
                            },
                            "progress": 1,
                            "deleted_at": null,
                            "updated_at": "2020-02-24T15:06:46.788Z",
                            "created_at": "2020-02-24T15:06:46.675Z",
                            "finished": true
                          },
                          "relationships": {
                            "owner": {
                              "data": {
                                "id": "88",
                                "type": "user"
                              }
                            },
                            "tasks": {
                              "data": []
                            }
                          },
                          "links": {
                            "self": "http://cremin.co/ambrose"
                          }
                        }
                      ]
                    }
                  },
                  "Ignore Unauthorized Error": {
                    "summary": "Ignore Unauthorized Error",
                    "value": {
                      "data": []
                    }
                  },
                  "Ignore Record Not Found Error": {
                    "summary": "Ignore Record Not Found Error",
                    "value": {
                      "data": []
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "jobs"
        ]
      }
    },
    "/jobs/{id}/reorder_tasks": {
      "put": {
        "description": "Reorder tasks of a Job.",
        "operationId": "reorder_tasksJob",
        "summary": "Reorder Tasks Job",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Id of a Job."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read",
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Job"
                },
                "examples": {
                  "Changes the order of Job's tasks and returns a Job": {
                    "summary": "Changes the order of Job's tasks and returns a Job",
                    "value": {
                      "data": {
                        "id": "71",
                        "type": "job",
                        "attributes": {
                          "identifier": "architecture_330",
                          "custom_attributes": [],
                          "response": {
                            "url": "http://stracke.co/lida.purdy",
                            "headers": {}
                          },
                          "progress": 0,
                          "deleted_at": null,
                          "updated_at": "2020-02-24T15:06:48.522Z",
                          "created_at": "2020-02-24T15:06:48.522Z",
                          "finished": false
                        },
                        "relationships": {
                          "owner": {
                            "data": {
                              "id": "100",
                              "type": "user"
                            }
                          },
                          "tasks": {
                            "data": [
                              {
                                "id": "6",
                                "type": "task"
                              },
                              {
                                "id": "4",
                                "type": "task"
                              },
                              {
                                "id": "5",
                                "type": "task"
                              }
                            ]
                          }
                        },
                        "links": {
                          "self": "http://stracke.co/lida.purdy"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "`tasks_order` parameter is absent": {
                    "summary": "`tasks_order` parameter is absent",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "No `tasks_order` parameter given.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  },
                  "`tasks_order` parameter is not an array": {
                    "summary": "`tasks_order` parameter is not an array",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Invalid `tasks_order` parameter given. Expecting an array.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthorized Error": {
                    "summary": "Unauthorized Error",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "You do not have the required permissions to access this resource. Note: OAuth 2 scopes do not overrule application level permissions.",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "jobs"
        ]
      }
    },
    "/measurements": {
      "get": {
        "description": "Get a list of existing Measurements.",
        "operationId": "getMeasurements",
        "summary": "Get Measurements",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "List of Measurement attributes to be included in response."
          },
          {
            "name": "filter",
            "description": "Resources and/or attributes to filter by.",
            "in": "query",
            "schema": {
              "type": "object",
              "properties": {
                "measurements": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "created_at": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "updated_at": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "container_id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "container_type": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "owner_id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "custom_attributes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "uuid": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "deleted_at": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "owner": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "username": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "email": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "channels": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "device_id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "List of related resource to include. Allowed values are: `task`, `channels`, `user`."
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "Pagination"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "Sorting"
          },
          {
            "name": "data_points",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "If this flag is set, the data points related to this measurement will be included as the `data_points` attribute."
          },
          {
            "name": "deleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Include soft deleted measuremnts."
          },
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "Searching"
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Measurements"
                },
                "examples": {
                  "List of Measurements": {
                    "summary": "List of Measurements",
                    "value": {
                      "data": [
                        {
                          "id": "1",
                          "type": "measurement",
                          "attributes": {
                            "created_at": "2020-03-04T10:46:48.934Z",
                            "description": "Heavy Duty Aluminum Lamp",
                            "end_at": "2020-03-04T10:41:48.695Z",
                            "protocol_entries": [],
                            "scope_params": {
                              "type": "range",
                              "params": [
                                "2020-03-04T09:46:48.695Z",
                                "2020-03-04T10:41:48.695Z"
                              ]
                            },
                            "custom_attributes": [],
                            "start_at": "2020-03-04T09:46:48.695Z",
                            "status": "finished",
                            "updated_at": "2020-03-04T10:46:48.934Z",
                            "uuid": "e387e9ee-e46f-43ab-8c6b-857a001225b8",
                            "container_id": 1,
                            "container_type": "Task",
                            "deleted_at": null,
                            "scope": {
                              "id": 1,
                              "start_at": "2020-03-04T09:46:48.695Z",
                              "end_at": "2020-03-04T10:41:48.695Z",
                              "channel_ids": [
                                12,
                                24
                              ]
                            },
                            "context_type": "Job",
                            "context_id": 1,
                            "context_name": "transitional_324"
                          },
                          "relationships": {
                            "owner": {
                              "data": {
                                "id": "1",
                                "type": "user"
                              }
                            },
                            "view": {
                              "data": {
                                "id": "3",
                                "type": "view"
                              }
                            },
                            "channels": {
                              "data": [
                                {
                                  "id": "12",
                                  "type": "channel"
                                },
                                {
                                  "id": "24",
                                  "type": "channel"
                                }
                              ]
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/measurements/1"
                          }
                        },
                        {
                          "id": "2",
                          "type": "measurement",
                          "attributes": {
                            "created_at": "2020-03-04T10:46:49.973Z",
                            "description": "Intelligent Granite Bottle",
                            "end_at": "2020-03-04T10:41:49.739Z",
                            "protocol_entries": [],
                            "scope_params": {
                              "type": "range",
                              "params": [
                                "2020-03-04T09:46:49.739Z",
                                "2020-03-04T10:41:49.739Z"
                              ]
                            },
                            "custom_attributes": [],
                            "start_at": "2020-03-04T09:46:49.739Z",
                            "status": "finished",
                            "updated_at": "2020-03-04T10:46:49.973Z",
                            "uuid": "4825c565-0032-4609-aeac-14cb59e8f6f4",
                            "container_id": 1,
                            "container_type": "Task",
                            "deleted_at": null,
                            "scope": {
                              "id": 2,
                              "start_at": "2020-03-04T09:46:49.739Z",
                              "end_at": "2020-03-04T10:41:49.739Z",
                              "channel_ids": [
                                36,
                                48
                              ]
                            },
                            "context_type": "Job",
                            "context_id": 1,
                            "context_name": "transitional_324"
                          },
                          "relationships": {
                            "owner": {
                              "data": {
                                "id": "1",
                                "type": "user"
                              }
                            },
                            "view": {
                              "data": {
                                "id": "6",
                                "type": "view"
                              }
                            },
                            "channels": {
                              "data": [
                                {
                                  "id": "36",
                                  "type": "channel"
                                },
                                {
                                  "id": "48",
                                  "type": "channel"
                                }
                              ]
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/measurements/2"
                          }
                        },
                        {
                          "id": "3",
                          "type": "measurement",
                          "attributes": {
                            "created_at": "2020-03-04T10:46:51.041Z",
                            "description": "Synergistic Linen Wallet",
                            "end_at": "2020-03-04T10:41:50.781Z",
                            "protocol_entries": [],
                            "scope_params": {
                              "type": "range",
                              "params": [
                                "2020-03-04T09:46:50.780Z",
                                "2020-03-04T10:41:50.781Z"
                              ]
                            },
                            "custom_attributes": [],
                            "start_at": "2020-03-04T09:46:50.780Z",
                            "status": "finished",
                            "updated_at": "2020-03-04T10:46:51.041Z",
                            "uuid": "388aaf89-8fa5-4654-9d2a-22c2f4ae871f",
                            "container_id": 1,
                            "container_type": "Task",
                            "deleted_at": null,
                            "scope": {
                              "id": 3,
                              "start_at": "2020-03-04T09:46:50.780Z",
                              "end_at": "2020-03-04T10:41:50.781Z",
                              "channel_ids": [
                                60,
                                72
                              ]
                            },
                            "context_type": "Job",
                            "context_id": 1,
                            "context_name": "transitional_324"
                          },
                          "relationships": {
                            "owner": {
                              "data": {
                                "id": "1",
                                "type": "user"
                              }
                            },
                            "view": {
                              "data": {
                                "id": "9",
                                "type": "view"
                              }
                            },
                            "channels": {
                              "data": [
                                {
                                  "id": "60",
                                  "type": "channel"
                                },
                                {
                                  "id": "72",
                                  "type": "channel"
                                }
                              ]
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/measurements/3"
                          }
                        }
                      ]
                    }
                  },
                  "List of found Measurements": {
                    "summary": "List of found Measurements",
                    "value": {
                      "data": [
                        {
                          "id": "5",
                          "type": "measurement",
                          "attributes": {
                            "created_at": "2020-03-04T10:46:53.878Z",
                            "description": "Lightweight Cotton Bench",
                            "end_at": "2020-03-04T10:41:53.638Z",
                            "protocol_entries": [],
                            "scope_params": {
                              "type": "range",
                              "params": [
                                "2020-03-04T09:46:53.638Z",
                                "2020-03-04T10:41:53.638Z"
                              ]
                            },
                            "custom_attributes": [],
                            "start_at": "2020-03-04T09:46:53.638Z",
                            "status": "finished",
                            "updated_at": "2020-03-04T10:46:53.878Z",
                            "uuid": "1f923beb-bb61-4ed7-9254-c53a20e98acd",
                            "container_id": 2,
                            "container_type": "Task",
                            "deleted_at": null,
                            "scope": {
                              "id": 5,
                              "start_at": "2020-03-04T09:46:53.638Z",
                              "end_at": "2020-03-04T10:41:53.638Z",
                              "channel_ids": [
                                108,
                                120
                              ]
                            },
                            "context_type": "Job",
                            "context_id": 2,
                            "context_name": "Balanced_853"
                          },
                          "relationships": {
                            "owner": {
                              "data": {
                                "id": "13",
                                "type": "user"
                              }
                            },
                            "view": {
                              "data": {
                                "id": "15",
                                "type": "view"
                              }
                            },
                            "channels": {
                              "data": [
                                {
                                  "id": "108",
                                  "type": "channel"
                                },
                                {
                                  "id": "120",
                                  "type": "channel"
                                }
                              ]
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/measurements/5"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "measurements"
        ]
      },
      "post": {
        "description": "Create a Measurement.",
        "operationId": "createMeasurement",
        "summary": "Create Measurement",
        "security": [
          {
            "oauth2": [
              "read",
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Measurement"
                },
                "examples": {
                  "Measurement": {
                    "summary": "Measurement",
                    "value": {
                      "data": {
                        "id": "28",
                        "type": "measurement",
                        "attributes": {
                          "created_at": "2020-03-04T10:47:24.579Z",
                          "description": "Desc",
                          "end_at": null,
                          "protocol_entries": [],
                          "scope_params": {
                            "type": "open_range",
                            "params": [
                              "2020-03-04T10:47:23.000Z"
                            ]
                          },
                          "custom_attributes": [],
                          "start_at": "2020-03-04T10:47:23.000Z",
                          "status": "running",
                          "updated_at": "2020-03-04T10:47:24.579Z",
                          "uuid": "89e673df-0ea2-491b-8ec2-02e6c9a94683",
                          "container_id": 85,
                          "container_type": "View",
                          "deleted_at": null,
                          "scope": {
                            "id": 28,
                            "start_at": "2020-03-04T10:47:23.000Z",
                            "end_at": null,
                            "channel_ids": [
                              664,
                              665,
                              666,
                              667,
                              668,
                              670,
                              673
                            ]
                          },
                          "context_type": "Device",
                          "context_id": 58,
                          "context_name": "Aerodynamic Wooden Clock"
                        },
                        "relationships": {
                          "owner": {
                            "data": {
                              "id": "120",
                              "type": "user"
                            }
                          },
                          "view": {
                            "data": {
                              "id": "86",
                              "type": "view"
                            }
                          },
                          "channels": {
                            "data": [
                              {
                                "id": "664",
                                "type": "channel"
                              },
                              {
                                "id": "665",
                                "type": "channel"
                              },
                              {
                                "id": "666",
                                "type": "channel"
                              },
                              {
                                "id": "667",
                                "type": "channel"
                              },
                              {
                                "id": "668",
                                "type": "channel"
                              },
                              {
                                "id": "670",
                                "type": "channel"
                              },
                              {
                                "id": "673",
                                "type": "channel"
                              }
                            ]
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/measurements/28"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Bad Request Error": {
                    "summary": "Bad Request Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Missing `data` member at document's top level.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "ID parameter given": {
                    "summary": "ID parameter given",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "ID parameter is not allowed for `create` requests.",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Conflict Missing Type Error": {
                    "summary": "Conflict Missing Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "Missing `type` member at document's `data` level.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Conflict Wrong Type Error": {
                    "summary": "Conflict Wrong Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "The given `type` member does not match the resource.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "measurements"
        ],
        "requestBody": {
          "description": "Create a Measurement.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMeasurement"
              },
              "example": {
                "data": {
                  "type": "measurement",
                  "attributes": {
                    "description": "Desc",
                    "scope_attributes": {
                      "start_at": "2020-03-04 10:47:23 UTC"
                    }
                  },
                  "relationships": {
                    "container": {
                      "data": {
                        "id": "85",
                        "type": "View"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/measurements/{id}": {
      "get": {
        "description": "Get a single Measurement by its id.",
        "operationId": "getMeasurement",
        "summary": "Get Measurement",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "An id of Measurement to get."
          },
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "List of Measurement attributes to be included in response."
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "List of related resource to include. Allowed values are: `task`, `owner`."
          },
          {
            "name": "deleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Find in archive."
          },
          {
            "name": "data_points",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "If this flag is set, the data_points will be included as an attribute."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Measurement"
                },
                "examples": {
                  "Measurement": {
                    "summary": "Measurement",
                    "value": {
                      "data": {
                        "id": "12",
                        "type": "measurement",
                        "attributes": {
                          "created_at": "2020-03-04T10:47:03.392Z",
                          "description": "Small Cotton Chair",
                          "end_at": "2020-03-04T10:42:03.133Z",
                          "protocol_entries": [],
                          "scope_params": {
                            "type": "range",
                            "params": [
                              "2020-03-04T09:47:03.132Z",
                              "2020-03-04T10:42:03.133Z"
                            ]
                          },
                          "custom_attributes": [],
                          "start_at": "2020-03-04T09:47:03.132Z",
                          "status": "finished",
                          "updated_at": "2020-03-04T10:47:03.392Z",
                          "uuid": "dadf5ac5-7a24-48c5-8c33-5b634394b246",
                          "container_id": 6,
                          "container_type": "Task",
                          "deleted_at": null,
                          "scope": {
                            "id": 12,
                            "start_at": "2020-03-04T09:47:03.132Z",
                            "end_at": "2020-03-04T10:42:03.133Z",
                            "channel_ids": [
                              281,
                              293
                            ]
                          },
                          "context_type": "Job",
                          "context_id": 6,
                          "context_name": "Synergized_532"
                        },
                        "relationships": {
                          "owner": {
                            "data": {
                              "id": "50",
                              "type": "user"
                            }
                          },
                          "view": {
                            "data": {
                              "id": "37",
                              "type": "view"
                            }
                          },
                          "channels": {
                            "data": [
                              {
                                "id": "281",
                                "type": "channel"
                              },
                              {
                                "id": "293",
                                "type": "channel"
                              }
                            ]
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/measurements/12"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Wrong Include Error": {
                    "summary": "Wrong Include Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong `include` value(s) given: `spaceships`, `aliens`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "measurements"
        ]
      },
      "patch": {
        "description": "Update a Measurement.",
        "operationId": "updateMeasurement",
        "summary": "Update Measurement",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Id of a Measurement to update."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read",
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Measurement"
                },
                "examples": {
                  "Measurement": {
                    "summary": "Measurement",
                    "value": {
                      "data": {
                        "id": "39",
                        "type": "measurement",
                        "attributes": {
                          "created_at": "2020-03-04T10:47:39.397Z",
                          "description": "New Desc",
                          "end_at": "2020-03-04T10:42:39.102Z",
                          "protocol_entries": [],
                          "scope_params": {
                            "type": "range",
                            "params": [
                              "2020-03-04T09:47:39.102Z",
                              "2020-03-04T10:42:39.102Z"
                            ]
                          },
                          "custom_attributes": [],
                          "start_at": "2020-03-04T09:47:39.102Z",
                          "status": "finished",
                          "updated_at": "2020-03-04T10:47:41.338Z",
                          "uuid": "4c2b33ca-7d73-4b9b-997f-399a7e7183e6",
                          "container_id": 19,
                          "container_type": "Task",
                          "deleted_at": null,
                          "scope": {
                            "id": 39,
                            "start_at": "2020-03-04T09:47:39.102Z",
                            "end_at": "2020-03-04T10:42:39.102Z",
                            "channel_ids": [
                              926,
                              938
                            ]
                          },
                          "context_type": "Job",
                          "context_id": 19,
                          "context_name": "protocol_952"
                        },
                        "relationships": {
                          "owner": {
                            "data": {
                              "id": "181",
                              "type": "user"
                            }
                          },
                          "view": {
                            "data": {
                              "id": "119",
                              "type": "view"
                            }
                          },
                          "channels": {
                            "data": [
                              {
                                "id": "926",
                                "type": "channel"
                              },
                              {
                                "id": "938",
                                "type": "channel"
                              }
                            ]
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/measurements/39"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Bad Request Error": {
                    "summary": "Bad Request Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Missing `data` member at document's top level.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Conflict Missing Type Error": {
                    "summary": "Conflict Missing Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "Missing `type` member at document's `data` level.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Conflict Wrong Type Error": {
                    "summary": "Conflict Wrong Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "The given `type` member does not match the resource.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "measurements"
        ],
        "requestBody": {
          "description": "Update a Measurement.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMeasurement"
              },
              "example": {
                "data": {
                  "type": "measurement",
                  "attributes": {
                    "description": "New Desc"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Delete a Measurement.",
        "operationId": "deleteMeasurement",
        "summary": "Delete Measurement",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Id of a Measurement to delete."
          },
          {
            "name": "deleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Real destroy."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read",
              "delete"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Success"
                },
                "examples": {
                  "Ok": {
                    "summary": "Ok",
                    "value": {
                      "meta": {
                        "result": "Success"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthorized Error": {
                    "summary": "Unauthorized Error",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "You do not have the required permissions to access this resource. Note: OAuth 2 scopes do not overrule application level permissions.",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "measurements"
        ]
      }
    },
    "/measurements/restore": {
      "patch": {
        "description": "Restore a Measurement.",
        "operationId": "restoreMeasurement",
        "summary": "Restore Measurement",
        "security": [
          {
            "oauth2": [
              "read",
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Measurements"
                },
                "examples": {
                  "Ok": {
                    "summary": "Ok",
                    "value": {
                      "data": [
                        {
                          "id": "62",
                          "type": "measurement",
                          "attributes": {
                            "created_at": "2020-03-04T10:48:10.100Z",
                            "description": "Heavy Duty Linen Keyboard",
                            "end_at": "2020-03-04T10:43:09.871Z",
                            "protocol_entries": [],
                            "scope_params": {
                              "type": "range",
                              "params": [
                                "2020-03-04T09:48:09.871Z",
                                "2020-03-04T10:43:09.871Z"
                              ]
                            },
                            "custom_attributes": [],
                            "start_at": "2020-03-04T09:48:09.871Z",
                            "status": "finished",
                            "updated_at": "2020-03-04T10:48:10.881Z",
                            "uuid": "6a841616-9c7f-4db1-8846-2b166d46b972",
                            "container_id": null,
                            "container_type": null,
                            "deleted_at": null,
                            "scope": {
                              "id": 62,
                              "start_at": "2020-03-04T09:48:09.871Z",
                              "end_at": "2020-03-04T10:43:09.871Z",
                              "channel_ids": [
                                1478,
                                1490
                              ]
                            },
                            "context_type": null,
                            "context_id": null,
                            "context_name": null
                          },
                          "relationships": {
                            "owner": {
                              "data": {
                                "id": "285",
                                "type": "user"
                              }
                            },
                            "view": {
                              "data": {
                                "id": "189",
                                "type": "view"
                              }
                            },
                            "channels": {
                              "data": [
                                {
                                  "id": "1478",
                                  "type": "channel"
                                },
                                {
                                  "id": "1490",
                                  "type": "channel"
                                }
                              ]
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/measurements/62"
                          }
                        }
                      ]
                    }
                  },
                  "Ignore Unauthorized Error": {
                    "summary": "Ignore Unauthorized Error",
                    "value": {
                      "data": []
                    }
                  },
                  "Ignore Record Not Found Error": {
                    "summary": "Ignore Record Not Found Error",
                    "value": {
                      "data": []
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "measurements"
        ]
      }
    },
    "/notification_settings": {
      "get": {
        "description": "Get a list of existing NotificationSettings.",
        "operationId": "getNotificationSettings",
        "summary": "Get Notification Settings",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "List of NotificationSetting attributes to be included in response."
          },
          {
            "name": "filter",
            "description": "Resources and/or attributes to filter by.",
            "in": "query",
            "schema": {
              "type": "object",
              "properties": {
                "notification_settings": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "active": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "delivery_methods": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "protonotification_id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "user_id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "created_at": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "updated_at": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "protonotification": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "title": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "created_at": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "updated_at": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "owner_id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "user": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "username": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "email": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "notifications": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "read": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "created_at": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "updated_at": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "notification_setting_id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "user_id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "List of related resource to include. Allowed values are: `protonotification`, `user`, `notifications`."
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "Pagination"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "Sorting"
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationSettings"
                },
                "examples": {
                  "List of NotificationSettings": {
                    "summary": "List of NotificationSettings",
                    "value": {
                      "data": [
                        {
                          "id": "4",
                          "type": "notification_setting",
                          "attributes": {
                            "delivery_methods": [
                              "ui"
                            ],
                            "active": true,
                            "rate_limit": 600000,
                            "created_at": "2020-02-14T12:39:08.589Z",
                            "updated_at": "2020-02-14T12:39:08.589Z"
                          },
                          "relationships": {
                            "protonotification": {
                              "data": {
                                "id": "2",
                                "type": "protonotification"
                              }
                            },
                            "user": {
                              "data": {
                                "id": "1227",
                                "type": "user"
                              }
                            },
                            "notifications": {
                              "data": []
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/notification_settings/4"
                          }
                        },
                        {
                          "id": "2",
                          "type": "notification_setting",
                          "attributes": {
                            "delivery_methods": [
                              "ui"
                            ],
                            "active": true,
                            "rate_limit": 600000,
                            "created_at": "2020-02-14T12:39:08.529Z",
                            "updated_at": "2020-02-14T12:39:08.529Z"
                          },
                          "relationships": {
                            "protonotification": {
                              "data": {
                                "id": "1",
                                "type": "protonotification"
                              }
                            },
                            "user": {
                              "data": {
                                "id": "1227",
                                "type": "user"
                              }
                            },
                            "notifications": {
                              "data": []
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/notification_settings/2"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Wrong Filter Error": {
                    "summary": "Wrong Filter Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong notification_settings attributes given for filtering: `hair`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "notification_settings"
        ]
      },
      "post": {
        "description": "Create a NotificationSetting.",
        "operationId": "createNotificationSetting",
        "summary": "Create Notification Setting",
        "security": [
          {
            "oauth2": [
              "read",
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationSetting"
                },
                "examples": {
                  "NotificationSetting": {
                    "summary": "NotificationSetting",
                    "value": {
                      "data": {
                        "id": "24",
                        "type": "notification_setting",
                        "attributes": {
                          "delivery_methods": [
                            "ui"
                          ],
                          "active": true,
                          "rate_limit": 600000,
                          "created_at": "2020-02-14T12:39:10.699Z",
                          "updated_at": "2020-02-14T12:39:10.699Z"
                        },
                        "relationships": {
                          "protonotification": {
                            "data": {
                              "id": "12",
                              "type": "protonotification"
                            }
                          },
                          "user": {
                            "data": {
                              "id": "1256",
                              "type": "user"
                            }
                          },
                          "notifications": {
                            "data": []
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/notification_settings/24"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Bad Request Error": {
                    "summary": "Bad Request Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Missing `data` member at document's top level.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Missed Required Attributes Error": {
                    "summary": "Missed Required Attributes Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Validation failed: User must exist",
                          "title": "Bad Request",
                          "source": {
                            "messages": {
                              "user": [
                                "must exist"
                              ]
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "ID parameter given": {
                    "summary": "ID parameter given",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "ID parameter is not allowed for `create` requests.",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Conflict Missing Type Error": {
                    "summary": "Conflict Missing Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "Missing `type` member at document's `data` level.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Conflict Wrong Type Error": {
                    "summary": "Conflict Wrong Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "The given `type` member does not match the resource.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "notification_settings"
        ],
        "requestBody": {
          "description": "Create a NotificationSetting.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNotificationSetting"
              },
              "example": {
                "data": {
                  "type": "notification_setting",
                  "attributes": {
                    "active": "true"
                  },
                  "relationships": {
                    "protonotification": {
                      "data": {
                        "type": "protonotifications",
                        "id": "12"
                      }
                    },
                    "user": {
                      "data": {
                        "type": "users",
                        "id": "1256"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/notification_settings/{id}": {
      "get": {
        "description": "Get a single NotificationSetting by its id.",
        "operationId": "getNotificationSetting",
        "summary": "Get Notification Setting",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "An id of NotificationSetting to get."
          },
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "List of NotificationSetting attributes to be included in response."
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "List of related resource to include. Allowed values are: `owner`, `tasks`"
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationSetting"
                },
                "examples": {
                  "NotificationSetting": {
                    "summary": "NotificationSetting",
                    "value": {
                      "data": {
                        "id": "12",
                        "type": "notification_setting",
                        "attributes": {
                          "delivery_methods": [
                            "ui"
                          ],
                          "active": true,
                          "rate_limit": 600000,
                          "created_at": "2020-02-14T12:39:09.548Z",
                          "updated_at": "2020-02-14T12:39:09.548Z"
                        },
                        "relationships": {
                          "protonotification": {
                            "data": {
                              "id": "6",
                              "type": "protonotification"
                            }
                          },
                          "user": {
                            "data": {
                              "id": "1240",
                              "type": "user"
                            }
                          },
                          "notifications": {
                            "data": []
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/notification_settings/12"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Wrong Include Error": {
                    "summary": "Wrong Include Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong `include` value(s) given: `spaceships`, `aliens`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "notification_settings"
        ]
      },
      "patch": {
        "description": "Update user's NotificationSetting.",
        "operationId": "updateNotificationSetting",
        "summary": "Update Notification Setting",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Id of a NotificationSetting to update."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read",
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationSetting"
                },
                "examples": {
                  "NotificationSetting": {
                    "summary": "NotificationSetting",
                    "value": {
                      "data": {
                        "id": "39",
                        "type": "notification_setting",
                        "attributes": {
                          "delivery_methods": [
                            "ui"
                          ],
                          "active": false,
                          "rate_limit": 600000,
                          "created_at": "2020-02-14T12:39:12.189Z",
                          "updated_at": "2020-02-14T12:39:12.223Z"
                        },
                        "relationships": {
                          "protonotification": {
                            "data": {
                              "id": "20",
                              "type": "protonotification"
                            }
                          },
                          "user": {
                            "data": {
                              "id": "1276",
                              "type": "user"
                            }
                          },
                          "notifications": {
                            "data": []
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/notification_settings/39"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Bad Request Error": {
                    "summary": "Bad Request Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Missing `data` member at document's top level.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthorized Error": {
                    "summary": "Unauthorized Error",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "You do not have the required permissions to access this resource. Note: OAuth 2 scopes do not overrule application level permissions.",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Conflict Missing Type Error": {
                    "summary": "Conflict Missing Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "Missing `type` member at document's `data` level.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Conflict Wrong Type Error": {
                    "summary": "Conflict Wrong Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "The given `type` member does not match the resource.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "notification_settings"
        ],
        "requestBody": {
          "description": "Update a NotificationSetting.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateNotificationSetting"
              },
              "example": {
                "data": {
                  "type": "notification_setting",
                  "attributes": {
                    "active": "false"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Delete a NotificationSetting.",
        "operationId": "deleteNotificationSetting",
        "summary": "Delete Notification Setting",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Id of a NotificationSetting to delete."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read",
              "delete"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Success"
                },
                "examples": {
                  "Ok": {
                    "summary": "Ok",
                    "value": {
                      "meta": {
                        "result": "Success"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthorized Error": {
                    "summary": "Unauthorized Error",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "You do not have the required permissions to access this resource. Note: OAuth 2 scopes do not overrule application level permissions.",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "notification_settings"
        ]
      }
    },
    "/notification_triggers": {
      "get": {
        "description": "Get a list of existing NotificationTriggers.",
        "operationId": "getNotificationTriggers",
        "summary": "Get Notification Triggers",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "List of NotificationTrigger attributes to be included in response."
          },
          {
            "name": "filter",
            "description": "Resources and/or attributes to filter by.",
            "in": "query",
            "schema": {
              "type": "object",
              "properties": {
                "notification_triggers": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "key": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "protonotification_id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "protonotification": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "title": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "created_at": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "updated_at": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "owner_id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "List of related resource to include. Allowed values are: `protonotification`."
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "Pagination"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "Sorting"
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTriggers"
                },
                "examples": {
                  "List of NotificationTriggers": {
                    "summary": "List of NotificationTriggers",
                    "value": {
                      "data": [
                        {
                          "id": "2",
                          "type": "notification_trigger",
                          "attributes": {
                            "key": "high_temperature",
                            "conditions": "{}"
                          },
                          "relationships": {
                            "protonotification": {
                              "data": {
                                "id": "40",
                                "type": "protonotification"
                              }
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/notification_triggers/2"
                          }
                        },
                        {
                          "id": "1",
                          "type": "notification_trigger",
                          "attributes": {
                            "key": "high_temperature",
                            "conditions": "{}"
                          },
                          "relationships": {
                            "protonotification": {
                              "data": {
                                "id": "40",
                                "type": "protonotification"
                              }
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/notification_triggers/1"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Wrong Filter Error": {
                    "summary": "Wrong Filter Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong notification_triggers attributes given for filtering: `hair`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "notification_triggers"
        ]
      },
      "post": {
        "description": "Create a NotificationTrigger.",
        "operationId": "createNotificationTrigger",
        "summary": "Create Notification Trigger",
        "security": [
          {
            "oauth2": [
              "read",
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTrigger"
                },
                "examples": {
                  "NotificationTrigger": {
                    "summary": "NotificationTrigger",
                    "value": {
                      "data": {
                        "id": "10",
                        "type": "notification_trigger",
                        "attributes": {
                          "key": "High Temperature",
                          "conditions": "{}"
                        },
                        "relationships": {
                          "protonotification": {
                            "data": {
                              "id": "46",
                              "type": "protonotification"
                            }
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/notification_triggers/10"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthorized Error": {
                    "summary": "Unauthorized Error",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "You are not allowed to access this resource.",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "notification_triggers"
        ],
        "requestBody": {
          "description": "Create a NotificationTrigger.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNotificationTrigger"
              },
              "example": {
                "data": {
                  "type": "notification_trigger",
                  "attributes": {
                    "key": "High Temperature"
                  },
                  "relationships": {
                    "protonotification": {
                      "data": {
                        "type": "protonotifications",
                        "id": "46"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/notification_triggers/{id}": {
      "patch": {
        "description": "Update NotificationTrigger.",
        "operationId": "updateNotificationTrigger",
        "summary": "Update Notification Trigger",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Id of a NotificationTrigger to update."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read",
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationTrigger"
                },
                "examples": {
                  "NotificationTrigger": {
                    "summary": "NotificationTrigger",
                    "value": {
                      "data": {
                        "id": "13",
                        "type": "notification_trigger",
                        "attributes": {
                          "key": "New Key",
                          "conditions": "{}"
                        },
                        "relationships": {
                          "protonotification": {
                            "data": {
                              "id": "50",
                              "type": "protonotification"
                            }
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/notification_triggers/13"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Bad Request Error": {
                    "summary": "Bad Request Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Missing `data` member at document's top level.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthorized Error": {
                    "summary": "Unauthorized Error",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "You do not have the required permissions to access this resource. Note: OAuth 2 scopes do not overrule application level permissions.",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Conflict Missing Type Error": {
                    "summary": "Conflict Missing Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "Missing `type` member at document's `data` level.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Conflict Wrong Type Error": {
                    "summary": "Conflict Wrong Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "The given `type` member does not match the resource.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "notification_triggers"
        ],
        "requestBody": {
          "description": "Update a NotificationTrigger.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateNotificationTrigger"
              },
              "example": {
                "data": {
                  "type": "notification_trigger",
                  "attributes": {
                    "key": "New Key"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Delete a NotificationTrigger.",
        "operationId": "deleteNotificationTrigger",
        "summary": "Delete Notification Trigger",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Id of a NotificationTrigger to delete."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read",
              "delete"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Success"
                },
                "examples": {
                  "Ok": {
                    "summary": "Ok",
                    "value": {
                      "meta": {
                        "result": "Success"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthorized Error": {
                    "summary": "Unauthorized Error",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "You do not have the required permissions to access this resource. Note: OAuth 2 scopes do not overrule application level permissions.",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "notification_triggers"
        ]
      }
    },
    "/notifications": {
      "get": {
        "description": "Get a list of existing Notifications.",
        "operationId": "getNotifications",
        "summary": "Get Notifications",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "List of Notification attributes to be included in response."
          },
          {
            "name": "filter",
            "description": "Resources and/or attributes to filter by.",
            "in": "query",
            "schema": {
              "type": "object",
              "properties": {
                "notifications": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "read": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "created_at": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "updated_at": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "notification_setting_id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "user_id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "notification_settings": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "active": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "delivery_methods": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "protonotification_id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "user_id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "created_at": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "updated_at": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "protonotification": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "title": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "created_at": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "updated_at": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "owner_id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "user": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "username": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "email": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "List of related resource to include. Allowed values are: `notification_settings`, `user`."
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "Pagination"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "Sorting"
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Notifications"
                },
                "examples": {
                  "List of Notifications": {
                    "summary": "List of Notifications",
                    "value": {
                      "data": [
                        {
                          "id": "2",
                          "type": "notification",
                          "attributes": {
                            "details": "{}",
                            "read": false,
                            "title": "Perferendis ut reiciendis.",
                            "message": "Officiis magni voluptas omnis.",
                            "created_at": "2020-02-14T12:39:19.999Z",
                            "updated_at": "2020-02-14T12:39:19.999Z"
                          },
                          "relationships": {
                            "notification_setting": {
                              "data": {
                                "id": "111",
                                "type": "notification_setting"
                              }
                            },
                            "protonotification": {
                              "data": {
                                "id": "70",
                                "type": "protonotification"
                              }
                            },
                            "user": {
                              "data": {
                                "id": "1360",
                                "type": "user"
                              }
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/notifications/2"
                          }
                        },
                        {
                          "id": "1",
                          "type": "notification",
                          "attributes": {
                            "details": "{}",
                            "read": false,
                            "title": "Deserunt incidunt aliquid.",
                            "message": "Sit unde omnis eum.",
                            "created_at": "2020-02-14T12:39:19.995Z",
                            "updated_at": "2020-02-14T12:39:19.995Z"
                          },
                          "relationships": {
                            "notification_setting": {
                              "data": {
                                "id": "111",
                                "type": "notification_setting"
                              }
                            },
                            "protonotification": {
                              "data": {
                                "id": "70",
                                "type": "protonotification"
                              }
                            },
                            "user": {
                              "data": {
                                "id": "1360",
                                "type": "user"
                              }
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/notifications/1"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Wrong Filter Error": {
                    "summary": "Wrong Filter Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong notifications attributes given for filtering: `hair`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "notifications"
        ]
      }
    },
    "/notifications/{id}": {
      "patch": {
        "description": "Update a Notification.",
        "operationId": "updateNotification",
        "summary": "Update Notification",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Id of a Notification to update."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read",
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Notification"
                },
                "examples": {
                  "Notification": {
                    "summary": "Notification",
                    "value": {
                      "data": {
                        "id": "7",
                        "type": "notification",
                        "attributes": {
                          "details": "{}",
                          "read": true,
                          "title": "Dolore et nihil.",
                          "message": "Voluptas non provident et.",
                          "created_at": "2020-02-14T12:39:20.745Z",
                          "updated_at": "2020-02-14T12:39:20.779Z"
                        },
                        "relationships": {
                          "notification_setting": {
                            "data": {
                              "id": "119",
                              "type": "notification_setting"
                            }
                          },
                          "protonotification": {
                            "data": {
                              "id": "74",
                              "type": "protonotification"
                            }
                          },
                          "user": {
                            "data": {
                              "id": "1369",
                              "type": "user"
                            }
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/notifications/7"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Bad Request Error": {
                    "summary": "Bad Request Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Missing `data` member at document's top level.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthorized Error": {
                    "summary": "Unauthorized Error",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "You do not have the required permissions to access this resource. Note: OAuth 2 scopes do not overrule application level permissions.",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Conflict Missing Type Error": {
                    "summary": "Conflict Missing Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "Missing `type` member at document's `data` level.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Conflict Wrong Type Error": {
                    "summary": "Conflict Wrong Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "The given `type` member does not match the resource.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "notifications"
        ],
        "requestBody": {
          "description": "Update a Notification.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateNotification"
              },
              "example": {
                "data": {
                  "type": "notification",
                  "attributes": {
                    "read": "true"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Delete a Notification.",
        "operationId": "deleteNotification",
        "summary": "Delete Notification",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Id of a Notification to delete."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read",
              "delete"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Success"
                },
                "examples": {
                  "Ok": {
                    "summary": "Ok",
                    "value": {
                      "meta": {
                        "result": "Success"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthorized Error": {
                    "summary": "Unauthorized Error",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "You do not have the required permissions to access this resource. Note: OAuth 2 scopes do not overrule application level permissions.",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "notifications"
        ]
      }
    },
    "/organisation_memberships": {
      "get": {
        "description": "Get a list of existing OrganisationMemberships.",
        "operationId": "getOrganisationMemberships",
        "summary": "Get Organisation Memberships",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "List of OrganisationMembership attributes to be included in response."
          },
          {
            "name": "deleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Include soft deleted organisation_memberships."
          },
          {
            "name": "filter",
            "description": "Resources and/or attributes to filter by.",
            "in": "query",
            "schema": {
              "type": "object",
              "properties": {
                "organisation_memberships": {
                  "type": "object",
                  "additionalProperties": false
                },
                "user": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "username": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "email": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "List of related resource to include. Allowed values are: `user`."
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "Pagination"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "Sorting"
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationMemberships"
                },
                "examples": {
                  "List of OrganisationMemberships": {
                    "summary": "List of OrganisationMemberships",
                    "value": {
                      "data": [
                        {
                          "id": "1417",
                          "type": "organisation_membership",
                          "attributes": {
                            "created_at": "2020-02-14T12:39:24.103Z",
                            "role": "admin"
                          },
                          "relationships": {
                            "user": {
                              "data": {
                                "id": "1417",
                                "type": "user"
                              }
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/organisation_memberships/1417"
                          }
                        },
                        {
                          "id": "1418",
                          "type": "organisation_membership",
                          "attributes": {
                            "created_at": "2020-02-14T12:39:24.179Z",
                            "role": "admin"
                          },
                          "relationships": {
                            "user": {
                              "data": {
                                "id": "1418",
                                "type": "user"
                              }
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/organisation_memberships/1418"
                          }
                        },
                        {
                          "id": "1419",
                          "type": "organisation_membership",
                          "attributes": {
                            "created_at": "2020-02-14T12:39:24.239Z",
                            "role": "member"
                          },
                          "relationships": {
                            "user": {
                              "data": {
                                "id": "1419",
                                "type": "user"
                              }
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/organisation_memberships/1419"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "organisation_memberships"
        ]
      }
    },
    "/organisation_memberships/{id}": {
      "get": {
        "description": "Get a single OrganisationMembership by its id.",
        "operationId": "getOrganisationMembership",
        "summary": "Get Organisation Membership",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "An id of OrganisationMembership to get."
          },
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "List of OrganisationMembership attributes to be included in response."
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "List of related resource to include. Allowed values are: `users`"
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationMembership"
                },
                "examples": {
                  "OrganisationMembership": {
                    "summary": "OrganisationMembership",
                    "value": {
                      "data": {
                        "id": "1422",
                        "type": "organisation_membership",
                        "attributes": {
                          "created_at": "2020-02-14T12:39:24.534Z",
                          "role": "admin"
                        },
                        "relationships": {
                          "user": {
                            "data": {
                              "id": "1422",
                              "type": "user"
                            }
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/organisation_memberships/1422"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Wrong Include Error": {
                    "summary": "Wrong Include Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong `include` value(s) given: `spaceships`, `aliens`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "organisation_memberships"
        ]
      },
      "patch": {
        "description": "Update a OrganisationMembership.",
        "operationId": "updateOrganisationMembership",
        "summary": "Update Organisation Membership",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Id of a OrganisationMembership to update."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read",
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationMembership"
                },
                "examples": {
                  "OrganisationMembership": {
                    "summary": "OrganisationMembership",
                    "value": {
                      "data": {
                        "id": "1430",
                        "type": "organisation_membership",
                        "attributes": {
                          "created_at": "2020-02-14T12:39:25.498Z",
                          "role": "member"
                        },
                        "relationships": {
                          "user": {
                            "data": {
                              "id": "1430",
                              "type": "user"
                            }
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/organisation_memberships/1430"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Bad Request Error": {
                    "summary": "Bad Request Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Missing `data` member at document's top level.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Conflict Missing Type Error": {
                    "summary": "Conflict Missing Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "Missing `type` member at document's `data` level.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Conflict Wrong Type Error": {
                    "summary": "Conflict Wrong Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "The given `type` member does not match the resource.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "organisation_memberships"
        ],
        "requestBody": {
          "description": "Update a OrganisationMembership.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOrganisationMembership"
              },
              "example": {
                "data": {
                  "type": "organisation_membership",
                  "attributes": {
                    "role": "member"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Delete a OrganisationMemberships.",
        "operationId": "deleteOrganisationMembership",
        "summary": "Delete Organisation Membership",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Id of a OrganisationMembership to delete."
          },
          {
            "name": "heir_id",
            "required": true,
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Id of an heir."
          },
          {
            "name": "deleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Real destroy."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read",
              "delete"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Success"
                },
                "examples": {
                  "Ok": {
                    "summary": "Ok",
                    "value": {
                      "meta": {
                        "result": "Success"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Missing heir error": {
                    "summary": "Missing heir error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "An heir is missing",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Last admin error": {
                    "summary": "Last admin error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "An heir is missing",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthorized Error": {
                    "summary": "Unauthorized Error",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "You do not have the required permissions to access this resource. Note: OAuth 2 scopes do not overrule application level permissions.",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "organisation_memberships"
        ]
      }
    },
    "/organisations": {
      "get": {
        "description": "Get a list of existing Organisations.",
        "operationId": "getOrganisations",
        "summary": "Get Organisations",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "List of Organisation attributes to be included in response."
          },
          {
            "name": "filter",
            "description": "Resources and/or attributes to filter by.",
            "in": "query",
            "schema": {
              "type": "object",
              "properties": {
                "organisations": {
                  "type": "object",
                  "additionalProperties": false
                }
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "Pagination"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "Sorting"
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Organisations"
                },
                "examples": {
                  "List of Organisations": {
                    "summary": "List of Organisations",
                    "value": {
                      "data": [
                        {
                          "id": "1",
                          "type": "organisation",
                          "attributes": {
                            "name": "Cubuslab_test",
                            "description": null,
                            "location": null,
                            "website": null,
                            "domain": "cubuslab",
                            "settings": {},
                            "logo": {
                              "url": {
                                "medium": null,
                                "thumb": null
                              }
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/organisations/1"
                          }
                        },
                        {
                          "id": "2",
                          "type": "organisation",
                          "attributes": {
                            "name": "Koch, Purdy and Pfannerstill",
                            "description": "Ut aut quia molestias.",
                            "location": null,
                            "website": null,
                            "domain": "nikolaus-xyz-schneider",
                            "settings": {},
                            "logo": {
                              "url": {
                                "medium": "http://nikolaus-xyz-schneider.localhost:5000/api/v2/organisations/2-1589455236/logo?version=medium",
                                "thumb": "http://nikolaus-xyz-schneider.localhost:5000/api/v2/organisations/2-1589455236/logo?version=thumb"
                              }
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/organisations/2"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "organisations"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrganisation"
              }
            }
          }
        },
        "description": "Create a Organisation.",
        "operationId": "createOrganisation",
        "summary": "Create Organisation",
        "security": [
          {
            "oauth2": [
              "read",
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Organisation"
                },
                "examples": {
                  "Organisation": {
                    "summary": "Organisation",
                    "value": {
                      "data": {
                        "id": "8",
                        "type": "organisation",
                        "attributes": {
                          "name": "labpolt",
                          "description": null,
                          "location": null,
                          "website": null,
                          "domain": "labpoltava",
                          "logo": {
                            "url": {
                              "medium": "http://labpoltava.localhost:5000/api/v2/organisations/8-1589455236/logo?version=medium",
                              "thumb": "http://labpoltava.localhost:5000/api/v2/organisations/8-1589455236/logo?version=thumb"
                            }
                          },
                          "settings": {}
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/organisations/8"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Bad Request Error": {
                    "summary": "Bad Request Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Missing `data` member at document's top level.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Missed Required Attributes Error": {
                    "summary": "Missed Required Attributes Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Missed required attribute(s) for organisation: `domain`, `name`.",
                          "title": "Bad Request",
                          "source": {
                            "messages": {
                              "name": [
                                "can't be blank"
                              ],
                              "domain": [
                                "can't be blank",
                                "is too short (minimum is 3 characters)"
                              ]
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "ID parameter given": {
                    "summary": "ID parameter given",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "ID parameter is not allowed for `create` requests.",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Conflict Missing Type Error": {
                    "summary": "Conflict Missing Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "Missing `type` member at document's `data` level.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Conflict Wrong Type Error": {
                    "summary": "Conflict Wrong Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "The given `type` member does not match the resource.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "organisations"
        ]
      }
    },
    "/organisations/{id}": {
      "patch": {
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOrganisation"
              }
            }
          }
        },
        "description": "Update a Organisation.",
        "operationId": "updateOrganisation",
        "summary": "Update Organisation",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Id of a Organisation to update."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read",
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Organisation"
                },
                "examples": {
                  "Organisation": {
                    "summary": "Organisation",
                    "value": {
                      "data": {
                        "id": "30",
                        "type": "organisation",
                        "attributes": {
                          "name": "Towne-Von",
                          "description": "Non natus omnis sunt.",
                          "location": null,
                          "website": null,
                          "domain": "westglover-xyz-kuhicking",
                          "logo": {
                            "url": {
                              "medium": null,
                              "thumb": null
                            }
                          },
                          "settings": {
                            "theme": {
                              "primary": {
                                "main": "#ffad00"
                              },
                              "secondary": {
                                "main": "#ff2210"
                              }
                            }
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/organisations/30"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Bad Request Error": {
                    "summary": "Bad Request Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Missing `data` member at document's top level.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Conflict Missing Type Error": {
                    "summary": "Conflict Missing Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "Missing `type` member at document's `data` level.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Conflict Wrong Type Error": {
                    "summary": "Conflict Wrong Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "The given `type` member does not match the resource.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "organisations"
        ]
      },
      "get": {
        "description": "Get a single Organisation by its id.",
        "operationId": "getOrganisation",
        "summary": "Get Organisation",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "An id of Organisation to get."
          },
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "List of Organisation attributes to be included in response."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Organisation"
                },
                "examples": {
                  "Organisation": {
                    "summary": "Organisation",
                    "value": {
                      "data": {
                        "id": "22",
                        "type": "organisation",
                        "attributes": {
                          "name": "Hayes, Kemmer and Cronin",
                          "description": "Hic quos et ut.",
                          "location": null,
                          "website": null,
                          "domain": "hirthewillms-xyz-torphycrooks",
                          "logo": {
                            "url": {
                              "medium": "http://hirthewillms-xyz-torphycrooks.localhost:5000/api/v2/organisations/22-1589455238/logo?version=medium",
                              "thumb": "http://hirthewillms-xyz-torphycrooks.localhost:5000/api/v2/organisations/22-1589455238/logo?version=thumb"
                            }
                          },
                          "settings": {
                            "theme": {}
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/organisations/22"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "organisations"
        ]
      }
    },
    "/permissions": {
      "get": {
        "description": "Get a list of existing Permissions.",
        "operationId": "getPermissions",
        "summary": "Get Permissions",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "List of Permission attributes to be included in response."
          },
          {
            "name": "filter",
            "description": "Resources and/or attributes to filter by.",
            "in": "query",
            "schema": {
              "type": "object",
              "properties": {
                "permissions": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "user_id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "collection_id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "resource_id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "resource_type": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "rules": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "name": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "search_string": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "user": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "username": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "email": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "collection": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "name": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "parent_id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "resource": {
                  "type": "object",
                  "additionalProperties": false
                }
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "Pagination"
          },
          {
            "name": "deleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Include soft deleted samples."
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "Sorting"
          },
          {
            "name": "distinct_for_search",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Distinct"
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Permissions"
                },
                "examples": {
                  "List of Permissions": {
                    "summary": "List of Permissions",
                    "value": {
                      "data": [
                        {
                          "id": "2789",
                          "type": "permission",
                          "attributes": {
                            "rules": {
                              "creating": true,
                              "deleting": true,
                              "updating": true,
                              "executing": true,
                              "updating_rules": true,
                              "updating_structure": true
                            },
                            "privileged": false,
                            "collection_id": 2451,
                            "resource_id": 2452,
                            "resource_type": "Collection",
                            "user_id": 1503,
                            "deleted_at": null,
                            "created_at": "2020-02-14T12:39:33.955Z",
                            "updated_at": "2020-02-14T12:39:33.955Z",
                            "collection_owner": true,
                            "name": "default-collection-1523"
                          },
                          "relationships": {
                            "user": {
                              "data": {
                                "id": "1503",
                                "type": "user"
                              }
                            },
                            "collection": {
                              "data": {
                                "id": "2451",
                                "type": "collection"
                              }
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/permissions/2789"
                          }
                        },
                        {
                          "id": "2792",
                          "type": "permission",
                          "attributes": {
                            "rules": {
                              "creating": true,
                              "deleting": true,
                              "updating": true,
                              "executing": true,
                              "updating_rules": true,
                              "updating_structure": true
                            },
                            "privileged": false,
                            "collection_id": 2454,
                            "resource_id": 2455,
                            "resource_type": "Collection",
                            "user_id": 1505,
                            "deleted_at": null,
                            "created_at": "2020-02-14T12:39:34.071Z",
                            "updated_at": "2020-02-14T12:39:34.071Z",
                            "collection_owner": true,
                            "name": "collection"
                          },
                          "relationships": {
                            "user": {
                              "data": {
                                "id": "1505",
                                "type": "user"
                              }
                            },
                            "collection": {
                              "data": {
                                "id": "2454",
                                "type": "collection"
                              }
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/permissions/2792"
                          }
                        },
                        {
                          "id": "2796",
                          "type": "permission",
                          "attributes": {
                            "rules": {
                              "creating": true,
                              "deleting": true,
                              "updating": true,
                              "executing": true,
                              "updating_rules": true,
                              "updating_structure": true
                            },
                            "privileged": false,
                            "collection_id": 2458,
                            "resource_id": 45,
                            "resource_type": "Sample",
                            "user_id": 1506,
                            "deleted_at": null,
                            "created_at": "2020-02-14T12:39:34.168Z",
                            "updated_at": "2020-02-14T12:39:34.168Z",
                            "collection_owner": false,
                            "name": "thorium 48297783-3b0e-4ed5-b65d-cdf550e9e288"
                          },
                          "relationships": {
                            "user": {
                              "data": {
                                "id": "1506",
                                "type": "user"
                              }
                            },
                            "collection": {
                              "data": {
                                "id": "2458",
                                "type": "collection"
                              }
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/permissions/2796"
                          }
                        },
                        {
                          "id": "2797",
                          "type": "permission",
                          "attributes": {
                            "rules": {
                              "creating": false,
                              "deleting": false,
                              "updating": false,
                              "executing": false,
                              "updating_rules": false,
                              "updating_structure": false
                            },
                            "privileged": false,
                            "collection_id": 2452,
                            "resource_id": 2455,
                            "resource_type": "Collection",
                            "user_id": 1503,
                            "deleted_at": null,
                            "created_at": "2020-02-14T12:39:34.177Z",
                            "updated_at": "2020-02-14T12:39:34.177Z",
                            "collection_owner": false,
                            "name": "collection"
                          },
                          "relationships": {
                            "user": {
                              "data": {
                                "id": "1503",
                                "type": "user"
                              }
                            },
                            "collection": {
                              "data": {
                                "id": "2452",
                                "type": "collection"
                              }
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/permissions/2797"
                          }
                        },
                        {
                          "id": "2798",
                          "type": "permission",
                          "attributes": {
                            "rules": {
                              "creating": false,
                              "deleting": false,
                              "updating": false,
                              "executing": false,
                              "updating_rules": false,
                              "updating_structure": false
                            },
                            "privileged": false,
                            "collection_id": 2455,
                            "resource_id": 45,
                            "resource_type": "Sample",
                            "user_id": 1503,
                            "deleted_at": null,
                            "created_at": "2020-02-14T12:39:34.186Z",
                            "updated_at": "2020-02-14T12:39:34.186Z",
                            "collection_owner": false,
                            "name": "thorium 48297783-3b0e-4ed5-b65d-cdf550e9e288"
                          },
                          "relationships": {
                            "user": {
                              "data": {
                                "id": "1503",
                                "type": "user"
                              }
                            },
                            "collection": {
                              "data": {
                                "id": "2455",
                                "type": "collection"
                              }
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/permissions/2798"
                          }
                        },
                        {
                          "id": "2806",
                          "type": "permission",
                          "attributes": {
                            "rules": {
                              "creating": true,
                              "deleting": true,
                              "updating": true,
                              "executing": true,
                              "updating_rules": true,
                              "updating_structure": true
                            },
                            "privileged": false,
                            "collection_id": 2463,
                            "resource_id": 47,
                            "resource_type": "Sample",
                            "user_id": 1509,
                            "deleted_at": null,
                            "created_at": "2020-02-14T12:39:34.389Z",
                            "updated_at": "2020-02-14T12:39:34.389Z",
                            "collection_owner": false,
                            "name": "iridium cd3cda34-d924-426a-98ec-c033442e523c"
                          },
                          "relationships": {
                            "user": {
                              "data": {
                                "id": "1509",
                                "type": "user"
                              }
                            },
                            "collection": {
                              "data": {
                                "id": "2463",
                                "type": "collection"
                              }
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/permissions/2806"
                          }
                        },
                        {
                          "id": "2807",
                          "type": "permission",
                          "attributes": {
                            "rules": {
                              "creating": true,
                              "deleting": true,
                              "updating": true,
                              "executing": true,
                              "updating_rules": true,
                              "updating_structure": true
                            },
                            "privileged": false,
                            "collection_id": 2452,
                            "resource_id": 2464,
                            "resource_type": "Collection",
                            "user_id": 1503,
                            "deleted_at": null,
                            "created_at": "2020-02-14T12:39:34.401Z",
                            "updated_at": "2020-02-14T12:39:34.401Z",
                            "collection_owner": true,
                            "name": "collection search"
                          },
                          "relationships": {
                            "user": {
                              "data": {
                                "id": "1503",
                                "type": "user"
                              }
                            },
                            "collection": {
                              "data": {
                                "id": "2452",
                                "type": "collection"
                              }
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/permissions/2807"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Wrong Filter Error": {
                    "summary": "Wrong Filter Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong permissions attributes given for filtering: `hair`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Wrong Fields Set Error": {
                    "summary": "Wrong Fields Set Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong `fields` value(s) for permissions given: `invalid`, `DROP TABLE USERS`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "permissions"
        ]
      },
      "post": {
        "description": "Create a Permission.",
        "operationId": "createPermission",
        "summary": "Create Permission",
        "security": [
          {
            "oauth2": [
              "read",
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                },
                "examples": {
                  "Permission": {
                    "summary": "Permission",
                    "value": {
                      "data": {
                        "id": "3568",
                        "type": "permission",
                        "attributes": {
                          "rules": {
                            "deleting": true,
                            "updating": true,
                            "executing": true,
                            "updating_rules": true,
                            "creating": true,
                            "updating_structure": true
                          },
                          "privileged": false,
                          "collection_id": 2919,
                          "resource_id": 146,
                          "resource_type": "Sample",
                          "user_id": 1765,
                          "deleted_at": null,
                          "created_at": "2020-02-14T12:39:59.442Z",
                          "updated_at": "2020-02-14T12:39:59.442Z",
                          "collection_owner": false,
                          "name": "roentgenium 0c12d9e7-3ebf-429c-91b8-3d02beef8a85"
                        },
                        "relationships": {
                          "user": {
                            "data": {
                              "id": "1765",
                              "type": "user"
                            }
                          },
                          "collection": {
                            "data": {
                              "id": "2919",
                              "type": "collection"
                            }
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/permissions/3568"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Bad Request Error": {
                    "summary": "Bad Request Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Missing `data` member at document's top level.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthorized Error because of a missed scope": {
                    "summary": "Unauthorized Error because of a missed scope",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "Insufficient OAuth2 scope to perform this operation. Required: Update",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Conflict Missing Type Error": {
                    "summary": "Conflict Missing Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "Missing `type` member at document's `data` level.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Conflict Wrong Type Error": {
                    "summary": "Conflict Wrong Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "The given `type` member does not match the resource.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "permissions"
        ],
        "requestBody": {
          "description": "Create a Permission.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePermission"
              },
              "example": {
                "data": {
                  "type": "permission",
                  "attributes": {
                    "user_id": "1757",
                    "collection_id": "2906",
                    "resource_id": "146",
                    "resource_type": "Sample"
                  },
                  "relationships": {
                    "user": {
                      "data": {
                        "id": "1765"
                      }
                    },
                    "collection": {
                      "data": {
                        "id": "2919"
                      }
                    },
                    "resource": {
                      "data": {
                        "id": "146",
                        "type": "Sample"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/permissions/{id}": {
      "get": {
        "description": "Get a single Permission by its id.",
        "operationId": "getPermission",
        "summary": "Get Permission",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "An id of Permission to get."
          },
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "List of Permission attributes to be included in response."
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "List of related resource to include. Allowed values are: `user`, `collection`, `resource`."
          },
          {
            "name": "deleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Find in archive."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                },
                "examples": {
                  "Permission": {
                    "summary": "Permission",
                    "value": {
                      "data": {
                        "id": "3385",
                        "type": "permission",
                        "attributes": {
                          "rules": {
                            "deleting": false,
                            "updating": false,
                            "executing": false,
                            "updating_rules": false,
                            "creating": false,
                            "updating_structure": false
                          },
                          "privileged": false,
                          "collection_id": 2796,
                          "resource_id": 117,
                          "resource_type": "Sample",
                          "user_id": 1702,
                          "deleted_at": null,
                          "created_at": "2020-02-14T12:39:54.165Z",
                          "updated_at": "2020-02-14T12:39:54.165Z",
                          "collection_owner": false,
                          "name": "protactinium 53b78101-584e-4997-a767-98996d741c65"
                        },
                        "relationships": {
                          "user": {
                            "data": {
                              "id": "1702",
                              "type": "user"
                            }
                          },
                          "collection": {
                            "data": {
                              "id": "2796",
                              "type": "collection"
                            }
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/permissions/3385"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Wrong Include Error": {
                    "summary": "Wrong Include Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong `include` value(s) given: `spaceships`, `aliens`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Wrong Fields Set Error": {
                    "summary": "Wrong Fields Set Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong `fields` value(s) for permissions given: `invalid`, `DROP TABLE USERS`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "permissions"
        ]
      },
      "patch": {
        "description": "Update a Permission.",
        "operationId": "updatePermission",
        "summary": "Update Permission",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Id of a Permission to update."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read",
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                },
                "examples": {
                  "Permission": {
                    "summary": "Permission",
                    "value": {
                      "data": {
                        "id": "3695",
                        "type": "permission",
                        "attributes": {
                          "rules": {
                            "deleting": "false",
                            "updating": "true",
                            "executing": "false"
                          },
                          "privileged": true,
                          "collection_id": 3024,
                          "resource_id": 167,
                          "resource_type": "Sample",
                          "user_id": 1814,
                          "deleted_at": null,
                          "created_at": "2020-02-14T12:40:02.978Z",
                          "updated_at": "2020-02-14T12:40:03.244Z",
                          "collection_owner": false,
                          "name": "polonium 1cb01799-6e3a-415b-b33f-a7d5b2d8fd3d"
                        },
                        "relationships": {
                          "user": {
                            "data": {
                              "id": "1814",
                              "type": "user"
                            }
                          },
                          "collection": {
                            "data": {
                              "id": "3024",
                              "type": "collection"
                            }
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/permissions/3695"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Bad Request Error": {
                    "summary": "Bad Request Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Missing `data` member at document's top level.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthorized Error because of a missed scope": {
                    "summary": "Unauthorized Error because of a missed scope",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "Insufficient OAuth2 scope to perform this operation. Required: Update",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Conflict Missing Type Error": {
                    "summary": "Conflict Missing Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "Missing `type` member at document's `data` level.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Conflict Wrong Type Error": {
                    "summary": "Conflict Wrong Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "The given `type` member does not match the resource.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "permissions"
        ],
        "requestBody": {
          "description": "Update a Permission.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePermission"
              },
              "example": {
                "data": {
                  "type": "permission",
                  "attributes": {
                    "user_id": "1814",
                    "collection_id": "3024",
                    "resource_id": "167",
                    "resource_type": "Sample",
                    "rules": {
                      "updating": "true",
                      "deleting": "false",
                      "executing": "false"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Delete a Permission.",
        "operationId": "deletePermission",
        "summary": "Delete Permission",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Id of a Permission to delete."
          },
          {
            "name": "deleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Real destroy."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read",
              "delete"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Success"
                },
                "examples": {
                  "Ok": {
                    "summary": "Ok",
                    "value": {
                      "meta": {
                        "result": "Success"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthorized Error": {
                    "summary": "Unauthorized Error",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "You do not have the required permissions to access this resource. Note: OAuth 2 scopes do not overrule application level permissions.",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Unauthorized Error because of a missed scope": {
                    "summary": "Unauthorized Error because of a missed scope",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "Insufficient OAuth2 scope to perform this operation. Required: Delete",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "permissions"
        ]
      }
    },
    "/ports/{id}": {
      "get": {
        "description": "Get a single Port by its id.",
        "operationId": "getPort",
        "summary": "Get Port",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "An id of Port to get."
          },
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "List of Port attributes to be included in response."
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "List of related resource to include. Allowed values are: `connector`, `device`."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Port"
                },
                "examples": {
                  "Port": {
                    "summary": "Port",
                    "value": {
                      "data": {
                        "id": "476",
                        "type": "port",
                        "attributes": {
                          "status": null,
                          "position": "unknown",
                          "device_type_simulation": "",
                          "instance": null,
                          "parameters": {},
                          "driver_type": {},
                          "connector_key_nice": "4306-7652-7527"
                        },
                        "relationships": {
                          "device": {
                            "data": {
                              "id": "394",
                              "type": "device"
                            }
                          },
                          "connector": {
                            "data": {
                              "id": "117",
                              "type": "connector"
                            }
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/ports/476"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Wrong Include Error": {
                    "summary": "Wrong Include Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong `include` value(s) given: `spaceships`, `aliens`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "ports"
        ]
      },
      "patch": {
        "description": "Update a Port.",
        "operationId": "updatePort",
        "summary": "Update Port",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Id of a Port to update."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read",
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Port"
                },
                "examples": {
                  "Port": {
                    "summary": "Port",
                    "value": {
                      "data": {
                        "id": "536",
                        "type": "port",
                        "attributes": {
                          "status": null,
                          "position": "top",
                          "device_type_simulation": "",
                          "instance": null,
                          "parameters": {},
                          "driver_type": {},
                          "connector_key_nice": "9075-2317-8413"
                        },
                        "relationships": {
                          "device": {
                            "data": {
                              "id": "400",
                              "type": "device"
                            }
                          },
                          "connector": {
                            "data": {
                              "id": "129",
                              "type": "connector"
                            }
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/ports/536"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Bad Request Error": {
                    "summary": "Bad Request Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Missing `data` member at document's top level.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Conflict Missing Type Error": {
                    "summary": "Conflict Missing Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "Missing `type` member at document's `data` level.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Conflict Wrong Type Error": {
                    "summary": "Conflict Wrong Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "The given `type` member does not match the resource.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "ports"
        ],
        "requestBody": {
          "description": "Update a Port.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePort"
              },
              "example": {
                "data": {
                  "type": "port",
                  "attributes": {
                    "position": "top"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/ports/{id}/unbind_device": {
      "delete": {
        "description": "Unbind device from the given Port.",
        "operationId": "unbind_devicePort",
        "summary": "Unbind Device Port",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Id of a Port."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read",
              "delete"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Port"
                },
                "examples": {
                  "Port": {
                    "summary": "Port",
                    "value": {
                      "data": {
                        "id": "596",
                        "type": "port",
                        "attributes": {
                          "status": null,
                          "position": "unknown",
                          "device_type_simulation": "",
                          "instance": null,
                          "parameters": {},
                          "driver_type": {
                            "name": "driver-idle",
                            "version": "0.0.1"
                          },
                          "connector_key_nice": "1109-6680-2124"
                        },
                        "relationships": {
                          "device": {
                            "data": null
                          },
                          "connector": {
                            "data": {
                              "id": "141",
                              "type": "connector"
                            }
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/ports/596"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Bad Request Error: port has no bounde device": {
                    "summary": "Bad Request Error: port has no bounde device",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "No device is bound to the port.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthorized Error": {
                    "summary": "Unauthorized Error",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "You do not have the required permissions to access this resource. Note: OAuth 2 scopes do not overrule application level permissions.",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "ports"
        ]
      }
    },
    "/ports/{id}/bind_device": {
      "post": {
        "description": "Bind device to the given Port.",
        "operationId": "bind_devicePort",
        "summary": "Bind Device Port",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Id of a Port."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read",
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Port"
                },
                "examples": {
                  "Binding an existing device": {
                    "summary": "Binding an existing device",
                    "value": {
                      "data": {
                        "id": "646",
                        "type": "port",
                        "attributes": {
                          "status": null,
                          "position": "unknown",
                          "device_type_simulation": "",
                          "instance": null,
                          "parameters": {
                            "usb_serial": {
                              "parity": "none",
                              "baudrate": 9600,
                              "databits": 8,
                              "stopbits": 1
                            }
                          },
                          "driver_type": {
                            "name": "driver-sicsserial",
                            "version": "1.0.1"
                          },
                          "connector_key_nice": "8278-2893-5252"
                        },
                        "relationships": {
                          "device": {
                            "data": {
                              "id": "412",
                              "type": "device"
                            }
                          },
                          "connector": {
                            "data": {
                              "id": "151",
                              "type": "connector"
                            }
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/ports/646"
                        }
                      }
                    }
                  },
                  "Binding a new device": {
                    "summary": "Binding a new device",
                    "value": {
                      "data": {
                        "id": "656",
                        "type": "port",
                        "attributes": {
                          "status": null,
                          "position": "unknown",
                          "device_type_simulation": "",
                          "instance": null,
                          "parameters": {
                            "usb_serial": {
                              "parity": "none",
                              "baudrate": 19200,
                              "databits": 8,
                              "stopbits": 1
                            }
                          },
                          "driver_type": {
                            "name": "driver-vacuubrand",
                            "version": "0.0.1"
                          },
                          "connector_key_nice": "4658-0323-9818"
                        },
                        "relationships": {
                          "device": {
                            "data": {
                              "id": "414",
                              "type": "device"
                            }
                          },
                          "connector": {
                            "data": {
                              "id": "153",
                              "type": "connector"
                            }
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/ports/656"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthorized Error": {
                    "summary": "Unauthorized Error",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "You do not have the required permissions to access this resource. Note: OAuth 2 scopes do not overrule application level permissions.",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "ports"
        ]
      }
    },
    "/ports/{id}/reset": {
      "delete": {
        "description": "Resets the given Port.",
        "operationId": "resetPort",
        "summary": "Reset Port",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Id of a Port."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read",
              "delete"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Port"
                },
                "examples": {
                  "Port": {
                    "summary": "Port",
                    "value": {
                      "data": {
                        "id": "696",
                        "type": "port",
                        "attributes": {
                          "status": null,
                          "position": "unknown",
                          "device_type_simulation": "",
                          "instance": null,
                          "parameters": {},
                          "driver_type": {},
                          "connector_key_nice": "6809-6716-8838"
                        },
                        "relationships": {
                          "device": {
                            "data": {
                              "id": "418",
                              "type": "device"
                            }
                          },
                          "connector": {
                            "data": {
                              "id": "161",
                              "type": "connector"
                            }
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/ports/696"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthorized Error": {
                    "summary": "Unauthorized Error",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "You do not have the required permissions to access this resource. Note: OAuth 2 scopes do not overrule application level permissions.",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "ports"
        ]
      }
    },
    "/ports/{id}/manual_override": {
      "put": {
        "description": "Prepares a Port for manual overrides.",
        "operationId": "manual_overridePort",
        "summary": "Manual Override Port",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Id of a Job."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read",
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Port"
                },
                "examples": {
                  "Port": {
                    "summary": "Port",
                    "value": {
                      "data": {
                        "id": "736",
                        "type": "port",
                        "attributes": {
                          "status": null,
                          "position": "unknown",
                          "device_type_simulation": "",
                          "instance": null,
                          "parameters": {},
                          "driver_type": {},
                          "connector_key_nice": "9953-3906-9524"
                        },
                        "relationships": {
                          "device": {
                            "data": {
                              "id": "422",
                              "type": "device"
                            }
                          },
                          "connector": {
                            "data": {
                              "id": "169",
                              "type": "connector"
                            }
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/ports/736"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthorized Error": {
                    "summary": "Unauthorized Error",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "You do not have the required permissions to access this resource. Note: OAuth 2 scopes do not overrule application level permissions.",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "ports"
        ]
      }
    },
    "/protocol_rules": {
      "get": {
        "description": "Get a list of existing ProtocolRules.",
        "operationId": "getProtocolRules",
        "summary": "Get Protocol Rules",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "List of Protocol Rules attributes to be included in response."
          },
          {
            "name": "filter",
            "description": "Resources and/or attributes to filter by.",
            "in": "query",
            "schema": {
              "type": "object",
              "properties": {
                "protocol_rules": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "name": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "type": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "owner": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "username": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "email": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "organisation": {
                  "type": "object",
                  "additionalProperties": false
                }
              }
            }
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "List of related resource to include. Allowed values are: `owner`, `organisation`."
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "Pagination"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "Sorting"
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProtocolRules"
                },
                "examples": {
                  "List of ProtocolRules": {
                    "summary": "List of ProtocolRules",
                    "value": {
                      "data": [
                        {
                          "id": "1",
                          "type": "protocol_rule",
                          "attributes": {
                            "id": 1,
                            "type": null,
                            "name": "Bernhard",
                            "parameters": {
                              "default": {}
                            },
                            "created_at": "2020-02-14T12:40:29.619Z",
                            "updated_at": "2020-02-14T12:40:29.619Z"
                          },
                          "relationships": {
                            "owner": {
                              "data": {
                                "id": "2060",
                                "type": "user"
                              }
                            },
                            "organisation": {
                              "data": {
                                "id": "644",
                                "type": "organisation"
                              }
                            },
                            "measurements": {
                              "data": []
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/protocol_rules/1"
                          }
                        },
                        {
                          "id": "2",
                          "type": "protocol_rule",
                          "attributes": {
                            "id": 2,
                            "type": null,
                            "name": "Koss",
                            "parameters": {
                              "default": {}
                            },
                            "created_at": "2020-02-14T12:40:29.622Z",
                            "updated_at": "2020-02-14T12:40:29.622Z"
                          },
                          "relationships": {
                            "owner": {
                              "data": {
                                "id": "2060",
                                "type": "user"
                              }
                            },
                            "organisation": {
                              "data": {
                                "id": "644",
                                "type": "organisation"
                              }
                            },
                            "measurements": {
                              "data": []
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/protocol_rules/2"
                          }
                        },
                        {
                          "id": "3",
                          "type": "protocol_rule",
                          "attributes": {
                            "id": 3,
                            "type": null,
                            "name": "Rath",
                            "parameters": {
                              "default": {}
                            },
                            "created_at": "2020-02-14T12:40:29.625Z",
                            "updated_at": "2020-02-14T12:40:29.625Z"
                          },
                          "relationships": {
                            "owner": {
                              "data": {
                                "id": "2060",
                                "type": "user"
                              }
                            },
                            "organisation": {
                              "data": {
                                "id": "644",
                                "type": "organisation"
                              }
                            },
                            "measurements": {
                              "data": []
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/protocol_rules/3"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Wrong Filter Error": {
                    "summary": "Wrong Filter Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong protocol_rules attributes given for filtering: `hair`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Wrong Fields Set Error (all fieldnames are invalid)": {
                    "summary": "Wrong Fields Set Error (all fieldnames are invalid)",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong `fields` value(s) for protocol_rules given: `invalid`, `invalid2`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Wrong Fields Set Error (one fieldname is invalid)": {
                    "summary": "Wrong Fields Set Error (one fieldname is invalid)",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong `fields` value(s) for protocol_rules given: `wrong`, `invalid`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "protocol_rules"
        ]
      },
      "post": {
        "description": "Create a ProtocolRule.",
        "operationId": "createProtocolRule",
        "summary": "Create Protocol Rule",
        "security": [
          {
            "oauth2": [
              "read",
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProtocolRule"
                },
                "examples": {
                  "ProtocolRule": {
                    "summary": "ProtocolRule",
                    "value": {
                      "data": {
                        "id": "30",
                        "type": "protocol_rule",
                        "attributes": {
                          "id": 30,
                          "type": "ProtocolRules::Comment",
                          "name": null,
                          "parameters": {
                            "timestamp": "1550928330",
                            "comment": "Text"
                          },
                          "created_at": "2020-02-14T12:40:43.808Z",
                          "updated_at": "2020-02-14T12:40:43.808Z"
                        },
                        "relationships": {
                          "owner": {
                            "data": {
                              "id": "2125",
                              "type": "user"
                            }
                          },
                          "organisation": {
                            "data": {
                              "id": "657",
                              "type": "organisation"
                            }
                          },
                          "measurements": {
                            "data": [
                              {
                                "id": "88",
                                "type": "measurement"
                              }
                            ]
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/protocol_rules/30"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Bad Request Error": {
                    "summary": "Bad Request Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Missing `data` member at document's top level.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Missed Required Attributes Error": {
                    "summary": "Missed Required Attributes Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Missed required attribute(s) for protocol_rule: `type`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthorized Error because of a missed scope": {
                    "summary": "Unauthorized Error because of a missed scope",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "Insufficient OAuth2 scope to perform this operation. Required: Update",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  },
                  "ID parameter given": {
                    "summary": "ID parameter given",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "ID parameter is not allowed for `create` requests.",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Conflict Missing Type Error": {
                    "summary": "Conflict Missing Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "Missing `type` member at document's `data` level.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Conflict Wrong Type Error": {
                    "summary": "Conflict Wrong Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "The given `type` member does not match the resource.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "protocol_rules"
        ],
        "requestBody": {
          "description": "Create a ProtocolRule.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProtocolRule"
              },
              "example": {
                "data": {
                  "type": "protocol_rule",
                  "attributes": {
                    "type": "ProtocolRules::Comment",
                    "parameters": {
                      "timestamp": "1550928330",
                      "comment": "Text"
                    },
                    "protocolable_id": "88",
                    "protocolable_type": "Measurement"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/protocol_rules/{id}": {
      "get": {
        "description": "Get a single ProtocolRule by its id.",
        "operationId": "getProtocolRule",
        "summary": "Get Protocol Rule",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "An id of ProtocolRule to get."
          },
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "List of ProtocolRule attributes to be included in response."
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "List of related resource to include. Allowed values are: `owner`, `organisation`."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProtocolRule"
                },
                "examples": {
                  "ProtocolRule": {
                    "summary": "ProtocolRule",
                    "value": {
                      "data": {
                        "id": "14",
                        "type": "protocol_rule",
                        "attributes": {
                          "id": 14,
                          "type": null,
                          "name": "Kirlin",
                          "parameters": {
                            "default": {}
                          },
                          "created_at": "2020-02-14T12:40:36.227Z",
                          "updated_at": "2020-02-14T12:40:36.227Z"
                        },
                        "relationships": {
                          "owner": {
                            "data": {
                              "id": "2090",
                              "type": "user"
                            }
                          },
                          "organisation": {
                            "data": {
                              "id": "650",
                              "type": "organisation"
                            }
                          },
                          "measurements": {
                            "data": []
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/protocol_rules/14"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Wrong Include Error": {
                    "summary": "Wrong Include Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong `include` value(s) given: `spaceships`, `aliens`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Wrong Fields Set Error (all fieldnames are invalid)": {
                    "summary": "Wrong Fields Set Error (all fieldnames are invalid)",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong `fields` value(s) for protocol_rules given: `invalid`, `invalid`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Wrong Fields Set Error (one fieldname is invalid)": {
                    "summary": "Wrong Fields Set Error (one fieldname is invalid)",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong `fields` value(s) for protocol_rules given: `invalid`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "protocol_rules"
        ]
      },
      "patch": {
        "description": "Update a ProtocolRule.",
        "operationId": "updateProtocolRule",
        "summary": "Update Protocol Rule",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Id of a ProtocolRule to update."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read",
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProtocolRule"
                },
                "examples": {
                  "ProtocolRule": {
                    "summary": "ProtocolRule",
                    "value": {
                      "data": {
                        "id": "45",
                        "type": "protocol_rule",
                        "attributes": {
                          "id": 45,
                          "type": "ProtocolRules::Comment",
                          "name": "Stiedemann",
                          "parameters": {
                            "timestamp": "1550928330",
                            "comment": "Text"
                          },
                          "created_at": "2020-02-14T12:40:52.159Z",
                          "updated_at": "2020-02-14T12:40:52.194Z"
                        },
                        "relationships": {
                          "owner": {
                            "data": {
                              "id": "2165",
                              "type": "user"
                            }
                          },
                          "organisation": {
                            "data": {
                              "id": "665",
                              "type": "organisation"
                            }
                          },
                          "measurements": {
                            "data": []
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/protocol_rules/45"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Bad Request Error": {
                    "summary": "Bad Request Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Missing `data` member at document's top level.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthorized Error because of a missed scope": {
                    "summary": "Unauthorized Error because of a missed scope",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "Insufficient OAuth2 scope to perform this operation. Required: Update",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Conflict Missing Type Error": {
                    "summary": "Conflict Missing Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "Missing `type` member at document's `data` level.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Conflict Wrong Type Error": {
                    "summary": "Conflict Wrong Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "The given `type` member does not match the resource.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "protocol_rules"
        ],
        "requestBody": {
          "description": "Update a ProtocolRule.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProtocolRule"
              },
              "example": {
                "data": {
                  "type": "protocol_rule",
                  "attributes": {
                    "type": "ProtocolRules::Comment",
                    "parameters": {
                      "timestamp": "1550928330",
                      "comment": "Text"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Delete a ProtocolRule.",
        "operationId": "deleteProtocolRule",
        "summary": "Delete Protocol Rule",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Id of a ProtocolRule to delete."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read",
              "delete"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Success"
                },
                "examples": {
                  "Ok": {
                    "summary": "Ok",
                    "value": {
                      "meta": {
                        "result": "Success"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthorized Error because of a missed scope": {
                    "summary": "Unauthorized Error because of a missed scope",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "Insufficient OAuth2 scope to perform this operation. Required: Delete",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "protocol_rules"
        ]
      }
    },
    "/protonotifications": {
      "get": {
        "description": "Get a list of existing Protonotifications.",
        "operationId": "getProtonotifications",
        "summary": "Get Protonotifications",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "List of protonotification attributes to be included in the response."
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "List of related resource to include. Allowed values are: `value`, `value`."
          },
          {
            "name": "filter",
            "description": "Resources and/or attributes to filter by.",
            "in": "query",
            "schema": {
              "type": "object",
              "properties": {
                "protonotifications": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "title": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "created_at": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "updated_at": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "owner_id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "notification_settings": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "active": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "delivery_methods": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "protonotification_id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "user_id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "created_at": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "updated_at": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "notification_triggers": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "key": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "protonotification_id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "owner": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "username": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "email": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Protonotifications"
                },
                "examples": {
                  "List of Protonotifications": {
                    "summary": "List of Protonotifications",
                    "value": {
                      "data": [
                        {
                          "id": "94",
                          "type": "protonotification",
                          "attributes": {
                            "title": "High temperature",
                            "message": null,
                            "created_at": "2020-02-14T12:41:06.843Z",
                            "updated_at": "2020-02-14T12:41:06.843Z"
                          },
                          "relationships": {
                            "organisation": {
                              "data": {
                                "id": "683",
                                "type": "organisation"
                              }
                            },
                            "owner": {
                              "data": {
                                "id": "2227",
                                "type": "owner"
                              }
                            },
                            "notification_triggers": {
                              "data": []
                            },
                            "notification_settings": {
                              "data": [
                                {
                                  "id": "158",
                                  "type": "notification_setting"
                                }
                              ]
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/protonotifications/94"
                          }
                        },
                        {
                          "id": "93",
                          "type": "protonotification",
                          "attributes": {
                            "title": "First",
                            "message": null,
                            "created_at": "2020-02-14T12:41:06.832Z",
                            "updated_at": "2020-02-14T12:41:06.832Z"
                          },
                          "relationships": {
                            "organisation": {
                              "data": {
                                "id": "683",
                                "type": "organisation"
                              }
                            },
                            "owner": {
                              "data": {
                                "id": "2227",
                                "type": "owner"
                              }
                            },
                            "notification_triggers": {
                              "data": []
                            },
                            "notification_settings": {
                              "data": [
                                {
                                  "id": "157",
                                  "type": "notification_setting"
                                }
                              ]
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/protonotifications/93"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Wrong Filter Error": {
                    "summary": "Wrong Filter Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong protonotifications attributes given for filtering: `hair`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Wrong Fields Set Error (all fieldnames are invalid)": {
                    "summary": "Wrong Fields Set Error (all fieldnames are invalid)",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong `fields` value(s) for protonotifications given: `invalid`, `invalid2`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Wrong Fields Set Error (one fieldname is invalid)": {
                    "summary": "Wrong Fields Set Error (one fieldname is invalid)",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong `fields` value(s) for protonotifications given: `wrong`, `invalid`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "protonotifications"
        ]
      },
      "post": {
        "description": "Create a Protonotification.",
        "operationId": "createProtonotification",
        "summary": "Create Protonotification",
        "security": [
          {
            "oauth2": [
              "read",
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Protonotification"
                },
                "examples": {
                  "Protonotification": {
                    "summary": "Protonotification",
                    "value": {
                      "data": {
                        "id": "107",
                        "type": "protonotification",
                        "attributes": {
                          "title": "High Temperature",
                          "message": null,
                          "created_at": "2020-02-14T12:41:09.409Z",
                          "updated_at": "2020-02-14T12:41:09.409Z"
                        },
                        "relationships": {
                          "organisation": {
                            "data": {
                              "id": "697",
                              "type": "organisation"
                            }
                          },
                          "owner": {
                            "data": {
                              "id": "2241",
                              "type": "owner"
                            }
                          },
                          "notification_triggers": {
                            "data": [
                              {
                                "id": "33",
                                "type": "notification_trigger"
                              }
                            ]
                          },
                          "notification_settings": {
                            "data": [
                              {
                                "id": "171",
                                "type": "notification_setting"
                              }
                            ]
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/protonotifications/107"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Bad Request Error": {
                    "summary": "Bad Request Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Missing `data` member at document's top level.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Missed Required Attributes Error": {
                    "summary": "Missed Required Attributes Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Missed required attribute(s) for protonotification: `title`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "ID parameter given": {
                    "summary": "ID parameter given",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "ID parameter is not allowed for `create` requests.",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Conflict Missing Type Error": {
                    "summary": "Conflict Missing Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "Missing `type` member at document's `data` level.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Conflict Wrong Type Error": {
                    "summary": "Conflict Wrong Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "The given `type` member does not match the resource.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "protonotifications"
        ],
        "requestBody": {
          "description": "Create a Protonotification.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProtonotification"
              },
              "example": {
                "data": {
                  "type": "protonotification",
                  "attributes": {
                    "title": "High Temperature",
                    "delivery_methods": [
                      "email"
                    ],
                    "notification_triggers": [
                      {
                        "key": "high_temperature"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/protonotifications/{id}": {
      "get": {
        "description": "Get a single protonotification by its id.",
        "operationId": "getProtonotification",
        "summary": "Get Protonotification",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "An id of protonotification to get."
          },
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "List of protonotification attributes to be included in the response."
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "List of related resource to include. Allowed values are: `notification_settings`, `notification_triggers`, `owner`."
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "Pagination"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "Sorting"
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Protonotification"
                },
                "examples": {
                  "protonotification": {
                    "summary": "protonotification",
                    "value": {
                      "data": {
                        "id": "100",
                        "type": "protonotification",
                        "attributes": {
                          "title": "First",
                          "message": null,
                          "created_at": "2020-02-14T12:41:07.912Z",
                          "updated_at": "2020-02-14T12:41:07.912Z"
                        },
                        "relationships": {
                          "organisation": {
                            "data": {
                              "id": "689",
                              "type": "organisation"
                            }
                          },
                          "owner": {
                            "data": {
                              "id": "2233",
                              "type": "owner"
                            }
                          },
                          "notification_triggers": {
                            "data": []
                          },
                          "notification_settings": {
                            "data": [
                              {
                                "id": "164",
                                "type": "notification_setting"
                              }
                            ]
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/protonotifications/100"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Wrong Include Error": {
                    "summary": "Wrong Include Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong `include` value(s) given: `spaceships`, `aliens`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Wrong Fields Set Error (all fieldnames are invalid)": {
                    "summary": "Wrong Fields Set Error (all fieldnames are invalid)",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong `fields` value(s) for protonotifications given: `invalid`, `invalid`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Wrong Fields Set Error (one fieldname is invalid)": {
                    "summary": "Wrong Fields Set Error (one fieldname is invalid)",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong `fields` value(s) for protonotifications given: `invalid`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "protonotifications"
        ]
      },
      "patch": {
        "description": "Update a Protonotification.",
        "operationId": "updateProtonotification",
        "summary": "Update Protonotification",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Id of a Protonotification to update."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read",
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Protonotification"
                },
                "examples": {
                  "Protonotification": {
                    "summary": "Protonotification",
                    "value": {
                      "data": {
                        "id": "112",
                        "type": "protonotification",
                        "attributes": {
                          "title": "New Title",
                          "message": "New Message",
                          "created_at": "2020-02-14T12:41:11.500Z",
                          "updated_at": "2020-02-14T12:41:11.560Z"
                        },
                        "relationships": {
                          "organisation": {
                            "data": {
                              "id": "708",
                              "type": "organisation"
                            }
                          },
                          "owner": {
                            "data": {
                              "id": "2252",
                              "type": "owner"
                            }
                          },
                          "notification_triggers": {
                            "data": []
                          },
                          "notification_settings": {
                            "data": [
                              {
                                "id": "176",
                                "type": "notification_setting"
                              }
                            ]
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/protonotifications/112"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Bad Request Error": {
                    "summary": "Bad Request Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Missing `data` member at document's top level.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthorized Error because of a missed scope": {
                    "summary": "Unauthorized Error because of a missed scope",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "Insufficient OAuth2 scope to perform this operation. Required: Update",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Conflict Missing Type Error": {
                    "summary": "Conflict Missing Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "Missing `type` member at document's `data` level.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Conflict Wrong Type Error": {
                    "summary": "Conflict Wrong Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "The given `type` member does not match the resource.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "protonotifications"
        ],
        "requestBody": {
          "description": "Update a Protonotification.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProtonotification"
              },
              "example": {
                "data": {
                  "type": "protonotification",
                  "attributes": {
                    "title": "New Title",
                    "message": "New Message"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Delete a Protonotification.",
        "operationId": "deleteProtonotification",
        "summary": "Delete Protonotification",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Id of a Protonotification to delete."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read",
              "delete"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Success"
                },
                "examples": {
                  "Ok": {
                    "summary": "Ok",
                    "value": {
                      "meta": {
                        "result": "Success"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthorized Error": {
                    "summary": "Unauthorized Error",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "You do not have the required permissions to access this resource. Note: OAuth 2 scopes do not overrule application level permissions.",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "protonotifications"
        ]
      }
    },
    "/collections/{id}/resources": {
      "post": {
        "description": "Add a Resource to a Collection.",
        "operationId": "addCollectionResource",
        "summary": "Add Collection Resource",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Id of a Collection."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read",
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                },
                "examples": {
                  "Ok": {
                    "summary": "Ok",
                    "value": {
                      "data": {
                        "id": "4632",
                        "type": "permission",
                        "attributes": {
                          "rules": {
                            "deleting": true,
                            "updating": true,
                            "executing": true,
                            "updating_rules": true,
                            "creating": true,
                            "updating_structure": true
                          },
                          "privileged": false,
                          "collection_id": 3803,
                          "resource_id": 208,
                          "resource_type": "Sample",
                          "user_id": 2272,
                          "deleted_at": null,
                          "created_at": "2020-02-14T12:41:14.467Z",
                          "updated_at": "2020-02-14T12:41:14.467Z",
                          "collection_owner": false,
                          "name": "astatine 05933c68-b1d5-45fd-b9ff-8ff450de625d"
                        },
                        "relationships": {
                          "user": {
                            "data": {
                              "id": "2272",
                              "type": "user"
                            }
                          },
                          "collection": {
                            "data": {
                              "id": "3803",
                              "type": "collection"
                            }
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/permissions/4632"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                },
                "examples": {
                  "Unauthorized Error": {
                    "summary": "Unauthorized Error",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "You do not have the required permissions to access this resource. Note: OAuth 2 scopes do not overrule application level permissions.",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Unauthorized Error because of a missed scope": {
                    "summary": "Unauthorized Error because of a missed scope",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "Insufficient OAuth2 scope to perform this operation. Required: Update",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "collections"
        ],
        "requestBody": {
          "description": "Create a Collection.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/AddResource"
              },
              "example": {
                "data": {
                  "type": "resource",
                  "attributes": {
                    "resource_id": "208",
                    "resource_type": "sample"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/collections/{id}/resources/{resource_type}/{resource_id}": {
      "patch": {
        "description": "Move a Resource to a Collection.",
        "operationId": "moveCollectionResource",
        "summary": "Move Collection Resource",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Id of a Collection."
          },
          {
            "name": "resource_type",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            },
            "description": "Type of a Resource."
          },
          {
            "name": "resource_id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Id of a Resource."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read",
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                },
                "examples": {
                  "Ok": {
                    "summary": "Ok",
                    "value": {
                      "data": {
                        "id": "4672",
                        "type": "permission",
                        "attributes": {
                          "rules": {
                            "deleting": true,
                            "updating": true,
                            "executing": true,
                            "updating_rules": true,
                            "creating": true,
                            "updating_structure": true
                          },
                          "privileged": false,
                          "collection_id": 3838,
                          "resource_id": 213,
                          "resource_type": "Sample",
                          "user_id": 2287,
                          "deleted_at": null,
                          "created_at": "2020-02-14T12:41:15.948Z",
                          "updated_at": "2020-02-14T12:41:16.000Z",
                          "collection_owner": false,
                          "name": "polonium c476ecba-0d6a-4983-800e-795f1b67069a"
                        },
                        "relationships": {
                          "user": {
                            "data": {
                              "id": "2287",
                              "type": "user"
                            }
                          },
                          "collection": {
                            "data": {
                              "id": "3838",
                              "type": "collection"
                            }
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/permissions/4672"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                },
                "examples": {
                  "Unauthorized Error": {
                    "summary": "Unauthorized Error",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "You do not have the required permissions to access this resource. Note: OAuth 2 scopes do not overrule application level permissions.",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Unauthorized Error because of a missed scope": {
                    "summary": "Unauthorized Error because of a missed scope",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "Insufficient OAuth2 scope to perform this operation. Required: Update",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "collections"
        ],
        "requestBody": {
          "description": "Update a Collection.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/MoveResource"
              },
              "example": {
                "data": {
                  "type": "resource",
                  "attributes": {
                    "collection_id": "3838"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Delete a Resource from a Collection.",
        "operationId": "deleteCollectionResource",
        "summary": "Delete Collection Resource",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Id of a Collection."
          },
          {
            "name": "resource_type",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            },
            "description": "Type of a Resource."
          },
          {
            "name": "resource_id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Id of a Resource."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read",
              "delete"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Success"
                },
                "examples": {
                  "Ok": {
                    "summary": "Ok",
                    "value": {
                      "meta": {
                        "result": "Success"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthorized Error": {
                    "summary": "Unauthorized Error",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "You do not have the required permissions to access this resource. Note: OAuth 2 scopes do not overrule application level permissions.",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Unauthorized Error because of a missed scope": {
                    "summary": "Unauthorized Error because of a missed scope",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "Insufficient OAuth2 scope to perform this operation. Required: Delete",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "collections"
        ]
      }
    },
    "/samples": {
      "get": {
        "description": "Get a list of existing Samples.",
        "operationId": "getSamples",
        "summary": "Get Samples",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "List of Sample attributes to be included in response."
          },
          {
            "name": "deleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Include soft deleted samples."
          },
          {
            "name": "filter",
            "description": "Resources and/or attributes to filter by.",
            "in": "query",
            "schema": {
              "type": "object",
              "properties": {
                "samples": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "name": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "custom_attributes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "organisation": {
                  "type": "object",
                  "additionalProperties": false
                },
                "measurements": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "created_at": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "updated_at": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "container_id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "container_type": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "owner_id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "custom_attributes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "uuid": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "deleted_at": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "tasks": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "name": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "custom_attributes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "List of related resource to include. Allowed values are: `organisation`, `measurements`, `tasks`."
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "Pagination"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "Sorting"
          },
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "Searching"
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Samples"
                },
                "examples": {
                  "List of Samples": {
                    "summary": "List of Samples",
                    "value": {
                      "data": [
                        {
                          "id": "1",
                          "type": "sample",
                          "attributes": {
                            "name": "Cobalt",
                            "identifier": "8eead3e6-441c-4d27-8961-dec038b30adc",
                            "custom_attributes": [],
                            "deleted_at": null,
                            "updated_at": "2020-02-24T15:07:39.841Z",
                            "created_at": "2020-02-24T15:07:39.841Z",
                            "owner_id": 1
                          },
                          "relationships": {
                            "organisation": {
                              "data": {
                                "id": "1",
                                "type": "organisation"
                              }
                            },
                            "tasks": {
                              "data": []
                            },
                            "measurements": {
                              "data": []
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/samples/1"
                          }
                        },
                        {
                          "id": "3",
                          "type": "sample",
                          "attributes": {
                            "name": "Thorium",
                            "identifier": "8efdf7f8-0ef0-4cfc-b5f3-c0673ca64c6e",
                            "custom_attributes": [],
                            "deleted_at": null,
                            "updated_at": "2020-02-24T15:07:40.120Z",
                            "created_at": "2020-02-24T15:07:40.120Z",
                            "owner_id": 4
                          },
                          "relationships": {
                            "organisation": {
                              "data": {
                                "id": "1",
                                "type": "organisation"
                              }
                            },
                            "tasks": {
                              "data": []
                            },
                            "measurements": {
                              "data": []
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/samples/3"
                          }
                        }
                      ]
                    }
                  },
                  "List of found Samples": {
                    "summary": "List of found Samples",
                    "value": {
                      "data": [
                        {
                          "id": "4",
                          "type": "sample",
                          "attributes": {
                            "name": "Cobalt",
                            "identifier": "c2188f68-0ba7-43be-82e4-33ce81d15791",
                            "custom_attributes": [],
                            "deleted_at": null,
                            "updated_at": "2020-02-24T15:07:40.525Z",
                            "created_at": "2020-02-24T15:07:40.525Z",
                            "owner_id": 5
                          },
                          "relationships": {
                            "organisation": {
                              "data": {
                                "id": "2",
                                "type": "organisation"
                              }
                            },
                            "tasks": {
                              "data": []
                            },
                            "measurements": {
                              "data": []
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/samples/4"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "samples"
        ]
      },
      "post": {
        "description": "Create a Sample.",
        "operationId": "createSample",
        "summary": "Create Sample",
        "security": [
          {
            "oauth2": [
              "read",
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Sample"
                },
                "examples": {
                  "Sample": {
                    "summary": "Sample",
                    "value": {
                      "data": {
                        "id": "29",
                        "type": "sample",
                        "attributes": {
                          "name": null,
                          "identifier": "Test",
                          "custom_attributes": [],
                          "deleted_at": null,
                          "updated_at": "2020-02-24T15:07:52.702Z",
                          "created_at": "2020-02-24T15:07:52.702Z",
                          "owner_id": 82
                        },
                        "relationships": {
                          "organisation": {
                            "data": {
                              "id": "10",
                              "type": "organisation"
                            }
                          },
                          "tasks": {
                            "data": []
                          },
                          "measurements": {
                            "data": []
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/samples/29"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Bad Request Error": {
                    "summary": "Bad Request Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Missing `data` member at document's top level.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Missed Required Attributes Error": {
                    "summary": "Missed Required Attributes Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Missed required attribute(s) for sample: `identifier`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "ID parameter given": {
                    "summary": "ID parameter given",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "ID parameter is not allowed for `create` requests.",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Conflict Missing Type Error": {
                    "summary": "Conflict Missing Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "Missing `type` member at document's `data` level.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Conflict Wrong Type Error": {
                    "summary": "Conflict Wrong Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "The given `type` member does not match the resource.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "samples"
        ],
        "requestBody": {
          "description": "Create a Sample.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSample"
              },
              "example": {
                "data": {
                  "type": "sample",
                  "attributes": {
                    "identifier": "Test"
                  },
                  "relationships": {
                    "collection": {
                      "data": {
                        "type": "collections",
                        "id": "135"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/samples/{id}": {
      "get": {
        "description": "Get a single Sample by its id.",
        "operationId": "getSample",
        "summary": "Get Sample",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "An id of Sample to get."
          },
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "List of Sample attributes to be included in response."
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "List of related resource to include. Allowed values are: `measurements`, `tasks`"
          },
          {
            "name": "deleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Find in archive."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Sample"
                },
                "examples": {
                  "Sample": {
                    "summary": "Sample",
                    "value": {
                      "data": {
                        "id": "9",
                        "type": "sample",
                        "attributes": {
                          "name": "Fluorine",
                          "identifier": "73ddac51-416f-4ed8-a80d-5888a0762277",
                          "custom_attributes": [],
                          "deleted_at": null,
                          "updated_at": "2020-02-24T15:07:41.508Z",
                          "created_at": "2020-02-24T15:07:41.508Z",
                          "owner_id": 12
                        },
                        "relationships": {
                          "organisation": {
                            "data": {
                              "id": "4",
                              "type": "organisation"
                            }
                          },
                          "tasks": {
                            "data": [
                              {
                                "id": "1",
                                "type": "task"
                              }
                            ]
                          },
                          "measurements": {
                            "data": []
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/samples/9"
                        }
                      }
                    }
                  },
                  "with related Measurement": {
                    "summary": "with related Measurement",
                    "value": {
                      "data": {
                        "id": "12",
                        "type": "sample",
                        "attributes": {
                          "name": "Promethium",
                          "identifier": "6f252d23-cae7-43fd-bafe-541a87d92ffd",
                          "custom_attributes": [],
                          "deleted_at": null,
                          "updated_at": "2020-02-24T15:07:43.065Z",
                          "created_at": "2020-02-24T15:07:43.065Z",
                          "owner_id": 22
                        },
                        "relationships": {
                          "organisation": {
                            "data": {
                              "id": "5",
                              "type": "organisation"
                            }
                          },
                          "tasks": {
                            "data": [
                              {
                                "id": "2",
                                "type": "task"
                              }
                            ]
                          },
                          "measurements": {
                            "data": [
                              {
                                "id": "2",
                                "type": "measurement"
                              },
                              {
                                "id": "1",
                                "type": "measurement"
                              }
                            ]
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/samples/12"
                        }
                      },
                      "included": [
                        {
                          "id": "2",
                          "type": "measurement",
                          "attributes": {
                            "created_at": "2020-02-24T15:07:45.962Z",
                            "description": "Heavy Duty Leather Keyboard",
                            "end_at": "2020-02-24T15:02:45.742Z",
                            "protocol_entries": [],
                            "scope_params": {
                              "type": "range",
                              "params": [
                                "2020-02-24T14:07:45.742Z",
                                "2020-02-24T15:02:45.742Z"
                              ]
                            },
                            "custom_attributes": [],
                            "start_at": "2020-02-24T14:07:45.742Z",
                            "status": "finished",
                            "updated_at": "2020-02-24T15:07:45.962Z",
                            "uuid": "34ca49ff-b9af-4037-85f9-f2615a463714",
                            "container_id": 2,
                            "container_type": "Task",
                            "deleted_at": null,
                            "scope": {
                              "id": 2,
                              "start_at": "2020-02-24T14:07:45.742Z",
                              "end_at": "2020-02-24T15:02:45.742Z",
                              "channel_ids": [
                                64,
                                76
                              ]
                            },
                            "context_type": "Job",
                            "context_id": 2,
                            "context_name": "secured line_370"
                          },
                          "relationships": {
                            "owner": {
                              "data": {
                                "id": "22",
                                "type": "user"
                              }
                            },
                            "view": {
                              "data": {
                                "id": "10",
                                "type": "view"
                              }
                            },
                            "channels": {
                              "data": [
                                {
                                  "id": "64",
                                  "type": "channel"
                                },
                                {
                                  "id": "76",
                                  "type": "channel"
                                }
                              ]
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/measurements/2"
                          }
                        },
                        {
                          "id": "1",
                          "type": "measurement",
                          "attributes": {
                            "created_at": "2020-02-24T15:07:44.982Z",
                            "description": "Practical Bronze Lamp",
                            "end_at": "2020-02-24T15:02:44.741Z",
                            "protocol_entries": [],
                            "scope_params": {
                              "type": "range",
                              "params": [
                                "2020-02-24T14:07:44.741Z",
                                "2020-02-24T15:02:44.741Z"
                              ]
                            },
                            "custom_attributes": [],
                            "start_at": "2020-02-24T14:07:44.741Z",
                            "status": "finished",
                            "updated_at": "2020-02-24T15:07:44.982Z",
                            "uuid": "b086d570-472a-41fb-a6fe-60c4cc69929e",
                            "container_id": 2,
                            "container_type": "Task",
                            "deleted_at": null,
                            "scope": {
                              "id": 1,
                              "start_at": "2020-02-24T14:07:44.741Z",
                              "end_at": "2020-02-24T15:02:44.741Z",
                              "channel_ids": [
                                40,
                                52
                              ]
                            },
                            "context_type": "Job",
                            "context_id": 2,
                            "context_name": "secured line_370"
                          },
                          "relationships": {
                            "owner": {
                              "data": {
                                "id": "22",
                                "type": "user"
                              }
                            },
                            "view": {
                              "data": {
                                "id": "7",
                                "type": "view"
                              }
                            },
                            "channels": {
                              "data": [
                                {
                                  "id": "40",
                                  "type": "channel"
                                },
                                {
                                  "id": "52",
                                  "type": "channel"
                                }
                              ]
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/measurements/1"
                          }
                        }
                      ]
                    }
                  },
                  "with related Tasks": {
                    "summary": "with related Tasks",
                    "value": {
                      "data": {
                        "id": "15",
                        "type": "sample",
                        "attributes": {
                          "name": "Nihonium",
                          "identifier": "0d45edf5-f576-4000-9dc4-9fc8fd9c286c",
                          "custom_attributes": [],
                          "deleted_at": null,
                          "updated_at": "2020-02-24T15:07:47.415Z",
                          "created_at": "2020-02-24T15:07:47.415Z",
                          "owner_id": 42
                        },
                        "relationships": {
                          "organisation": {
                            "data": {
                              "id": "6",
                              "type": "organisation"
                            }
                          },
                          "tasks": {
                            "data": [
                              {
                                "id": "3",
                                "type": "task"
                              }
                            ]
                          },
                          "measurements": {
                            "data": []
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/samples/15"
                        }
                      },
                      "included": [
                        {
                          "id": "3",
                          "type": "task",
                          "attributes": {
                            "state": "pending",
                            "error": null,
                            "parameters": [
                              {
                                "name": "device",
                                "type": "relation",
                                "value": {
                                  "id": 12,
                                  "type": "Device"
                                }
                              },
                              {
                                "name": "sample",
                                "type": "relation",
                                "value": {
                                  "id": 15,
                                  "type": "Sample"
                                }
                              },
                              {
                                "name": "target",
                                "type": "physicalQuantity",
                                "value": {
                                  "unit": "g",
                                  "number": 10
                                }
                              },
                              {
                                "name": "tolerance",
                                "type": "physicalQuantity",
                                "value": {
                                  "unit": "g",
                                  "number": 10
                                }
                              }
                            ],
                            "name": "",
                            "locked_at": null,
                            "index_number": 0,
                            "custom_attributes": [],
                            "type": "weighing",
                            "allowed_events": [
                              "queue",
                              "start",
                              "cancel"
                            ],
                            "warnings": []
                          },
                          "relationships": {
                            "job": {
                              "data": {
                                "id": "3",
                                "type": "job"
                              }
                            },
                            "assignee": {
                              "data": {
                                "id": "42",
                                "type": "user"
                              }
                            },
                            "measurements": {
                              "data": []
                            },
                            "result": {
                              "data": null
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/tasks/3"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Wrong Include Error": {
                    "summary": "Wrong Include Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong `include` value(s) given: `spaceships`, `aliens`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "samples"
        ]
      },
      "patch": {
        "description": "Update a Sample.",
        "operationId": "updateSample",
        "summary": "Update Sample",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Id of a Sample to update."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read",
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Sample"
                },
                "examples": {
                  "Sample": {
                    "summary": "Sample",
                    "value": {
                      "data": {
                        "id": "42",
                        "type": "sample",
                        "attributes": {
                          "name": "Test",
                          "identifier": "e5149e13-e428-410a-8909-54ee56f9df64",
                          "custom_attributes": [],
                          "deleted_at": null,
                          "updated_at": "2020-02-24T15:07:55.561Z",
                          "created_at": "2020-02-24T15:07:55.263Z",
                          "owner_id": 103
                        },
                        "relationships": {
                          "organisation": {
                            "data": {
                              "id": "17",
                              "type": "organisation"
                            }
                          },
                          "tasks": {
                            "data": []
                          },
                          "measurements": {
                            "data": []
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/samples/42"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Bad Request Error": {
                    "summary": "Bad Request Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Missing `data` member at document's top level.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Conflict Missing Type Error": {
                    "summary": "Conflict Missing Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "Missing `type` member at document's `data` level.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Conflict Wrong Type Error": {
                    "summary": "Conflict Wrong Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "The given `type` member does not match the resource.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "samples"
        ],
        "requestBody": {
          "description": "Update a Sample.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSample"
              },
              "example": {
                "data": {
                  "type": "sample",
                  "attributes": {
                    "name": "Test"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Delete a Samples.",
        "operationId": "deleteSample",
        "summary": "Delete Sample",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Id of a Sample to delete."
          },
          {
            "name": "deleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Real destroy."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read",
              "delete"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Success"
                },
                "examples": {
                  "Ok": {
                    "summary": "Ok",
                    "value": {
                      "meta": {
                        "result": "Success"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthorized Error": {
                    "summary": "Unauthorized Error",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "You do not have the required permissions to access this resource. Note: OAuth 2 scopes do not overrule application level permissions.",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "samples"
        ]
      }
    },
    "/samples/restore": {
      "patch": {
        "description": "Restore a Sample.",
        "operationId": "restoreSample",
        "summary": "Restore Sample",
        "security": [
          {
            "oauth2": [
              "read",
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Samples"
                },
                "examples": {
                  "Ok": {
                    "summary": "Ok",
                    "value": {
                      "data": [
                        {
                          "id": "65",
                          "type": "sample",
                          "attributes": {
                            "name": "Tellurium",
                            "identifier": "1d97dc86-34be-4483-acdf-4d8bf8f97d42",
                            "custom_attributes": [],
                            "deleted_at": null,
                            "updated_at": "2020-02-24T15:08:00.030Z",
                            "created_at": "2020-02-24T15:07:59.896Z",
                            "owner_id": 135
                          },
                          "relationships": {
                            "organisation": {
                              "data": {
                                "id": "27",
                                "type": "organisation"
                              }
                            },
                            "tasks": {
                              "data": []
                            },
                            "measurements": {
                              "data": []
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/samples/65"
                          }
                        }
                      ]
                    }
                  },
                  "Ignore Unauthorized Error": {
                    "summary": "Ignore Unauthorized Error",
                    "value": {
                      "data": []
                    }
                  },
                  "Ignore Record Not Found Error": {
                    "summary": "Ignore Record Not Found Error",
                    "value": {
                      "data": []
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "samples"
        ]
      }
    },
    "/tasks": {
      "get": {
        "description": "Get a list of existing Tasks.",
        "operationId": "getTasks",
        "summary": "Get Tasks",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "List of Task attributes to be included in response."
          },
          {
            "name": "deleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Include soft deleted tasks."
          },
          {
            "name": "filter",
            "description": "Resources and/or attributes to filter by.",
            "in": "query",
            "schema": {
              "type": "object",
              "properties": {
                "tasks": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "name": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "custom_attributes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "job": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "identifier": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "custom_attributes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "assignee": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "username": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "email": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "measurements": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "created_at": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "updated_at": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "container_id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "container_type": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "owner_id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "custom_attributes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "uuid": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "deleted_at": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "result": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "created_at": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "updated_at": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "container_id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "container_type": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "owner_id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "custom_attributes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "uuid": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "deleted_at": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "List of related resource to include. Allowed values are: `job`, `assignee`, `measurements`, `result`."
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "Pagination"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "Sorting"
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Tasks"
                },
                "examples": {
                  "List of Tasks": {
                    "summary": "List of Tasks",
                    "value": {
                      "data": [
                        {
                          "id": "74",
                          "type": "task",
                          "attributes": {
                            "state": "pending",
                            "error": null,
                            "parameters": [
                              {
                                "name": "device",
                                "type": "relation",
                                "value": {
                                  "id": 516,
                                  "type": "Device"
                                }
                              },
                              {
                                "name": "sample",
                                "type": "relation",
                                "value": {
                                  "id": 301,
                                  "type": "Sample"
                                }
                              },
                              {
                                "name": "target",
                                "type": "physicalQuantity",
                                "value": {
                                  "unit": "g",
                                  "number": 10
                                }
                              },
                              {
                                "name": "tolerance",
                                "type": "physicalQuantity",
                                "value": {
                                  "unit": "g",
                                  "number": 10
                                }
                              }
                            ],
                            "name": "",
                            "locked_at": null,
                            "index_number": 0,
                            "custom_attributes": [],
                            "type": "weighing",
                            "allowed_events": [
                              "queue",
                              "start",
                              "cancel"
                            ],
                            "warnings": []
                          },
                          "relationships": {
                            "job": {
                              "data": {
                                "id": "132",
                                "type": "job"
                              }
                            },
                            "assignee": {
                              "data": {
                                "id": "2484",
                                "type": "user"
                              }
                            },
                            "measurements": {
                              "data": []
                            },
                            "result": {
                              "data": null
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/tasks/74"
                          }
                        },
                        {
                          "id": "75",
                          "type": "task",
                          "attributes": {
                            "state": "pending",
                            "error": null,
                            "parameters": [
                              {
                                "name": "device",
                                "type": "relation",
                                "value": {
                                  "id": 518,
                                  "type": "Device"
                                }
                              },
                              {
                                "name": "sample",
                                "type": "relation",
                                "value": {
                                  "id": 302,
                                  "type": "Sample"
                                }
                              },
                              {
                                "name": "target",
                                "type": "physicalQuantity",
                                "value": {
                                  "unit": "g",
                                  "number": 10
                                }
                              },
                              {
                                "name": "tolerance",
                                "type": "physicalQuantity",
                                "value": {
                                  "unit": "g",
                                  "number": 10
                                }
                              }
                            ],
                            "name": "",
                            "locked_at": null,
                            "index_number": 1,
                            "custom_attributes": [],
                            "type": "weighing",
                            "allowed_events": [
                              "queue",
                              "start",
                              "cancel"
                            ],
                            "warnings": []
                          },
                          "relationships": {
                            "job": {
                              "data": {
                                "id": "132",
                                "type": "job"
                              }
                            },
                            "assignee": {
                              "data": {
                                "id": "2490",
                                "type": "user"
                              }
                            },
                            "measurements": {
                              "data": []
                            },
                            "result": {
                              "data": null
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/tasks/75"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "tasks"
        ]
      },
      "post": {
        "description": "Create a Task.",
        "operationId": "createTask",
        "summary": "Create Task",
        "security": [
          {
            "oauth2": [
              "read",
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                },
                "examples": {
                  "Task": {
                    "summary": "Task",
                    "value": {
                      "data": {
                        "id": "104",
                        "type": "task",
                        "attributes": {
                          "state": "pending",
                          "error": null,
                          "parameters": [],
                          "name": "Test task",
                          "locked_at": null,
                          "index_number": 2,
                          "custom_attributes": [],
                          "type": "weighing",
                          "allowed_events": [
                            "cancel"
                          ],
                          "warnings": [
                            "Parameters Devices: Not all required devices have been allocated."
                          ]
                        },
                        "relationships": {
                          "job": {
                            "data": {
                              "id": "150",
                              "type": "job"
                            }
                          },
                          "assignee": {
                            "data": {
                              "id": "2649",
                              "type": "user"
                            }
                          },
                          "measurements": {
                            "data": []
                          },
                          "result": {
                            "data": null
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/tasks/104"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Bad Request Error": {
                    "summary": "Bad Request Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Missing `data` member at document's top level.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "ID parameter given": {
                    "summary": "ID parameter given",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "ID parameter is not allowed for `create` requests.",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Conflict Missing Type Error": {
                    "summary": "Conflict Missing Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "Missing `type` member at document's `data` level.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Conflict Wrong Type Error": {
                    "summary": "Conflict Wrong Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "The given `type` member does not match the resource.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "tasks"
        ],
        "requestBody": {
          "description": "Create a Task.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTask"
              },
              "example": {
                "data": {
                  "type": "task",
                  "attributes": {
                    "name": "Test task",
                    "type": "weighing"
                  },
                  "relationships": {
                    "assignee": {
                      "data": {
                        "type": "users",
                        "id": "2649"
                      }
                    },
                    "job": {
                      "data": {
                        "type": "jobs",
                        "id": "150"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tasks/{id}": {
      "get": {
        "description": "Get a single Task by its id.",
        "operationId": "getTask",
        "summary": "Get Task",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "An id of Task to get."
          },
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "List of Task attributes to be included in response."
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "List of related resources to include. Allowed values are: `job`, `assignee`, `measurements`, `result`."
          },
          {
            "name": "deleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Find in archive."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                },
                "examples": {
                  "Task": {
                    "summary": "Task",
                    "value": {
                      "data": {
                        "id": "80",
                        "type": "task",
                        "attributes": {
                          "state": "pending",
                          "error": null,
                          "parameters": [
                            {
                              "name": "device",
                              "type": "relation",
                              "value": {
                                "id": 528,
                                "type": "Device"
                              }
                            },
                            {
                              "name": "sample",
                              "type": "relation",
                              "value": {
                                "id": 307,
                                "type": "Sample"
                              }
                            },
                            {
                              "name": "target",
                              "type": "physicalQuantity",
                              "value": {
                                "unit": "g",
                                "number": 10
                              }
                            },
                            {
                              "name": "tolerance",
                              "type": "physicalQuantity",
                              "value": {
                                "unit": "g",
                                "number": 10
                              }
                            }
                          ],
                          "name": "",
                          "locked_at": null,
                          "index_number": 0,
                          "custom_attributes": [],
                          "type": "weighing",
                          "allowed_events": [
                            "queue",
                            "start",
                            "cancel"
                          ],
                          "warnings": []
                        },
                        "relationships": {
                          "job": {
                            "data": {
                              "id": "136",
                              "type": "job"
                            }
                          },
                          "assignee": {
                            "data": {
                              "id": "2520",
                              "type": "user"
                            }
                          },
                          "measurements": {
                            "data": []
                          },
                          "result": {
                            "data": null
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/tasks/80"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Wrong Include Error": {
                    "summary": "Wrong Include Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong `include` value(s) given: `spaceships`, `aliens`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "tasks"
        ]
      },
      "patch": {
        "description": "Update a Task.",
        "operationId": "updateTask",
        "summary": "Update Task",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Id of a Task to update."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read",
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                },
                "examples": {
                  "Task": {
                    "summary": "Task",
                    "value": {
                      "data": {
                        "id": "126",
                        "type": "task",
                        "attributes": {
                          "state": "pending",
                          "error": null,
                          "parameters": [
                            {
                              "name": "device",
                              "type": "relation",
                              "value": {
                                "id": 620,
                                "type": "Device"
                              }
                            },
                            {
                              "name": "sample",
                              "type": "relation",
                              "value": {
                                "id": 352,
                                "type": "Sample"
                              }
                            },
                            {
                              "name": "target",
                              "type": "physicalQuantity",
                              "value": {
                                "unit": "g",
                                "number": 10
                              }
                            },
                            {
                              "name": "tolerance",
                              "type": "physicalQuantity",
                              "value": {
                                "unit": "g",
                                "number": 10
                              }
                            }
                          ],
                          "name": "New Task Name",
                          "locked_at": null,
                          "index_number": 0,
                          "custom_attributes": [],
                          "type": "weighing",
                          "allowed_events": [
                            "queue",
                            "start",
                            "cancel"
                          ],
                          "warnings": []
                        },
                        "relationships": {
                          "job": {
                            "data": {
                              "id": "166",
                              "type": "job"
                            }
                          },
                          "assignee": {
                            "data": {
                              "id": "2793",
                              "type": "user"
                            }
                          },
                          "measurements": {
                            "data": []
                          },
                          "result": {
                            "data": null
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/tasks/126"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Bad Request Error": {
                    "summary": "Bad Request Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Missing `data` member at document's top level.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Conflict Missing Type Error": {
                    "summary": "Conflict Missing Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "Missing `type` member at document's `data` level.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Conflict Wrong Type Error": {
                    "summary": "Conflict Wrong Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "The given `type` member does not match the resource.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "tasks"
        ],
        "requestBody": {
          "description": "Update a Task.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTask"
              },
              "example": {
                "data": {
                  "type": "task",
                  "attributes": {
                    "name": "New Task Name"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Delete a Task.",
        "operationId": "deleteTask",
        "summary": "Delete Task",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Id of a Task to delete."
          },
          {
            "name": "deleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Real destroy."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read",
              "delete"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Success"
                },
                "examples": {
                  "Ok": {
                    "summary": "Ok",
                    "value": {
                      "meta": {
                        "result": "Success"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthorized Error": {
                    "summary": "Unauthorized Error",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "You do not have the required permissions to access this resource. Note: OAuth 2 scopes do not overrule application level permissions.",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "tasks"
        ]
      }
    },
    "/tasks/{id}/trigger_action": {
      "put": {
        "description": "Triggers an action for a task.",
        "operationId": "trigger_actionTask",
        "summary": "Trigger Action Task",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Id of a Task."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read",
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                },
                "examples": {
                  "Task": {
                    "summary": "Task",
                    "value": {
                      "data": {
                        "id": "156",
                        "type": "task",
                        "attributes": {
                          "state": "cancelled",
                          "error": null,
                          "parameters": [
                            {
                              "name": "device",
                              "type": "relation",
                              "value": {
                                "id": 680,
                                "type": "Device"
                              }
                            },
                            {
                              "name": "sample",
                              "type": "relation",
                              "value": {
                                "id": 382,
                                "type": "Sample"
                              }
                            },
                            {
                              "name": "target",
                              "type": "physicalQuantity",
                              "value": {
                                "unit": "g",
                                "number": 10
                              }
                            },
                            {
                              "name": "tolerance",
                              "type": "physicalQuantity",
                              "value": {
                                "unit": "g",
                                "number": 10
                              }
                            }
                          ],
                          "name": "",
                          "locked_at": null,
                          "index_number": 0,
                          "custom_attributes": [],
                          "type": "weighing",
                          "allowed_events": [
                            "reinstate"
                          ],
                          "warnings": []
                        },
                        "relationships": {
                          "job": {
                            "data": {
                              "id": "186",
                              "type": "job"
                            }
                          },
                          "assignee": {
                            "data": {
                              "id": "2973",
                              "type": "user"
                            }
                          },
                          "measurements": {
                            "data": []
                          },
                          "result": {
                            "data": null
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/tasks/156"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Bad Request Error: no action given": {
                    "summary": "Bad Request Error: no action given",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "No `action` parameter given.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Bad Request Error: invalid action given": {
                    "summary": "Bad Request Error: invalid action given",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Invalid `action` parameter given. Expecting one of: queue, start, cancel.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Bad Request Error: private action given": {
                    "summary": "Bad Request Error: private action given",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Private `action`: `finish` called.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "tasks"
        ]
      }
    },
    "/tasks/restore": {
      "patch": {
        "description": "Restore a Task.",
        "operationId": "restoreTask",
        "summary": "Restore Task",
        "security": [
          {
            "oauth2": [
              "read",
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Tasks"
                },
                "examples": {
                  "Ok": {
                    "summary": "Ok",
                    "value": {
                      "data": [
                        {
                          "id": "177",
                          "type": "task",
                          "attributes": {
                            "state": "pending",
                            "error": {
                              "silly": "error"
                            },
                            "parameters": [],
                            "name": "",
                            "locked_at": null,
                            "index_number": 2,
                            "custom_attributes": [],
                            "type": "simple",
                            "allowed_events": [
                              "finish",
                              "cancel"
                            ],
                            "warnings": []
                          },
                          "relationships": {
                            "job": {
                              "data": {
                                "id": "198",
                                "type": "job"
                              }
                            },
                            "assignee": {
                              "data": {
                                "id": "3081",
                                "type": "user"
                              }
                            },
                            "measurements": {
                              "data": []
                            },
                            "result": {
                              "data": null
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/tasks/177"
                          }
                        }
                      ]
                    }
                  },
                  "Ignore Unauthorized Error": {
                    "summary": "Ignore Unauthorized Error",
                    "value": {
                      "data": []
                    }
                  },
                  "Ignore Record Not Found Error": {
                    "summary": "Ignore Record Not Found Error",
                    "value": {
                      "data": []
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "tasks"
        ]
      }
    },
    "/users": {
      "get": {
        "description": "Get a list of existing Users.",
        "operationId": "getUsers",
        "summary": "Get Users",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "List of User attributes to be included in response."
          },
          {
            "name": "filter",
            "description": "Resources and/or attributes to filter by.",
            "in": "query",
            "schema": {
              "type": "object",
              "properties": {
                "users": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "username": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "email": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "Pagination"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "Sorting"
          },
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "Searching"
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Users"
                },
                "examples": {
                  "List of Users": {
                    "summary": "List of Users",
                    "value": {
                      "data": [
                        {
                          "id": "1",
                          "type": "user",
                          "attributes": {
                            "username": "Marks1",
                            "email": "phyli_macgyver@davis.name",
                            "deleted_at": null,
                            "created_at": "2020-05-13T13:07:23.245Z",
                            "full_name": "Arturio Connelly",
                            "slugs": [
                              "arturio-connelly",
                              "marks1"
                            ],
                            "position": null,
                            "email_link": "<a href=\"mailto:phyli_macgyver@davis.name\">phyli_macgyver@davis.name</a>",
                            "mobile_phone": null,
                            "office_phone": null,
                            "personal_collection_id": 2,
                            "initials": "AC",
                            "first_name": "Arturio",
                            "last_name": "Connelly",
                            "role": "member",
                            "organisation_membership_id": 1
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/users/1"
                          }
                        },
                        {
                          "id": "2",
                          "type": "user",
                          "attributes": {
                            "username": "Dare2",
                            "email": "myles_fahey@swaniawskischmidt.info",
                            "deleted_at": null,
                            "created_at": "2020-05-13T13:07:23.504Z",
                            "full_name": "Dare2",
                            "slugs": [
                              "dare2"
                            ],
                            "position": null,
                            "email_link": "<a href=\"mailto:myles_fahey@swaniawskischmidt.info\">myles_fahey@swaniawskischmidt.info</a>",
                            "mobile_phone": null,
                            "office_phone": null,
                            "personal_collection_id": 3,
                            "initials": null,
                            "first_name": null,
                            "last_name": null,
                            "role": "member",
                            "organisation_membership_id": 2
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/users/2"
                          }
                        }
                      ]
                    }
                  },
                  "List of Users by id": {
                    "summary": "List of Users by id",
                    "value": {
                      "data": [
                        {
                          "id": "4",
                          "type": "user",
                          "attributes": {
                            "username": "Pouros4",
                            "email": "korey@keeblerstoltenberg.biz",
                            "deleted_at": null,
                            "created_at": "2020-05-13T13:07:24.662Z",
                            "full_name": "Pouros4",
                            "slugs": [
                              "pouros4"
                            ],
                            "position": null,
                            "email_link": "<a href=\"mailto:korey@keeblerstoltenberg.biz\">korey@keeblerstoltenberg.biz</a>",
                            "mobile_phone": null,
                            "office_phone": null,
                            "personal_collection_id": 6,
                            "initials": null,
                            "first_name": null,
                            "last_name": null,
                            "role": "member",
                            "organisation_membership_id": 4
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/users/4"
                          }
                        }
                      ]
                    }
                  },
                  "List of Users by search queries": {
                    "summary": "List of Users by search queries",
                    "value": {
                      "data": [
                        {
                          "id": "5",
                          "type": "user",
                          "attributes": {
                            "username": "Ledner5",
                            "email": "tod.stroman@kemmer.biz",
                            "deleted_at": null,
                            "created_at": "2020-05-13T13:07:25.682Z",
                            "full_name": "Arturio Borer",
                            "slugs": [
                              "arturio-borer",
                              "ledner5"
                            ],
                            "position": null,
                            "email_link": "<a href=\"mailto:tod.stroman@kemmer.biz\">tod.stroman@kemmer.biz</a>",
                            "mobile_phone": null,
                            "office_phone": null,
                            "personal_collection_id": 8,
                            "initials": "AB",
                            "first_name": "Arturio",
                            "last_name": "Borer",
                            "role": "member",
                            "organisation_membership_id": 5
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/users/5"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "users"
        ]
      }
    },
    "/users/{id}": {
      "get": {
        "description": "Get a single User by its id.",
        "operationId": "getUser",
        "summary": "Get User",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "An id of User to get."
          },
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "List of User attributes to be included in response."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "examples": {
                  "User": {
                    "summary": "User",
                    "value": {
                      "data": {
                        "id": "8",
                        "type": "user",
                        "attributes": {
                          "username": "Heathcote8",
                          "email": "emmanuel@parisian.name",
                          "deleted_at": null,
                          "created_at": "2020-05-13T13:07:27.915Z",
                          "full_name": "Arturio Hauck",
                          "slugs": [
                            "arturio-hauck",
                            "heathcote8"
                          ],
                          "position": null,
                          "email_link": "<a href=\"mailto:emmanuel@parisian.name\">emmanuel@parisian.name</a>",
                          "mobile_phone": null,
                          "office_phone": null,
                          "personal_collection_id": 13,
                          "initials": "AH",
                          "first_name": "Arturio",
                          "last_name": "Hauck",
                          "role": "member",
                          "organisation_membership_id": 8
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/users/8"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "patch": {
        "description": "Update a User.",
        "operationId": "updateUser",
        "summary": "Update User",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Id of a User to update."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read",
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "examples": {
                  "User": {
                    "summary": "User",
                    "value": {
                      "data": {
                        "id": "11",
                        "type": "user",
                        "attributes": {
                          "username": "NewName",
                          "email": "damian@oconner.name",
                          "deleted_at": null,
                          "created_at": "2020-05-13T13:07:31.040Z",
                          "full_name": "Arturio Nitzsche",
                          "slugs": [
                            "arturio-nitzsche",
                            "bednar11"
                          ],
                          "position": null,
                          "email_link": "<a href=\"mailto:damian@oconner.name\">damian@oconner.name</a>",
                          "mobile_phone": null,
                          "office_phone": null,
                          "personal_collection_id": 19,
                          "initials": "AN",
                          "first_name": "Arturio",
                          "last_name": "Nitzsche",
                          "role": "member",
                          "organisation_membership_id": 11
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/users/11"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Bad Request Error": {
                    "summary": "Bad Request Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Missing `data` member at document's top level.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Conflict Missing Type Error": {
                    "summary": "Conflict Missing Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "Missing `type` member at document's `data` level.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Conflict Wrong Type Error": {
                    "summary": "Conflict Wrong Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "The given `type` member does not match the resource.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "users"
        ],
        "requestBody": {
          "description": "Update a User.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUser"
              },
              "example": {
                "data": {
                  "type": "user",
                  "attributes": {
                    "username": "NewName"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/views/{id}": {
      "get": {
        "description": "Get a single View by its id.",
        "operationId": "getView",
        "summary": "Get View",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "An id of View to get."
          },
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "List of View attributes to be included in response."
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "List of related resource to include. Allowed values are: `measurements`, `viewable`."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/View"
                },
                "examples": {
                  "View": {
                    "summary": "View",
                    "value": {
                      "data": {
                        "id": "980",
                        "type": "view",
                        "attributes": {
                          "layout": {
                            "elements": [
                              {
                                "layouts": {
                                  "lg": {
                                    "h": 3,
                                    "w": 6,
                                    "x": 0,
                                    "y": 0,
                                    "minH": 3,
                                    "minW": 3
                                  },
                                  "md": {
                                    "h": 3,
                                    "w": 5,
                                    "x": 0,
                                    "y": 0,
                                    "minH": 3,
                                    "minW": 3
                                  },
                                  "sm": {
                                    "h": 3,
                                    "w": 4,
                                    "x": 0,
                                    "y": 0,
                                    "minH": 3,
                                    "minW": 3
                                  },
                                  "xs": {
                                    "h": 3,
                                    "w": 6,
                                    "x": 0,
                                    "y": 0,
                                    "minH": 3,
                                    "minW": 3
                                  },
                                  "xxs": {
                                    "h": 3,
                                    "w": 4,
                                    "x": 0,
                                    "y": 0,
                                    "minH": 3,
                                    "minW": 3
                                  }
                                },
                                "settings": {
                                  "type": "Gauge",
                                  "disabled": {
                                    "if": "error|orphaned|unknown|offline|off|loading",
                                    "channel": {
                                      "name": "status"
                                    }
                                  },
                                  "setPoint": {
                                    "setPointType": "channel",
                                    "showSetPoint": true,
                                    "setPointSource": 5994
                                  },
                                  "defaultScope": {
                                    "type": "range",
                                    "params": [
                                      "2020-02-14T11:43:17.395Z",
                                      "2020-02-14T12:38:17.395Z"
                                    ]
                                  },
                                  "inputChannels": [
                                    5993
                                  ]
                                },
                                "identifier": "1d117686-689b-4705-8230-e63e8d14e4d4"
                              },
                              {
                                "layouts": {
                                  "lg": {
                                    "h": 1,
                                    "w": 6,
                                    "x": 0,
                                    "y": 3,
                                    "minH": 1,
                                    "minW": 3
                                  },
                                  "md": {
                                    "h": 1,
                                    "w": 5,
                                    "x": 0,
                                    "y": 3,
                                    "minH": 1,
                                    "minW": 3
                                  },
                                  "sm": {
                                    "h": 1,
                                    "w": 4,
                                    "x": 0,
                                    "y": 3,
                                    "minH": 1,
                                    "minW": 3
                                  },
                                  "xs": {
                                    "h": 1,
                                    "w": 6,
                                    "x": 0,
                                    "y": 3,
                                    "minH": 1,
                                    "minW": 3
                                  },
                                  "xxs": {
                                    "h": 1,
                                    "w": 4,
                                    "x": 0,
                                    "y": 3,
                                    "minH": 1,
                                    "minW": 3
                                  }
                                },
                                "settings": {
                                  "type": "NumberInput",
                                  "label": "set",
                                  "disabled": {
                                    "if": "error|orphaned|unknown|offline|off|loading",
                                    "channel": {
                                      "name": "status"
                                    }
                                  },
                                  "defaultScope": {
                                    "type": "range",
                                    "params": [
                                      "2020-02-14T11:43:17.395Z",
                                      "2020-02-14T12:38:17.395Z"
                                    ]
                                  },
                                  "inputChannels": [
                                    5994
                                  ]
                                },
                                "identifier": "9e0ec6b7-207f-4eb1-aada-ce019053d487"
                              },
                              {
                                "layouts": {
                                  "lg": {
                                    "h": 3,
                                    "w": 6,
                                    "x": 6,
                                    "y": 0,
                                    "minH": 3,
                                    "minW": 3
                                  },
                                  "md": {
                                    "h": 3,
                                    "w": 5,
                                    "x": 5,
                                    "y": 0,
                                    "minH": 3,
                                    "minW": 3
                                  },
                                  "sm": {
                                    "h": 3,
                                    "w": 4,
                                    "x": 4,
                                    "y": 0,
                                    "minH": 3,
                                    "minW": 3
                                  },
                                  "xs": {
                                    "h": 3,
                                    "w": 6,
                                    "x": 0,
                                    "y": 4,
                                    "minH": 3,
                                    "minW": 3
                                  },
                                  "xxs": {
                                    "h": 3,
                                    "w": 4,
                                    "x": 0,
                                    "y": 4,
                                    "minH": 3,
                                    "minW": 3
                                  }
                                },
                                "settings": {
                                  "type": "Gauge",
                                  "disabled": {
                                    "if": "error|orphaned|unknown|offline|off|loading",
                                    "channel": {
                                      "name": "status"
                                    }
                                  },
                                  "setPoint": {
                                    "setPointType": "channel",
                                    "showSetPoint": true,
                                    "setPointSource": 5996
                                  },
                                  "defaultScope": {
                                    "type": "range",
                                    "params": [
                                      "2020-02-14T11:43:17.395Z",
                                      "2020-02-14T12:38:17.395Z"
                                    ]
                                  },
                                  "inputChannels": [
                                    5995
                                  ]
                                },
                                "identifier": "97c29916-cc8d-4ab8-bca8-2b15d45b7f80"
                              },
                              {
                                "layouts": {
                                  "lg": {
                                    "h": 1,
                                    "w": 6,
                                    "x": 6,
                                    "y": 3,
                                    "minH": 1,
                                    "minW": 3
                                  },
                                  "md": {
                                    "h": 1,
                                    "w": 5,
                                    "x": 5,
                                    "y": 3,
                                    "minH": 1,
                                    "minW": 3
                                  },
                                  "sm": {
                                    "h": 1,
                                    "w": 4,
                                    "x": 4,
                                    "y": 3,
                                    "minH": 1,
                                    "minW": 3
                                  },
                                  "xs": {
                                    "h": 1,
                                    "w": 6,
                                    "x": 0,
                                    "y": 7,
                                    "minH": 1,
                                    "minW": 3
                                  },
                                  "xxs": {
                                    "h": 1,
                                    "w": 4,
                                    "x": 0,
                                    "y": 7,
                                    "minH": 1,
                                    "minW": 3
                                  }
                                },
                                "settings": {
                                  "type": "NumberInput",
                                  "label": "set",
                                  "disabled": {
                                    "if": "error|orphaned|unknown|offline|off|loading",
                                    "channel": {
                                      "name": "status"
                                    }
                                  },
                                  "defaultScope": {
                                    "type": "range",
                                    "params": [
                                      "2020-02-14T11:43:17.395Z",
                                      "2020-02-14T12:38:17.395Z"
                                    ]
                                  },
                                  "inputChannels": [
                                    5996
                                  ]
                                },
                                "identifier": "63ec03a8-0b3f-41d6-a9ae-6273f6b20f8b"
                              },
                              {
                                "layouts": {
                                  "lg": {
                                    "h": 1,
                                    "w": 12,
                                    "x": 0,
                                    "y": 5,
                                    "minH": 1,
                                    "minW": 2
                                  },
                                  "md": {
                                    "h": 1,
                                    "w": 10,
                                    "x": 0,
                                    "y": 5,
                                    "minH": 1,
                                    "minW": 2
                                  },
                                  "sm": {
                                    "h": 1,
                                    "w": 8,
                                    "x": 0,
                                    "y": 5,
                                    "minH": 1,
                                    "minW": 2
                                  },
                                  "xs": {
                                    "h": 1,
                                    "w": 6,
                                    "x": 0,
                                    "y": 10,
                                    "minH": 1,
                                    "minW": 2
                                  },
                                  "xxs": {
                                    "h": 1,
                                    "w": 4,
                                    "x": 0,
                                    "y": 8,
                                    "minH": 1,
                                    "minW": 2
                                  }
                                },
                                "settings": {
                                  "type": "Switch",
                                  "disabled": {
                                    "if": "error|orphaned|unknown|offline|off|loading",
                                    "channel": {
                                      "name": "status"
                                    }
                                  },
                                  "defaultScope": {
                                    "type": "range",
                                    "params": [
                                      "2020-02-14T11:43:17.395Z",
                                      "2020-02-14T12:38:17.395Z"
                                    ]
                                  },
                                  "inputChannels": [
                                    5997
                                  ]
                                },
                                "identifier": "b672e0aa-447a-4c6c-93e9-5bc716be5bed"
                              },
                              {
                                "layouts": {
                                  "lg": {
                                    "h": 1,
                                    "w": 6,
                                    "x": 6,
                                    "y": 4,
                                    "minH": 1,
                                    "minW": 2
                                  },
                                  "md": {
                                    "h": 1,
                                    "w": 5,
                                    "x": 5,
                                    "y": 4,
                                    "minH": 1,
                                    "minW": 2
                                  },
                                  "sm": {
                                    "h": 1,
                                    "w": 4,
                                    "x": 4,
                                    "y": 4,
                                    "minH": 1,
                                    "minW": 2
                                  },
                                  "xs": {
                                    "h": 1,
                                    "w": 6,
                                    "x": 0,
                                    "y": 9,
                                    "minH": 1,
                                    "minW": 2
                                  },
                                  "xxs": {
                                    "h": 1,
                                    "w": 4,
                                    "x": 0,
                                    "y": 9,
                                    "minH": 1,
                                    "minW": 2
                                  }
                                },
                                "settings": {
                                  "type": "Switch",
                                  "disabled": {
                                    "if": "error|orphaned|unknown|offline|off|loading",
                                    "channel": {
                                      "name": "status"
                                    }
                                  },
                                  "defaultScope": {
                                    "type": "range",
                                    "params": [
                                      "2020-02-14T11:43:17.395Z",
                                      "2020-02-14T12:38:17.395Z"
                                    ]
                                  },
                                  "inputChannels": [
                                    5999
                                  ]
                                },
                                "identifier": "4c4f693c-065d-4e18-b2e5-b5f97234ece8"
                              },
                              {
                                "layouts": {
                                  "lg": {
                                    "h": 1,
                                    "w": 6,
                                    "x": 0,
                                    "y": 4,
                                    "minH": 1,
                                    "minW": 2
                                  },
                                  "md": {
                                    "h": 1,
                                    "w": 5,
                                    "x": 0,
                                    "y": 4,
                                    "minH": 1,
                                    "minW": 2
                                  },
                                  "sm": {
                                    "h": 1,
                                    "w": 4,
                                    "x": 0,
                                    "y": 4,
                                    "minH": 1,
                                    "minW": 2
                                  },
                                  "xs": {
                                    "h": 1,
                                    "w": 6,
                                    "x": 0,
                                    "y": 8,
                                    "minH": 1,
                                    "minW": 2
                                  },
                                  "xxs": {
                                    "h": 1,
                                    "w": 4,
                                    "x": 0,
                                    "y": 10,
                                    "minH": 1,
                                    "minW": 2
                                  }
                                },
                                "settings": {
                                  "type": "Switch",
                                  "disabled": {
                                    "if": "error|orphaned|unknown|offline|off|loading",
                                    "channel": {
                                      "name": "status"
                                    }
                                  },
                                  "defaultScope": {
                                    "type": "range",
                                    "params": [
                                      "2020-02-14T11:43:17.395Z",
                                      "2020-02-14T12:38:17.395Z"
                                    ]
                                  },
                                  "inputChannels": [
                                    6002
                                  ]
                                },
                                "identifier": "b655e2c0-3131-4659-8000-cf10e083b249"
                              },
                              {
                                "layouts": {
                                  "lg": {
                                    "h": 6,
                                    "w": 12,
                                    "x": 0,
                                    "y": 6,
                                    "minH": 3,
                                    "minW": 4
                                  },
                                  "md": {
                                    "h": 6,
                                    "w": 10,
                                    "x": 0,
                                    "y": 6,
                                    "minH": 3,
                                    "minW": 4
                                  },
                                  "sm": {
                                    "h": 6,
                                    "w": 8,
                                    "x": 0,
                                    "y": 6,
                                    "minH": 3,
                                    "minW": 4
                                  },
                                  "xs": {
                                    "h": 6,
                                    "w": 6,
                                    "x": 0,
                                    "y": 11,
                                    "minH": 3,
                                    "minW": 4
                                  },
                                  "xxs": {
                                    "h": 5,
                                    "w": 4,
                                    "x": 0,
                                    "y": 11,
                                    "minH": 3,
                                    "minW": 4
                                  }
                                },
                                "settings": {
                                  "type": "LineChart",
                                  "disabled": {
                                    "if": "error|orphaned|unknown|offline|off|loading",
                                    "channel": {
                                      "name": "status"
                                    }
                                  },
                                  "defaultScope": {
                                    "type": "range",
                                    "params": [
                                      "2020-02-14T11:43:17.395Z",
                                      "2020-02-14T12:38:17.395Z"
                                    ]
                                  },
                                  "inputChannels": [
                                    5993,
                                    5995,
                                    6005,
                                    6007
                                  ]
                                },
                                "identifier": "5ed02230-3fd6-473d-ada2-5a7b09fd8014"
                              },
                              {
                                "layouts": {
                                  "lg": {
                                    "h": 3,
                                    "w": 6,
                                    "x": 0,
                                    "y": 0,
                                    "minH": 3,
                                    "minW": 3
                                  },
                                  "md": {
                                    "h": 3,
                                    "w": 5,
                                    "x": 0,
                                    "y": 0,
                                    "minH": 3,
                                    "minW": 3
                                  },
                                  "sm": {
                                    "h": 3,
                                    "w": 4,
                                    "x": 0,
                                    "y": 0,
                                    "minH": 3,
                                    "minW": 3
                                  },
                                  "xs": {
                                    "h": 3,
                                    "w": 6,
                                    "x": 0,
                                    "y": 0,
                                    "minH": 3,
                                    "minW": 3
                                  },
                                  "xxs": {
                                    "h": 3,
                                    "w": 4,
                                    "x": 0,
                                    "y": 0,
                                    "minH": 3,
                                    "minW": 3
                                  }
                                },
                                "settings": {
                                  "type": "Gauge",
                                  "disabled": {
                                    "if": "error|orphaned|unknown|offline|off|loading",
                                    "channel": {
                                      "name": "status"
                                    }
                                  },
                                  "setPoint": {
                                    "setPointType": "channel",
                                    "showSetPoint": true,
                                    "setPointSource": 6006
                                  },
                                  "defaultScope": {
                                    "type": "range",
                                    "params": [
                                      "2020-02-14T11:43:17.395Z",
                                      "2020-02-14T12:38:17.395Z"
                                    ]
                                  },
                                  "inputChannels": [
                                    6005
                                  ]
                                },
                                "identifier": "2af7fd06-703f-4c4b-9087-e604e743a0f5"
                              },
                              {
                                "layouts": {
                                  "lg": {
                                    "h": 1,
                                    "w": 6,
                                    "x": 0,
                                    "y": 3,
                                    "minH": 1,
                                    "minW": 3
                                  },
                                  "md": {
                                    "h": 1,
                                    "w": 5,
                                    "x": 0,
                                    "y": 3,
                                    "minH": 1,
                                    "minW": 3
                                  },
                                  "sm": {
                                    "h": 1,
                                    "w": 4,
                                    "x": 0,
                                    "y": 3,
                                    "minH": 1,
                                    "minW": 3
                                  },
                                  "xs": {
                                    "h": 1,
                                    "w": 6,
                                    "x": 0,
                                    "y": 3,
                                    "minH": 1,
                                    "minW": 3
                                  },
                                  "xxs": {
                                    "h": 1,
                                    "w": 4,
                                    "x": 0,
                                    "y": 3,
                                    "minH": 1,
                                    "minW": 3
                                  }
                                },
                                "settings": {
                                  "type": "NumberInput",
                                  "label": "set",
                                  "disabled": {
                                    "if": "error|orphaned|unknown|offline|off|loading",
                                    "channel": {
                                      "name": "status"
                                    }
                                  },
                                  "defaultScope": {
                                    "type": "range",
                                    "params": [
                                      "2020-02-14T11:43:17.395Z",
                                      "2020-02-14T12:38:17.395Z"
                                    ]
                                  },
                                  "inputChannels": [
                                    6006
                                  ]
                                },
                                "identifier": "b27df907-617d-437d-b6be-b8740f0b6c30"
                              },
                              {
                                "layouts": {
                                  "lg": {
                                    "h": 3,
                                    "w": 6,
                                    "x": 6,
                                    "y": 0,
                                    "minH": 3,
                                    "minW": 3
                                  },
                                  "md": {
                                    "h": 3,
                                    "w": 5,
                                    "x": 5,
                                    "y": 0,
                                    "minH": 3,
                                    "minW": 3
                                  },
                                  "sm": {
                                    "h": 3,
                                    "w": 4,
                                    "x": 4,
                                    "y": 0,
                                    "minH": 3,
                                    "minW": 3
                                  },
                                  "xs": {
                                    "h": 3,
                                    "w": 6,
                                    "x": 0,
                                    "y": 4,
                                    "minH": 3,
                                    "minW": 3
                                  },
                                  "xxs": {
                                    "h": 3,
                                    "w": 4,
                                    "x": 0,
                                    "y": 4,
                                    "minH": 3,
                                    "minW": 3
                                  }
                                },
                                "settings": {
                                  "type": "Gauge",
                                  "disabled": {
                                    "if": "error|orphaned|unknown|offline|off|loading",
                                    "channel": {
                                      "name": "status"
                                    }
                                  },
                                  "setPoint": {
                                    "setPointType": "channel",
                                    "showSetPoint": true,
                                    "setPointSource": 6008
                                  },
                                  "defaultScope": {
                                    "type": "range",
                                    "params": [
                                      "2020-02-14T11:43:17.395Z",
                                      "2020-02-14T12:38:17.395Z"
                                    ]
                                  },
                                  "inputChannels": [
                                    6007
                                  ]
                                },
                                "identifier": "1a65c546-83f5-47cb-aa7c-6172d5ef0270"
                              },
                              {
                                "layouts": {
                                  "lg": {
                                    "h": 1,
                                    "w": 6,
                                    "x": 6,
                                    "y": 3,
                                    "minH": 1,
                                    "minW": 3
                                  },
                                  "md": {
                                    "h": 1,
                                    "w": 5,
                                    "x": 5,
                                    "y": 3,
                                    "minH": 1,
                                    "minW": 3
                                  },
                                  "sm": {
                                    "h": 1,
                                    "w": 4,
                                    "x": 4,
                                    "y": 3,
                                    "minH": 1,
                                    "minW": 3
                                  },
                                  "xs": {
                                    "h": 1,
                                    "w": 6,
                                    "x": 0,
                                    "y": 7,
                                    "minH": 1,
                                    "minW": 3
                                  },
                                  "xxs": {
                                    "h": 1,
                                    "w": 4,
                                    "x": 0,
                                    "y": 7,
                                    "minH": 1,
                                    "minW": 3
                                  }
                                },
                                "settings": {
                                  "type": "NumberInput",
                                  "label": "set",
                                  "disabled": {
                                    "if": "error|orphaned|unknown|offline|off|loading",
                                    "channel": {
                                      "name": "status"
                                    }
                                  },
                                  "defaultScope": {
                                    "type": "range",
                                    "params": [
                                      "2020-02-14T11:43:17.395Z",
                                      "2020-02-14T12:38:17.395Z"
                                    ]
                                  },
                                  "inputChannels": [
                                    6008
                                  ]
                                },
                                "identifier": "da7f7653-9db6-4872-9004-67ddcf51673b"
                              },
                              {
                                "layouts": {
                                  "lg": {
                                    "h": 1,
                                    "w": 12,
                                    "x": 0,
                                    "y": 5,
                                    "minH": 1,
                                    "minW": 2
                                  },
                                  "md": {
                                    "h": 1,
                                    "w": 10,
                                    "x": 0,
                                    "y": 5,
                                    "minH": 1,
                                    "minW": 2
                                  },
                                  "sm": {
                                    "h": 1,
                                    "w": 8,
                                    "x": 0,
                                    "y": 5,
                                    "minH": 1,
                                    "minW": 2
                                  },
                                  "xs": {
                                    "h": 1,
                                    "w": 6,
                                    "x": 0,
                                    "y": 10,
                                    "minH": 1,
                                    "minW": 2
                                  },
                                  "xxs": {
                                    "h": 1,
                                    "w": 4,
                                    "x": 0,
                                    "y": 8,
                                    "minH": 1,
                                    "minW": 2
                                  }
                                },
                                "settings": {
                                  "type": "Switch",
                                  "disabled": {
                                    "if": "error|orphaned|unknown|offline|off|loading",
                                    "channel": {
                                      "name": "status"
                                    }
                                  },
                                  "defaultScope": {
                                    "type": "range",
                                    "params": [
                                      "2020-02-14T11:43:17.395Z",
                                      "2020-02-14T12:38:17.395Z"
                                    ]
                                  },
                                  "inputChannels": [
                                    6009
                                  ]
                                },
                                "identifier": "835d6e62-7de8-4e13-aa42-2070b9b9b68f"
                              },
                              {
                                "layouts": {
                                  "lg": {
                                    "h": 1,
                                    "w": 6,
                                    "x": 6,
                                    "y": 4,
                                    "minH": 1,
                                    "minW": 2
                                  },
                                  "md": {
                                    "h": 1,
                                    "w": 5,
                                    "x": 5,
                                    "y": 4,
                                    "minH": 1,
                                    "minW": 2
                                  },
                                  "sm": {
                                    "h": 1,
                                    "w": 4,
                                    "x": 4,
                                    "y": 4,
                                    "minH": 1,
                                    "minW": 2
                                  },
                                  "xs": {
                                    "h": 1,
                                    "w": 6,
                                    "x": 0,
                                    "y": 9,
                                    "minH": 1,
                                    "minW": 2
                                  },
                                  "xxs": {
                                    "h": 1,
                                    "w": 4,
                                    "x": 0,
                                    "y": 9,
                                    "minH": 1,
                                    "minW": 2
                                  }
                                },
                                "settings": {
                                  "type": "Switch",
                                  "disabled": {
                                    "if": "error|orphaned|unknown|offline|off|loading",
                                    "channel": {
                                      "name": "status"
                                    }
                                  },
                                  "defaultScope": {
                                    "type": "range",
                                    "params": [
                                      "2020-02-14T11:43:17.395Z",
                                      "2020-02-14T12:38:17.395Z"
                                    ]
                                  },
                                  "inputChannels": [
                                    6011
                                  ]
                                },
                                "identifier": "732ead29-58d8-4d02-bc4f-59387ebc8d2b"
                              },
                              {
                                "layouts": {
                                  "lg": {
                                    "h": 1,
                                    "w": 6,
                                    "x": 0,
                                    "y": 4,
                                    "minH": 1,
                                    "minW": 2
                                  },
                                  "md": {
                                    "h": 1,
                                    "w": 5,
                                    "x": 0,
                                    "y": 4,
                                    "minH": 1,
                                    "minW": 2
                                  },
                                  "sm": {
                                    "h": 1,
                                    "w": 4,
                                    "x": 0,
                                    "y": 4,
                                    "minH": 1,
                                    "minW": 2
                                  },
                                  "xs": {
                                    "h": 1,
                                    "w": 6,
                                    "x": 0,
                                    "y": 8,
                                    "minH": 1,
                                    "minW": 2
                                  },
                                  "xxs": {
                                    "h": 1,
                                    "w": 4,
                                    "x": 0,
                                    "y": 10,
                                    "minH": 1,
                                    "minW": 2
                                  }
                                },
                                "settings": {
                                  "type": "Switch",
                                  "disabled": {
                                    "if": "error|orphaned|unknown|offline|off|loading",
                                    "channel": {
                                      "name": "status"
                                    }
                                  },
                                  "defaultScope": {
                                    "type": "range",
                                    "params": [
                                      "2020-02-14T11:43:17.395Z",
                                      "2020-02-14T12:38:17.395Z"
                                    ]
                                  },
                                  "inputChannels": [
                                    6014
                                  ]
                                },
                                "identifier": "fda8c3f4-bd53-44ba-9c18-b5968b8a3d45"
                              }
                            ]
                          },
                          "viewable_type": "Measurement",
                          "data_scopes": {
                            "scopes": {
                              "67b325d3-73ad-4e5d-859d-26ce6cca704b": {
                                "type": "range",
                                "params": [
                                  "2019-11-28T17:14:34.881Z",
                                  "2019-11-28T18:09:34.881Z"
                                ],
                                "channels": [
                                  5940,
                                  5950
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "243a0514-f7b5-48d0-8a38-00a97862929a": {
                                "type": "range",
                                "params": [
                                  "2019-11-28T17:14:34.881Z",
                                  "2019-11-28T18:09:34.881Z"
                                ],
                                "channels": [
                                  5941,
                                  5950
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "78154052-948e-4b0a-9487-f8c7f2359a3f": {
                                "type": "range",
                                "params": [
                                  "2019-11-28T17:14:34.881Z",
                                  "2019-11-28T18:09:34.881Z"
                                ],
                                "channels": [
                                  5942,
                                  5950
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "e640fcb0-bf1f-47ee-81b9-ab509edff2b9": {
                                "type": "range",
                                "params": [
                                  "2019-11-28T17:14:34.881Z",
                                  "2019-11-28T18:09:34.881Z"
                                ],
                                "channels": [
                                  5943,
                                  5950
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "eeddb0bc-0bb7-49d6-98dd-37588f4e3221": {
                                "type": "range",
                                "params": [
                                  "2019-11-28T17:14:34.881Z",
                                  "2019-11-28T18:09:34.881Z"
                                ],
                                "channels": [
                                  5944,
                                  5950
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "81e39caa-c843-4cc0-829b-670fe53b0bc0": {
                                "type": "range",
                                "params": [
                                  "2019-11-28T17:14:34.881Z",
                                  "2019-11-28T18:09:34.881Z"
                                ],
                                "channels": [
                                  5946,
                                  5950
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "767df3fe-5e1f-48e1-a28a-eb537675f75d": {
                                "type": "range",
                                "params": [
                                  "2019-11-28T17:14:34.881Z",
                                  "2019-11-28T18:09:34.881Z"
                                ],
                                "channels": [
                                  5949,
                                  5950
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "f403f2e5-c623-4409-a898-99dbe944379a": {
                                "type": "range",
                                "params": [
                                  "2019-11-28T17:14:34.881Z",
                                  "2019-11-28T18:09:34.881Z"
                                ],
                                "channels": [
                                  5940,
                                  5942,
                                  5952,
                                  5954,
                                  5950,
                                  5962
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "0bd92930-1379-4bb1-ad90-93bd0d91c613": {
                                "type": "range",
                                "params": [
                                  "2019-11-28T17:14:34.881Z",
                                  "2019-11-28T18:09:34.881Z"
                                ],
                                "channels": [
                                  5952,
                                  5962
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "143f0c61-bf71-450f-8fa2-0b418080757c": {
                                "type": "range",
                                "params": [
                                  "2019-11-28T17:14:34.881Z",
                                  "2019-11-28T18:09:34.881Z"
                                ],
                                "channels": [
                                  5953,
                                  5962
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "36731fd8-07ed-45e7-8853-7b6bc7bcf65c": {
                                "type": "range",
                                "params": [
                                  "2019-11-28T17:14:34.881Z",
                                  "2019-11-28T18:09:34.881Z"
                                ],
                                "channels": [
                                  5954,
                                  5962
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "2c25efd9-65f5-4ad7-aea4-8b3ecb1084aa": {
                                "type": "range",
                                "params": [
                                  "2019-11-28T17:14:34.881Z",
                                  "2019-11-28T18:09:34.881Z"
                                ],
                                "channels": [
                                  5955,
                                  5962
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "5b54c99f-be9c-4b1f-a813-52193c99dda5": {
                                "type": "range",
                                "params": [
                                  "2019-11-28T17:14:34.881Z",
                                  "2019-11-28T18:09:34.881Z"
                                ],
                                "channels": [
                                  5956,
                                  5962
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "2e553f5d-42cf-4f30-ac54-8decc16e8f41": {
                                "type": "range",
                                "params": [
                                  "2019-11-28T17:14:34.881Z",
                                  "2019-11-28T18:09:34.881Z"
                                ],
                                "channels": [
                                  5958,
                                  5962
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "3232d0b1-163e-4bf7-a0be-0d41fb489e1e": {
                                "type": "range",
                                "params": [
                                  "2019-11-28T17:14:34.881Z",
                                  "2019-11-28T18:09:34.881Z"
                                ],
                                "channels": [
                                  5961,
                                  5962
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "23441641-14e1-4122-9b2d-823302881909": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T12:24:54.863Z",
                                  "2020-02-03T13:19:54.863Z"
                                ],
                                "channels": [
                                  5993,
                                  6003
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "9abdb7d7-d3f4-436e-946d-2142f7555ef3": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T12:24:54.863Z",
                                  "2020-02-03T13:19:54.863Z"
                                ],
                                "channels": [
                                  5994,
                                  6003
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "958c5f1f-3de8-4dd2-89e8-f24f47308bdd": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T12:24:54.863Z",
                                  "2020-02-03T13:19:54.863Z"
                                ],
                                "channels": [
                                  5995,
                                  6003
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "cb802d04-dd0b-426f-9a28-485201ebe1fc": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T12:24:54.863Z",
                                  "2020-02-03T13:19:54.863Z"
                                ],
                                "channels": [
                                  5996,
                                  6003
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "f0e382d6-5bd8-4bbf-b4d9-ebd36d60c8a6": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T12:24:54.863Z",
                                  "2020-02-03T13:19:54.863Z"
                                ],
                                "channels": [
                                  5997,
                                  6003
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "fe923eda-5f26-4402-89a7-abed2d974609": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T12:24:54.863Z",
                                  "2020-02-03T13:19:54.863Z"
                                ],
                                "channels": [
                                  5999,
                                  6003
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "8ff52dea-252e-4872-b528-c4add3799e2f": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T12:24:54.863Z",
                                  "2020-02-03T13:19:54.863Z"
                                ],
                                "channels": [
                                  6002,
                                  6003
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "b31cc75d-242d-4789-9e77-20240cbfb751": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T12:24:54.863Z",
                                  "2020-02-03T13:19:54.863Z"
                                ],
                                "channels": [
                                  5993,
                                  5995,
                                  6005,
                                  6007,
                                  6003,
                                  6015
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "aac59b93-d64f-42c3-ad4e-51762a20f8b0": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T12:24:54.863Z",
                                  "2020-02-03T13:19:54.863Z"
                                ],
                                "channels": [
                                  6005,
                                  6015
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "f97abed9-c551-43a6-a1b4-11621729d502": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T12:24:54.863Z",
                                  "2020-02-03T13:19:54.863Z"
                                ],
                                "channels": [
                                  6006,
                                  6015
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "219835ab-88f5-4f30-9962-086591352e09": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T12:24:54.863Z",
                                  "2020-02-03T13:19:54.863Z"
                                ],
                                "channels": [
                                  6007,
                                  6015
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "75e781c8-1589-48c5-a4e8-99e0c60c3e20": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T12:24:54.863Z",
                                  "2020-02-03T13:19:54.863Z"
                                ],
                                "channels": [
                                  6008,
                                  6015
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "94ca4a9e-7ed9-4da9-9901-adb90e9c4df4": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T12:24:54.863Z",
                                  "2020-02-03T13:19:54.863Z"
                                ],
                                "channels": [
                                  6009,
                                  6015
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "289ad32e-c314-496a-9a37-5e6a4c5213da": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T12:24:54.863Z",
                                  "2020-02-03T13:19:54.863Z"
                                ],
                                "channels": [
                                  6011,
                                  6015
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "1e9d4d92-74a6-4bf5-9d03-6b05c38a0c94": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T12:24:54.863Z",
                                  "2020-02-03T13:19:54.863Z"
                                ],
                                "channels": [
                                  6014,
                                  6015
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "100a3f5e-667b-4a56-9b02-560c7ef89bf0": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T12:42:52.571Z",
                                  "2020-02-03T13:37:52.571Z"
                                ],
                                "channels": [
                                  5993,
                                  6003
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "025f93ef-76c5-4bfd-8656-c50efd364028": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T12:42:52.571Z",
                                  "2020-02-03T13:37:52.571Z"
                                ],
                                "channels": [
                                  5994,
                                  6003
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "578be848-4f07-4bf6-b828-f9af55b7ea5f": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T12:42:52.571Z",
                                  "2020-02-03T13:37:52.571Z"
                                ],
                                "channels": [
                                  5995,
                                  6003
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "6108826d-d394-4202-8e02-fea7cbff955c": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T12:42:52.571Z",
                                  "2020-02-03T13:37:52.571Z"
                                ],
                                "channels": [
                                  5996,
                                  6003
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "8ad4350b-1e8d-44c8-a13c-ea33852b7708": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T12:42:52.571Z",
                                  "2020-02-03T13:37:52.571Z"
                                ],
                                "channels": [
                                  5997,
                                  6003
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "6eaf7b49-0d21-43e9-9c90-6c84a9d95d94": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T12:42:52.571Z",
                                  "2020-02-03T13:37:52.571Z"
                                ],
                                "channels": [
                                  5999,
                                  6003
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "45eababb-6546-4fd7-a3cb-256722ac2e63": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T12:42:52.571Z",
                                  "2020-02-03T13:37:52.571Z"
                                ],
                                "channels": [
                                  6002,
                                  6003
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "fce6f3be-0870-4732-82d5-e68eb9e19b1c": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T12:42:52.571Z",
                                  "2020-02-03T13:37:52.571Z"
                                ],
                                "channels": [
                                  5993,
                                  5995,
                                  6005,
                                  6007,
                                  6003,
                                  6015
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "a4d3a7a8-92f9-48af-85e4-14f21504b6ff": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T12:42:52.571Z",
                                  "2020-02-03T13:37:52.571Z"
                                ],
                                "channels": [
                                  6005,
                                  6015
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "c76d0538-9548-490c-8d88-07596e984484": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T12:42:52.571Z",
                                  "2020-02-03T13:37:52.571Z"
                                ],
                                "channels": [
                                  6006,
                                  6015
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "594d358d-9c3b-46c9-a34d-ea0c4a2f8e93": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T12:42:52.571Z",
                                  "2020-02-03T13:37:52.571Z"
                                ],
                                "channels": [
                                  6007,
                                  6015
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "b945b073-4747-4c67-aa3d-d99fc5025bf1": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T12:42:52.571Z",
                                  "2020-02-03T13:37:52.571Z"
                                ],
                                "channels": [
                                  6008,
                                  6015
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "8bb7afda-f37a-474e-8f0b-2350f3743ae8": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T12:42:52.571Z",
                                  "2020-02-03T13:37:52.571Z"
                                ],
                                "channels": [
                                  6009,
                                  6015
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "ba16a73d-dfbf-41de-a556-959168cbbd28": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T12:42:52.571Z",
                                  "2020-02-03T13:37:52.571Z"
                                ],
                                "channels": [
                                  6011,
                                  6015
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "9146f100-0519-4de5-8add-114e1bca8400": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T12:42:52.571Z",
                                  "2020-02-03T13:37:52.571Z"
                                ],
                                "channels": [
                                  6014,
                                  6015
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "7f5f743d-ad4c-46d9-92db-6951c95b0f8e": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T13:26:16.343Z",
                                  "2020-02-03T14:21:16.343Z"
                                ],
                                "channels": [
                                  5993,
                                  6003
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "8e41c497-d6d4-4af5-a45b-3e8ddddc3b6f": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T13:26:16.343Z",
                                  "2020-02-03T14:21:16.343Z"
                                ],
                                "channels": [
                                  5994,
                                  6003
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "378f0b23-8c38-4038-8e8b-ae7535ebd13d": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T13:26:16.343Z",
                                  "2020-02-03T14:21:16.343Z"
                                ],
                                "channels": [
                                  5995,
                                  6003
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "8fff4bf8-71ee-4893-be5e-03d6d2a53e41": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T13:26:16.343Z",
                                  "2020-02-03T14:21:16.343Z"
                                ],
                                "channels": [
                                  5996,
                                  6003
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "991f4b68-821e-47ab-86d4-648ce0b3ac48": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T13:26:16.343Z",
                                  "2020-02-03T14:21:16.343Z"
                                ],
                                "channels": [
                                  5997,
                                  6003
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "502f608c-3576-4b5f-8c72-de3c5b090bb5": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T13:26:16.343Z",
                                  "2020-02-03T14:21:16.343Z"
                                ],
                                "channels": [
                                  5999,
                                  6003
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "5b2fcf85-3524-4959-ab9a-28473ddab9ca": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T13:26:16.343Z",
                                  "2020-02-03T14:21:16.343Z"
                                ],
                                "channels": [
                                  6002,
                                  6003
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "35afa326-41c7-4f45-a2dd-4378fce88680": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T13:26:16.343Z",
                                  "2020-02-03T14:21:16.343Z"
                                ],
                                "channels": [
                                  5993,
                                  5995,
                                  6005,
                                  6007,
                                  6003,
                                  6015
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "7cce1f55-5248-4217-a061-0e6fea318a1a": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T13:26:16.343Z",
                                  "2020-02-03T14:21:16.343Z"
                                ],
                                "channels": [
                                  6005,
                                  6015
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "c8f3c566-2a15-4257-99df-67a972f18c6f": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T13:26:16.343Z",
                                  "2020-02-03T14:21:16.343Z"
                                ],
                                "channels": [
                                  6006,
                                  6015
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "607fddd5-0917-4b03-9c57-ff4025e9822a": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T13:26:16.343Z",
                                  "2020-02-03T14:21:16.343Z"
                                ],
                                "channels": [
                                  6007,
                                  6015
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "97b21978-750c-4a8c-be82-aad226875a9a": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T13:26:16.343Z",
                                  "2020-02-03T14:21:16.343Z"
                                ],
                                "channels": [
                                  6008,
                                  6015
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "195711a1-0703-46b7-afce-c2647aa8e173": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T13:26:16.343Z",
                                  "2020-02-03T14:21:16.343Z"
                                ],
                                "channels": [
                                  6009,
                                  6015
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "d512ff52-2e00-47f3-85e9-45fbe2d91767": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T13:26:16.343Z",
                                  "2020-02-03T14:21:16.343Z"
                                ],
                                "channels": [
                                  6011,
                                  6015
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "7759ce84-86c7-4f15-8080-2dc5f8dec594": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T13:26:16.343Z",
                                  "2020-02-03T14:21:16.343Z"
                                ],
                                "channels": [
                                  6014,
                                  6015
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "54925298-5c95-483c-b807-20e2501b3bab": {
                                "type": "range",
                                "params": [
                                  "2020-02-04T12:55:45.368Z",
                                  "2020-02-04T13:50:45.368Z"
                                ],
                                "channels": [
                                  5993,
                                  6003
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "14eba8e9-4012-4c7e-b27c-474c242160cb": {
                                "type": "range",
                                "params": [
                                  "2020-02-04T12:55:45.368Z",
                                  "2020-02-04T13:50:45.368Z"
                                ],
                                "channels": [
                                  5994,
                                  6003
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "91f4b06a-1b62-4959-acf9-5681047fdf2a": {
                                "type": "range",
                                "params": [
                                  "2020-02-04T12:55:45.368Z",
                                  "2020-02-04T13:50:45.368Z"
                                ],
                                "channels": [
                                  5995,
                                  6003
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "c0873802-103c-4bf0-8c0d-a1e5100430a6": {
                                "type": "range",
                                "params": [
                                  "2020-02-04T12:55:45.368Z",
                                  "2020-02-04T13:50:45.368Z"
                                ],
                                "channels": [
                                  5996,
                                  6003
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "d8d18342-a78d-4432-9e23-a3559284ba34": {
                                "type": "range",
                                "params": [
                                  "2020-02-04T12:55:45.368Z",
                                  "2020-02-04T13:50:45.368Z"
                                ],
                                "channels": [
                                  5997,
                                  6003
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "e621287a-fd09-4740-b119-381edcfc7fa2": {
                                "type": "range",
                                "params": [
                                  "2020-02-04T12:55:45.368Z",
                                  "2020-02-04T13:50:45.368Z"
                                ],
                                "channels": [
                                  5999,
                                  6003
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "87149fe4-00ca-43f2-bbbc-d5370d356f59": {
                                "type": "range",
                                "params": [
                                  "2020-02-04T12:55:45.368Z",
                                  "2020-02-04T13:50:45.368Z"
                                ],
                                "channels": [
                                  6002,
                                  6003
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "efa805df-2f63-4407-ae12-687ed7f8b6d0": {
                                "type": "range",
                                "params": [
                                  "2020-02-04T12:55:45.368Z",
                                  "2020-02-04T13:50:45.368Z"
                                ],
                                "channels": [
                                  5993,
                                  5995,
                                  6005,
                                  6007,
                                  6003,
                                  6015
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "7b8d2a2d-05a6-4474-b7d4-3470e7d03344": {
                                "type": "range",
                                "params": [
                                  "2020-02-04T12:55:45.368Z",
                                  "2020-02-04T13:50:45.368Z"
                                ],
                                "channels": [
                                  6005,
                                  6015
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "925cae03-bea5-425b-b345-38791aa0c8fe": {
                                "type": "range",
                                "params": [
                                  "2020-02-04T12:55:45.368Z",
                                  "2020-02-04T13:50:45.368Z"
                                ],
                                "channels": [
                                  6006,
                                  6015
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "e003c7ca-603d-45fb-92b6-9e2f712ad4f8": {
                                "type": "range",
                                "params": [
                                  "2020-02-04T12:55:45.368Z",
                                  "2020-02-04T13:50:45.368Z"
                                ],
                                "channels": [
                                  6007,
                                  6015
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "594b7cb5-e79a-4832-b5e0-62e920d48eac": {
                                "type": "range",
                                "params": [
                                  "2020-02-04T12:55:45.368Z",
                                  "2020-02-04T13:50:45.368Z"
                                ],
                                "channels": [
                                  6008,
                                  6015
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "53f2f31e-62e2-4463-bb6d-036b65670082": {
                                "type": "range",
                                "params": [
                                  "2020-02-04T12:55:45.368Z",
                                  "2020-02-04T13:50:45.368Z"
                                ],
                                "channels": [
                                  6009,
                                  6015
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "70f6d5dc-0154-4be3-8ed1-fb13c750ea53": {
                                "type": "range",
                                "params": [
                                  "2020-02-04T12:55:45.368Z",
                                  "2020-02-04T13:50:45.368Z"
                                ],
                                "channels": [
                                  6011,
                                  6015
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "c96bacff-916c-4515-a022-d55b7c49a5ff": {
                                "type": "range",
                                "params": [
                                  "2020-02-04T12:55:45.368Z",
                                  "2020-02-04T13:50:45.368Z"
                                ],
                                "channels": [
                                  6014,
                                  6015
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "557e7459-09fd-4bc9-bdfd-fd5474950770": {
                                "type": "range",
                                "params": [
                                  "2020-02-06T13:51:16.946Z",
                                  "2020-02-06T14:46:16.946Z"
                                ],
                                "channels": [
                                  5993,
                                  6003
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "c352ab85-5a67-47d2-bcb1-498dff0d9ca0": {
                                "type": "range",
                                "params": [
                                  "2020-02-06T13:51:16.946Z",
                                  "2020-02-06T14:46:16.946Z"
                                ],
                                "channels": [
                                  5994,
                                  6003
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "d5d3b29b-5c1b-4b0c-bd4f-ef6c3ff74463": {
                                "type": "range",
                                "params": [
                                  "2020-02-06T13:51:16.946Z",
                                  "2020-02-06T14:46:16.946Z"
                                ],
                                "channels": [
                                  5995,
                                  6003
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "7581d01c-0722-4653-895e-c8af4eea8da6": {
                                "type": "range",
                                "params": [
                                  "2020-02-06T13:51:16.946Z",
                                  "2020-02-06T14:46:16.946Z"
                                ],
                                "channels": [
                                  5996,
                                  6003
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "3b8acd78-bd83-4aa4-a5d1-ee27e9e1de70": {
                                "type": "range",
                                "params": [
                                  "2020-02-06T13:51:16.946Z",
                                  "2020-02-06T14:46:16.946Z"
                                ],
                                "channels": [
                                  5997,
                                  6003
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "5b756cc1-0ff6-4056-9e4e-fe3e51a69a3a": {
                                "type": "range",
                                "params": [
                                  "2020-02-06T13:51:16.946Z",
                                  "2020-02-06T14:46:16.946Z"
                                ],
                                "channels": [
                                  5999,
                                  6003
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "5f998902-f372-4ccf-86b0-4644bcdef3a3": {
                                "type": "range",
                                "params": [
                                  "2020-02-06T13:51:16.946Z",
                                  "2020-02-06T14:46:16.946Z"
                                ],
                                "channels": [
                                  6002,
                                  6003
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "cfbf17fb-7f84-4ec5-bc9c-ace80882edb7": {
                                "type": "range",
                                "params": [
                                  "2020-02-06T13:51:16.946Z",
                                  "2020-02-06T14:46:16.946Z"
                                ],
                                "channels": [
                                  5993,
                                  5995,
                                  6005,
                                  6007,
                                  6003,
                                  6015
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "aa9c7f43-7e00-4b33-860b-2236b28c9fd9": {
                                "type": "range",
                                "params": [
                                  "2020-02-06T13:51:16.946Z",
                                  "2020-02-06T14:46:16.946Z"
                                ],
                                "channels": [
                                  6005,
                                  6015
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "7bf6121e-3def-4501-8ba8-1e963475c4e9": {
                                "type": "range",
                                "params": [
                                  "2020-02-06T13:51:16.946Z",
                                  "2020-02-06T14:46:16.946Z"
                                ],
                                "channels": [
                                  6006,
                                  6015
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "9cab6a6e-8816-43cc-bc3f-803074d4b7dc": {
                                "type": "range",
                                "params": [
                                  "2020-02-06T13:51:16.946Z",
                                  "2020-02-06T14:46:16.946Z"
                                ],
                                "channels": [
                                  6007,
                                  6015
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "eb153097-898a-4435-8ccd-4f81c455e8e7": {
                                "type": "range",
                                "params": [
                                  "2020-02-06T13:51:16.946Z",
                                  "2020-02-06T14:46:16.946Z"
                                ],
                                "channels": [
                                  6008,
                                  6015
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "4d039d11-fe0a-446c-9d05-182bbde9fff4": {
                                "type": "range",
                                "params": [
                                  "2020-02-06T13:51:16.946Z",
                                  "2020-02-06T14:46:16.946Z"
                                ],
                                "channels": [
                                  6009,
                                  6015
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "24fce6c2-6b71-4750-af67-a8f144b99e1d": {
                                "type": "range",
                                "params": [
                                  "2020-02-06T13:51:16.946Z",
                                  "2020-02-06T14:46:16.946Z"
                                ],
                                "channels": [
                                  6011,
                                  6015
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "d304e363-8833-4bad-aa54-bc52cbca0dc8": {
                                "type": "range",
                                "params": [
                                  "2020-02-06T13:51:16.946Z",
                                  "2020-02-06T14:46:16.946Z"
                                ],
                                "channels": [
                                  6014,
                                  6015
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "a5911e76-df48-46a4-bb2e-f5da20e73194": {
                                "type": "range",
                                "params": [
                                  "2020-02-10T13:47:08.978Z",
                                  "2020-02-10T14:42:08.978Z"
                                ],
                                "channels": [
                                  5993,
                                  6003
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "30d84cb4-f7bb-4156-85e3-0303e5703ae7": {
                                "type": "range",
                                "params": [
                                  "2020-02-10T13:47:08.978Z",
                                  "2020-02-10T14:42:08.978Z"
                                ],
                                "channels": [
                                  5994,
                                  6003
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "2ba969af-cf66-43c0-8427-f6b273eba334": {
                                "type": "range",
                                "params": [
                                  "2020-02-10T13:47:08.978Z",
                                  "2020-02-10T14:42:08.978Z"
                                ],
                                "channels": [
                                  5995,
                                  6003
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "1335ee4f-6fe9-4a39-b389-d8d8901d3009": {
                                "type": "range",
                                "params": [
                                  "2020-02-10T13:47:08.978Z",
                                  "2020-02-10T14:42:08.978Z"
                                ],
                                "channels": [
                                  5996,
                                  6003
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "af76dd24-93b0-4321-978f-5c22dbcabfcb": {
                                "type": "range",
                                "params": [
                                  "2020-02-10T13:47:08.978Z",
                                  "2020-02-10T14:42:08.978Z"
                                ],
                                "channels": [
                                  5997,
                                  6003
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "87f03ff7-1e33-4b1a-bfc3-c3824e0d2d6d": {
                                "type": "range",
                                "params": [
                                  "2020-02-10T13:47:08.978Z",
                                  "2020-02-10T14:42:08.978Z"
                                ],
                                "channels": [
                                  5999,
                                  6003
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "2d3e50f3-ae1c-4658-9151-233069ee894c": {
                                "type": "range",
                                "params": [
                                  "2020-02-10T13:47:08.978Z",
                                  "2020-02-10T14:42:08.978Z"
                                ],
                                "channels": [
                                  6002,
                                  6003
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "3ffb3420-5683-43b6-ae65-ef4f0aa14581": {
                                "type": "range",
                                "params": [
                                  "2020-02-10T13:47:08.978Z",
                                  "2020-02-10T14:42:08.978Z"
                                ],
                                "channels": [
                                  5993,
                                  5995,
                                  6005,
                                  6007,
                                  6003,
                                  6015
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "94f83281-3a91-4656-8b49-582ea3e56fb9": {
                                "type": "range",
                                "params": [
                                  "2020-02-10T13:47:08.978Z",
                                  "2020-02-10T14:42:08.978Z"
                                ],
                                "channels": [
                                  6005,
                                  6015
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "414b73d6-fc8a-4b74-abde-d0709f28089c": {
                                "type": "range",
                                "params": [
                                  "2020-02-10T13:47:08.978Z",
                                  "2020-02-10T14:42:08.978Z"
                                ],
                                "channels": [
                                  6006,
                                  6015
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "389197e5-0197-460a-9a49-b34fd91f5df7": {
                                "type": "range",
                                "params": [
                                  "2020-02-10T13:47:08.978Z",
                                  "2020-02-10T14:42:08.978Z"
                                ],
                                "channels": [
                                  6007,
                                  6015
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "dc876f0e-b3d3-4f27-ada7-4ef4dd31c2d4": {
                                "type": "range",
                                "params": [
                                  "2020-02-10T13:47:08.978Z",
                                  "2020-02-10T14:42:08.978Z"
                                ],
                                "channels": [
                                  6008,
                                  6015
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "37087b2d-a166-4646-89f2-a673e0ae2d41": {
                                "type": "range",
                                "params": [
                                  "2020-02-10T13:47:08.978Z",
                                  "2020-02-10T14:42:08.978Z"
                                ],
                                "channels": [
                                  6009,
                                  6015
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "5385a3bc-ac61-40bc-b7a7-79db35b3572e": {
                                "type": "range",
                                "params": [
                                  "2020-02-10T13:47:08.978Z",
                                  "2020-02-10T14:42:08.978Z"
                                ],
                                "channels": [
                                  6011,
                                  6015
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "93e51b54-5a23-4051-a376-b9e30328f91e": {
                                "type": "range",
                                "params": [
                                  "2020-02-10T13:47:08.978Z",
                                  "2020-02-10T14:42:08.978Z"
                                ],
                                "channels": [
                                  6014,
                                  6015
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "1d117686-689b-4705-8230-e63e8d14e4d4": {
                                "type": "range",
                                "params": [
                                  "2020-02-14T11:43:17.395Z",
                                  "2020-02-14T12:38:17.395Z"
                                ],
                                "channels": [
                                  5993,
                                  6003
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "9e0ec6b7-207f-4eb1-aada-ce019053d487": {
                                "type": "range",
                                "params": [
                                  "2020-02-14T11:43:17.395Z",
                                  "2020-02-14T12:38:17.395Z"
                                ],
                                "channels": [
                                  5994,
                                  6003
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "97c29916-cc8d-4ab8-bca8-2b15d45b7f80": {
                                "type": "range",
                                "params": [
                                  "2020-02-14T11:43:17.395Z",
                                  "2020-02-14T12:38:17.395Z"
                                ],
                                "channels": [
                                  5995,
                                  6003
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "63ec03a8-0b3f-41d6-a9ae-6273f6b20f8b": {
                                "type": "range",
                                "params": [
                                  "2020-02-14T11:43:17.395Z",
                                  "2020-02-14T12:38:17.395Z"
                                ],
                                "channels": [
                                  5996,
                                  6003
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "b672e0aa-447a-4c6c-93e9-5bc716be5bed": {
                                "type": "range",
                                "params": [
                                  "2020-02-14T11:43:17.395Z",
                                  "2020-02-14T12:38:17.395Z"
                                ],
                                "channels": [
                                  5997,
                                  6003
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "4c4f693c-065d-4e18-b2e5-b5f97234ece8": {
                                "type": "range",
                                "params": [
                                  "2020-02-14T11:43:17.395Z",
                                  "2020-02-14T12:38:17.395Z"
                                ],
                                "channels": [
                                  5999,
                                  6003
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "b655e2c0-3131-4659-8000-cf10e083b249": {
                                "type": "range",
                                "params": [
                                  "2020-02-14T11:43:17.395Z",
                                  "2020-02-14T12:38:17.395Z"
                                ],
                                "channels": [
                                  6002,
                                  6003
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "5ed02230-3fd6-473d-ada2-5a7b09fd8014": {
                                "type": "range",
                                "params": [
                                  "2020-02-14T11:43:17.395Z",
                                  "2020-02-14T12:38:17.395Z"
                                ],
                                "channels": [
                                  5993,
                                  5995,
                                  6005,
                                  6007,
                                  6003,
                                  6015
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "2af7fd06-703f-4c4b-9087-e604e743a0f5": {
                                "type": "range",
                                "params": [
                                  "2020-02-14T11:43:17.395Z",
                                  "2020-02-14T12:38:17.395Z"
                                ],
                                "channels": [
                                  6005,
                                  6015
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "b27df907-617d-437d-b6be-b8740f0b6c30": {
                                "type": "range",
                                "params": [
                                  "2020-02-14T11:43:17.395Z",
                                  "2020-02-14T12:38:17.395Z"
                                ],
                                "channels": [
                                  6006,
                                  6015
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "1a65c546-83f5-47cb-aa7c-6172d5ef0270": {
                                "type": "range",
                                "params": [
                                  "2020-02-14T11:43:17.395Z",
                                  "2020-02-14T12:38:17.395Z"
                                ],
                                "channels": [
                                  6007,
                                  6015
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "da7f7653-9db6-4872-9004-67ddcf51673b": {
                                "type": "range",
                                "params": [
                                  "2020-02-14T11:43:17.395Z",
                                  "2020-02-14T12:38:17.395Z"
                                ],
                                "channels": [
                                  6008,
                                  6015
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "835d6e62-7de8-4e13-aa42-2070b9b9b68f": {
                                "type": "range",
                                "params": [
                                  "2020-02-14T11:43:17.395Z",
                                  "2020-02-14T12:38:17.395Z"
                                ],
                                "channels": [
                                  6009,
                                  6015
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "732ead29-58d8-4d02-bc4f-59387ebc8d2b": {
                                "type": "range",
                                "params": [
                                  "2020-02-14T11:43:17.395Z",
                                  "2020-02-14T12:38:17.395Z"
                                ],
                                "channels": [
                                  6011,
                                  6015
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              },
                              "fda8c3f4-bd53-44ba-9c18-b5968b8a3d45": {
                                "type": "range",
                                "params": [
                                  "2020-02-14T11:43:17.395Z",
                                  "2020-02-14T12:38:17.395Z"
                                ],
                                "channels": [
                                  6014,
                                  6015
                                ],
                                "container": {
                                  "id": 980,
                                  "type": "View"
                                }
                              }
                            }
                          }
                        },
                        "relationships": {
                          "viewable": {
                            "data": {
                              "id": "111",
                              "type": "viewable"
                            }
                          },
                          "measurements": {
                            "data": []
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/views/980"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Wrong Include Error": {
                    "summary": "Wrong Include Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong `include` value(s) given: `spaceships`, `aliens`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "views"
        ]
      },
      "patch": {
        "description": "Update a View.",
        "operationId": "updateView",
        "summary": "Update View",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Id of a View to update."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read",
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/View"
                },
                "examples": {
                  "View": {
                    "summary": "View",
                    "value": {
                      "data": {
                        "id": "995",
                        "type": "view",
                        "attributes": {
                          "layout": {
                            "elements": [
                              {
                                "layouts": {
                                  "lg": {
                                    "i": "f085345a-0e47-4ea4-afcf-b2667505937d",
                                    "moved": "false",
                                    "static": "false"
                                  }
                                },
                                "settings": {
                                  "type": "Button",
                                  "label": "send",
                                  "device": "1",
                                  "command": "send"
                                },
                                "identifier": "f085345a-0e47-4ea4-afcf-b2667505937d"
                              }
                            ]
                          },
                          "viewable_type": "Measurement",
                          "data_scopes": {
                            "scopes": {}
                          }
                        },
                        "relationships": {
                          "viewable": {
                            "data": {
                              "id": "116",
                              "type": "viewable"
                            }
                          },
                          "measurements": {
                            "data": []
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/views/995"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Bad Request Error": {
                    "summary": "Bad Request Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Missing `data` member at document's top level.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Conflict Missing Type Error": {
                    "summary": "Conflict Missing Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "Missing `type` member at document's `data` level.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Conflict Wrong Type Error": {
                    "summary": "Conflict Wrong Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "The given `type` member does not match the resource.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "views"
        ],
        "requestBody": {
          "description": "Update a View.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateView"
              },
              "example": {
                "data": {
                  "type": "view",
                  "attributes": {
                    "layout": {
                      "elements": [
                        {
                          "layouts": {
                            "lg": {
                              "i": "f085345a-0e47-4ea4-afcf-b2667505937d",
                              "moved": "false",
                              "static": "false"
                            }
                          },
                          "settings": {
                            "type": "Button",
                            "label": "send",
                            "device": "1",
                            "command": "send"
                          },
                          "identifier": "f085345a-0e47-4ea4-afcf-b2667505937d"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/views/{id}/reset": {
      "put": {
        "description": "Reset the view to the orginal template.",
        "operationId": "resetView",
        "summary": "Reset View",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "An id of View to reset."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read",
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/View"
                },
                "examples": {
                  "View": {
                    "summary": "View",
                    "value": {
                      "data": {
                        "id": "1013",
                        "type": "view",
                        "attributes": {
                          "layout": {
                            "elements": [
                              {
                                "layouts": {
                                  "lg": {
                                    "h": 3,
                                    "w": 6,
                                    "x": 0,
                                    "y": 0,
                                    "minH": 3,
                                    "minW": 3
                                  },
                                  "md": {
                                    "h": 3,
                                    "w": 5,
                                    "x": 0,
                                    "y": 0,
                                    "minH": 3,
                                    "minW": 3
                                  },
                                  "sm": {
                                    "h": 3,
                                    "w": 4,
                                    "x": 0,
                                    "y": 0,
                                    "minH": 3,
                                    "minW": 3
                                  },
                                  "xs": {
                                    "h": 3,
                                    "w": 6,
                                    "x": 0,
                                    "y": 0,
                                    "minH": 3,
                                    "minW": 3
                                  },
                                  "xxs": {
                                    "h": 3,
                                    "w": 4,
                                    "x": 0,
                                    "y": 0,
                                    "minH": 3,
                                    "minW": 3
                                  }
                                },
                                "settings": {
                                  "type": "Gauge",
                                  "disabled": {
                                    "if": "error|orphaned|unknown|offline|off|loading",
                                    "channel": {
                                      "name": "status"
                                    }
                                  },
                                  "setPoint": {
                                    "setPointType": "channel",
                                    "showSetPoint": true,
                                    "setPointSource": 6258
                                  },
                                  "defaultScope": {
                                    "type": "range",
                                    "params": [
                                      "2020-02-14T11:43:32.851Z",
                                      "2020-02-14T12:38:32.851Z"
                                    ]
                                  },
                                  "inputChannels": [
                                    6257
                                  ]
                                },
                                "identifier": "2a86d83a-57dc-47a9-abaa-f2d670616b2c"
                              },
                              {
                                "layouts": {
                                  "lg": {
                                    "h": 1,
                                    "w": 6,
                                    "x": 0,
                                    "y": 3,
                                    "minH": 1,
                                    "minW": 3
                                  },
                                  "md": {
                                    "h": 1,
                                    "w": 5,
                                    "x": 0,
                                    "y": 3,
                                    "minH": 1,
                                    "minW": 3
                                  },
                                  "sm": {
                                    "h": 1,
                                    "w": 4,
                                    "x": 0,
                                    "y": 3,
                                    "minH": 1,
                                    "minW": 3
                                  },
                                  "xs": {
                                    "h": 1,
                                    "w": 6,
                                    "x": 0,
                                    "y": 3,
                                    "minH": 1,
                                    "minW": 3
                                  },
                                  "xxs": {
                                    "h": 1,
                                    "w": 4,
                                    "x": 0,
                                    "y": 3,
                                    "minH": 1,
                                    "minW": 3
                                  }
                                },
                                "settings": {
                                  "type": "NumberInput",
                                  "label": "set",
                                  "disabled": {
                                    "if": "error|orphaned|unknown|offline|off|loading",
                                    "channel": {
                                      "name": "status"
                                    }
                                  },
                                  "defaultScope": {
                                    "type": "range",
                                    "params": [
                                      "2020-02-14T11:43:32.851Z",
                                      "2020-02-14T12:38:32.851Z"
                                    ]
                                  },
                                  "inputChannels": [
                                    6258
                                  ]
                                },
                                "identifier": "ea951550-85b7-401b-bd0b-d2036b8c28ff"
                              },
                              {
                                "layouts": {
                                  "lg": {
                                    "h": 3,
                                    "w": 6,
                                    "x": 6,
                                    "y": 0,
                                    "minH": 3,
                                    "minW": 3
                                  },
                                  "md": {
                                    "h": 3,
                                    "w": 5,
                                    "x": 5,
                                    "y": 0,
                                    "minH": 3,
                                    "minW": 3
                                  },
                                  "sm": {
                                    "h": 3,
                                    "w": 4,
                                    "x": 4,
                                    "y": 0,
                                    "minH": 3,
                                    "minW": 3
                                  },
                                  "xs": {
                                    "h": 3,
                                    "w": 6,
                                    "x": 0,
                                    "y": 4,
                                    "minH": 3,
                                    "minW": 3
                                  },
                                  "xxs": {
                                    "h": 3,
                                    "w": 4,
                                    "x": 0,
                                    "y": 4,
                                    "minH": 3,
                                    "minW": 3
                                  }
                                },
                                "settings": {
                                  "type": "Gauge",
                                  "disabled": {
                                    "if": "error|orphaned|unknown|offline|off|loading",
                                    "channel": {
                                      "name": "status"
                                    }
                                  },
                                  "setPoint": {
                                    "setPointType": "channel",
                                    "showSetPoint": true,
                                    "setPointSource": 6260
                                  },
                                  "defaultScope": {
                                    "type": "range",
                                    "params": [
                                      "2020-02-14T11:43:32.851Z",
                                      "2020-02-14T12:38:32.851Z"
                                    ]
                                  },
                                  "inputChannels": [
                                    6259
                                  ]
                                },
                                "identifier": "95a5939d-b660-4d7b-ac05-8087ea2e02fb"
                              },
                              {
                                "layouts": {
                                  "lg": {
                                    "h": 1,
                                    "w": 6,
                                    "x": 6,
                                    "y": 3,
                                    "minH": 1,
                                    "minW": 3
                                  },
                                  "md": {
                                    "h": 1,
                                    "w": 5,
                                    "x": 5,
                                    "y": 3,
                                    "minH": 1,
                                    "minW": 3
                                  },
                                  "sm": {
                                    "h": 1,
                                    "w": 4,
                                    "x": 4,
                                    "y": 3,
                                    "minH": 1,
                                    "minW": 3
                                  },
                                  "xs": {
                                    "h": 1,
                                    "w": 6,
                                    "x": 0,
                                    "y": 7,
                                    "minH": 1,
                                    "minW": 3
                                  },
                                  "xxs": {
                                    "h": 1,
                                    "w": 4,
                                    "x": 0,
                                    "y": 7,
                                    "minH": 1,
                                    "minW": 3
                                  }
                                },
                                "settings": {
                                  "type": "NumberInput",
                                  "label": "set",
                                  "disabled": {
                                    "if": "error|orphaned|unknown|offline|off|loading",
                                    "channel": {
                                      "name": "status"
                                    }
                                  },
                                  "defaultScope": {
                                    "type": "range",
                                    "params": [
                                      "2020-02-14T11:43:32.851Z",
                                      "2020-02-14T12:38:32.851Z"
                                    ]
                                  },
                                  "inputChannels": [
                                    6260
                                  ]
                                },
                                "identifier": "f922c18e-b915-42b1-8eeb-50de7da6e130"
                              },
                              {
                                "layouts": {
                                  "lg": {
                                    "h": 1,
                                    "w": 12,
                                    "x": 0,
                                    "y": 5,
                                    "minH": 1,
                                    "minW": 2
                                  },
                                  "md": {
                                    "h": 1,
                                    "w": 10,
                                    "x": 0,
                                    "y": 5,
                                    "minH": 1,
                                    "minW": 2
                                  },
                                  "sm": {
                                    "h": 1,
                                    "w": 8,
                                    "x": 0,
                                    "y": 5,
                                    "minH": 1,
                                    "minW": 2
                                  },
                                  "xs": {
                                    "h": 1,
                                    "w": 6,
                                    "x": 0,
                                    "y": 10,
                                    "minH": 1,
                                    "minW": 2
                                  },
                                  "xxs": {
                                    "h": 1,
                                    "w": 4,
                                    "x": 0,
                                    "y": 8,
                                    "minH": 1,
                                    "minW": 2
                                  }
                                },
                                "settings": {
                                  "type": "Switch",
                                  "disabled": {
                                    "if": "error|orphaned|unknown|offline|off|loading",
                                    "channel": {
                                      "name": "status"
                                    }
                                  },
                                  "defaultScope": {
                                    "type": "range",
                                    "params": [
                                      "2020-02-14T11:43:32.851Z",
                                      "2020-02-14T12:38:32.851Z"
                                    ]
                                  },
                                  "inputChannels": [
                                    6261
                                  ]
                                },
                                "identifier": "25daa749-aceb-43d5-85dc-3b33ee9c4a3f"
                              },
                              {
                                "layouts": {
                                  "lg": {
                                    "h": 1,
                                    "w": 6,
                                    "x": 6,
                                    "y": 4,
                                    "minH": 1,
                                    "minW": 2
                                  },
                                  "md": {
                                    "h": 1,
                                    "w": 5,
                                    "x": 5,
                                    "y": 4,
                                    "minH": 1,
                                    "minW": 2
                                  },
                                  "sm": {
                                    "h": 1,
                                    "w": 4,
                                    "x": 4,
                                    "y": 4,
                                    "minH": 1,
                                    "minW": 2
                                  },
                                  "xs": {
                                    "h": 1,
                                    "w": 6,
                                    "x": 0,
                                    "y": 9,
                                    "minH": 1,
                                    "minW": 2
                                  },
                                  "xxs": {
                                    "h": 1,
                                    "w": 4,
                                    "x": 0,
                                    "y": 9,
                                    "minH": 1,
                                    "minW": 2
                                  }
                                },
                                "settings": {
                                  "type": "Switch",
                                  "disabled": {
                                    "if": "error|orphaned|unknown|offline|off|loading",
                                    "channel": {
                                      "name": "status"
                                    }
                                  },
                                  "defaultScope": {
                                    "type": "range",
                                    "params": [
                                      "2020-02-14T11:43:32.851Z",
                                      "2020-02-14T12:38:32.851Z"
                                    ]
                                  },
                                  "inputChannels": [
                                    6263
                                  ]
                                },
                                "identifier": "dd47a349-c0d1-4ec7-ab16-e01c0c3ae448"
                              },
                              {
                                "layouts": {
                                  "lg": {
                                    "h": 1,
                                    "w": 6,
                                    "x": 0,
                                    "y": 4,
                                    "minH": 1,
                                    "minW": 2
                                  },
                                  "md": {
                                    "h": 1,
                                    "w": 5,
                                    "x": 0,
                                    "y": 4,
                                    "minH": 1,
                                    "minW": 2
                                  },
                                  "sm": {
                                    "h": 1,
                                    "w": 4,
                                    "x": 0,
                                    "y": 4,
                                    "minH": 1,
                                    "minW": 2
                                  },
                                  "xs": {
                                    "h": 1,
                                    "w": 6,
                                    "x": 0,
                                    "y": 8,
                                    "minH": 1,
                                    "minW": 2
                                  },
                                  "xxs": {
                                    "h": 1,
                                    "w": 4,
                                    "x": 0,
                                    "y": 10,
                                    "minH": 1,
                                    "minW": 2
                                  }
                                },
                                "settings": {
                                  "type": "Switch",
                                  "disabled": {
                                    "if": "error|orphaned|unknown|offline|off|loading",
                                    "channel": {
                                      "name": "status"
                                    }
                                  },
                                  "defaultScope": {
                                    "type": "range",
                                    "params": [
                                      "2020-02-14T11:43:32.851Z",
                                      "2020-02-14T12:38:32.851Z"
                                    ]
                                  },
                                  "inputChannels": [
                                    6266
                                  ]
                                },
                                "identifier": "1a80d548-d236-4868-b6ea-f84513cc953c"
                              },
                              {
                                "layouts": {
                                  "lg": {
                                    "h": 6,
                                    "w": 12,
                                    "x": 0,
                                    "y": 6,
                                    "minH": 3,
                                    "minW": 4
                                  },
                                  "md": {
                                    "h": 6,
                                    "w": 10,
                                    "x": 0,
                                    "y": 6,
                                    "minH": 3,
                                    "minW": 4
                                  },
                                  "sm": {
                                    "h": 6,
                                    "w": 8,
                                    "x": 0,
                                    "y": 6,
                                    "minH": 3,
                                    "minW": 4
                                  },
                                  "xs": {
                                    "h": 6,
                                    "w": 6,
                                    "x": 0,
                                    "y": 11,
                                    "minH": 3,
                                    "minW": 4
                                  },
                                  "xxs": {
                                    "h": 5,
                                    "w": 4,
                                    "x": 0,
                                    "y": 11,
                                    "minH": 3,
                                    "minW": 4
                                  }
                                },
                                "settings": {
                                  "type": "LineChart",
                                  "disabled": {
                                    "if": "error|orphaned|unknown|offline|off|loading",
                                    "channel": {
                                      "name": "status"
                                    }
                                  },
                                  "defaultScope": {
                                    "type": "range",
                                    "params": [
                                      "2020-02-14T11:43:32.851Z",
                                      "2020-02-14T12:38:32.851Z"
                                    ]
                                  },
                                  "inputChannels": [
                                    6257,
                                    6259,
                                    6269,
                                    6271
                                  ]
                                },
                                "identifier": "5e2e06aa-fda1-4729-83ed-cce0cbf486e8"
                              },
                              {
                                "layouts": {
                                  "lg": {
                                    "h": 3,
                                    "w": 6,
                                    "x": 0,
                                    "y": 0,
                                    "minH": 3,
                                    "minW": 3
                                  },
                                  "md": {
                                    "h": 3,
                                    "w": 5,
                                    "x": 0,
                                    "y": 0,
                                    "minH": 3,
                                    "minW": 3
                                  },
                                  "sm": {
                                    "h": 3,
                                    "w": 4,
                                    "x": 0,
                                    "y": 0,
                                    "minH": 3,
                                    "minW": 3
                                  },
                                  "xs": {
                                    "h": 3,
                                    "w": 6,
                                    "x": 0,
                                    "y": 0,
                                    "minH": 3,
                                    "minW": 3
                                  },
                                  "xxs": {
                                    "h": 3,
                                    "w": 4,
                                    "x": 0,
                                    "y": 0,
                                    "minH": 3,
                                    "minW": 3
                                  }
                                },
                                "settings": {
                                  "type": "Gauge",
                                  "disabled": {
                                    "if": "error|orphaned|unknown|offline|off|loading",
                                    "channel": {
                                      "name": "status"
                                    }
                                  },
                                  "setPoint": {
                                    "setPointType": "channel",
                                    "showSetPoint": true,
                                    "setPointSource": 6270
                                  },
                                  "defaultScope": {
                                    "type": "range",
                                    "params": [
                                      "2020-02-14T11:43:32.851Z",
                                      "2020-02-14T12:38:32.851Z"
                                    ]
                                  },
                                  "inputChannels": [
                                    6269
                                  ]
                                },
                                "identifier": "51b6ffc4-666c-4e6a-9372-7fbc85457002"
                              },
                              {
                                "layouts": {
                                  "lg": {
                                    "h": 1,
                                    "w": 6,
                                    "x": 0,
                                    "y": 3,
                                    "minH": 1,
                                    "minW": 3
                                  },
                                  "md": {
                                    "h": 1,
                                    "w": 5,
                                    "x": 0,
                                    "y": 3,
                                    "minH": 1,
                                    "minW": 3
                                  },
                                  "sm": {
                                    "h": 1,
                                    "w": 4,
                                    "x": 0,
                                    "y": 3,
                                    "minH": 1,
                                    "minW": 3
                                  },
                                  "xs": {
                                    "h": 1,
                                    "w": 6,
                                    "x": 0,
                                    "y": 3,
                                    "minH": 1,
                                    "minW": 3
                                  },
                                  "xxs": {
                                    "h": 1,
                                    "w": 4,
                                    "x": 0,
                                    "y": 3,
                                    "minH": 1,
                                    "minW": 3
                                  }
                                },
                                "settings": {
                                  "type": "NumberInput",
                                  "label": "set",
                                  "disabled": {
                                    "if": "error|orphaned|unknown|offline|off|loading",
                                    "channel": {
                                      "name": "status"
                                    }
                                  },
                                  "defaultScope": {
                                    "type": "range",
                                    "params": [
                                      "2020-02-14T11:43:32.851Z",
                                      "2020-02-14T12:38:32.851Z"
                                    ]
                                  },
                                  "inputChannels": [
                                    6270
                                  ]
                                },
                                "identifier": "87d1ae3a-8300-40e5-b9ed-1197cee5cf65"
                              },
                              {
                                "layouts": {
                                  "lg": {
                                    "h": 3,
                                    "w": 6,
                                    "x": 6,
                                    "y": 0,
                                    "minH": 3,
                                    "minW": 3
                                  },
                                  "md": {
                                    "h": 3,
                                    "w": 5,
                                    "x": 5,
                                    "y": 0,
                                    "minH": 3,
                                    "minW": 3
                                  },
                                  "sm": {
                                    "h": 3,
                                    "w": 4,
                                    "x": 4,
                                    "y": 0,
                                    "minH": 3,
                                    "minW": 3
                                  },
                                  "xs": {
                                    "h": 3,
                                    "w": 6,
                                    "x": 0,
                                    "y": 4,
                                    "minH": 3,
                                    "minW": 3
                                  },
                                  "xxs": {
                                    "h": 3,
                                    "w": 4,
                                    "x": 0,
                                    "y": 4,
                                    "minH": 3,
                                    "minW": 3
                                  }
                                },
                                "settings": {
                                  "type": "Gauge",
                                  "disabled": {
                                    "if": "error|orphaned|unknown|offline|off|loading",
                                    "channel": {
                                      "name": "status"
                                    }
                                  },
                                  "setPoint": {
                                    "setPointType": "channel",
                                    "showSetPoint": true,
                                    "setPointSource": 6272
                                  },
                                  "defaultScope": {
                                    "type": "range",
                                    "params": [
                                      "2020-02-14T11:43:32.851Z",
                                      "2020-02-14T12:38:32.851Z"
                                    ]
                                  },
                                  "inputChannels": [
                                    6271
                                  ]
                                },
                                "identifier": "d4127df5-c1ff-4f82-b8b0-94bcaed89774"
                              },
                              {
                                "layouts": {
                                  "lg": {
                                    "h": 1,
                                    "w": 6,
                                    "x": 6,
                                    "y": 3,
                                    "minH": 1,
                                    "minW": 3
                                  },
                                  "md": {
                                    "h": 1,
                                    "w": 5,
                                    "x": 5,
                                    "y": 3,
                                    "minH": 1,
                                    "minW": 3
                                  },
                                  "sm": {
                                    "h": 1,
                                    "w": 4,
                                    "x": 4,
                                    "y": 3,
                                    "minH": 1,
                                    "minW": 3
                                  },
                                  "xs": {
                                    "h": 1,
                                    "w": 6,
                                    "x": 0,
                                    "y": 7,
                                    "minH": 1,
                                    "minW": 3
                                  },
                                  "xxs": {
                                    "h": 1,
                                    "w": 4,
                                    "x": 0,
                                    "y": 7,
                                    "minH": 1,
                                    "minW": 3
                                  }
                                },
                                "settings": {
                                  "type": "NumberInput",
                                  "label": "set",
                                  "disabled": {
                                    "if": "error|orphaned|unknown|offline|off|loading",
                                    "channel": {
                                      "name": "status"
                                    }
                                  },
                                  "defaultScope": {
                                    "type": "range",
                                    "params": [
                                      "2020-02-14T11:43:32.851Z",
                                      "2020-02-14T12:38:32.851Z"
                                    ]
                                  },
                                  "inputChannels": [
                                    6272
                                  ]
                                },
                                "identifier": "59d879c7-72bb-4bbc-9dd7-8160e9cba527"
                              },
                              {
                                "layouts": {
                                  "lg": {
                                    "h": 1,
                                    "w": 12,
                                    "x": 0,
                                    "y": 5,
                                    "minH": 1,
                                    "minW": 2
                                  },
                                  "md": {
                                    "h": 1,
                                    "w": 10,
                                    "x": 0,
                                    "y": 5,
                                    "minH": 1,
                                    "minW": 2
                                  },
                                  "sm": {
                                    "h": 1,
                                    "w": 8,
                                    "x": 0,
                                    "y": 5,
                                    "minH": 1,
                                    "minW": 2
                                  },
                                  "xs": {
                                    "h": 1,
                                    "w": 6,
                                    "x": 0,
                                    "y": 10,
                                    "minH": 1,
                                    "minW": 2
                                  },
                                  "xxs": {
                                    "h": 1,
                                    "w": 4,
                                    "x": 0,
                                    "y": 8,
                                    "minH": 1,
                                    "minW": 2
                                  }
                                },
                                "settings": {
                                  "type": "Switch",
                                  "disabled": {
                                    "if": "error|orphaned|unknown|offline|off|loading",
                                    "channel": {
                                      "name": "status"
                                    }
                                  },
                                  "defaultScope": {
                                    "type": "range",
                                    "params": [
                                      "2020-02-14T11:43:32.851Z",
                                      "2020-02-14T12:38:32.851Z"
                                    ]
                                  },
                                  "inputChannels": [
                                    6273
                                  ]
                                },
                                "identifier": "9225883c-132e-42bc-b985-556cc2529522"
                              },
                              {
                                "layouts": {
                                  "lg": {
                                    "h": 1,
                                    "w": 6,
                                    "x": 6,
                                    "y": 4,
                                    "minH": 1,
                                    "minW": 2
                                  },
                                  "md": {
                                    "h": 1,
                                    "w": 5,
                                    "x": 5,
                                    "y": 4,
                                    "minH": 1,
                                    "minW": 2
                                  },
                                  "sm": {
                                    "h": 1,
                                    "w": 4,
                                    "x": 4,
                                    "y": 4,
                                    "minH": 1,
                                    "minW": 2
                                  },
                                  "xs": {
                                    "h": 1,
                                    "w": 6,
                                    "x": 0,
                                    "y": 9,
                                    "minH": 1,
                                    "minW": 2
                                  },
                                  "xxs": {
                                    "h": 1,
                                    "w": 4,
                                    "x": 0,
                                    "y": 9,
                                    "minH": 1,
                                    "minW": 2
                                  }
                                },
                                "settings": {
                                  "type": "Switch",
                                  "disabled": {
                                    "if": "error|orphaned|unknown|offline|off|loading",
                                    "channel": {
                                      "name": "status"
                                    }
                                  },
                                  "defaultScope": {
                                    "type": "range",
                                    "params": [
                                      "2020-02-14T11:43:32.851Z",
                                      "2020-02-14T12:38:32.851Z"
                                    ]
                                  },
                                  "inputChannels": [
                                    6275
                                  ]
                                },
                                "identifier": "d7faeb90-0008-49a3-8e36-846579ad63a2"
                              },
                              {
                                "layouts": {
                                  "lg": {
                                    "h": 1,
                                    "w": 6,
                                    "x": 0,
                                    "y": 4,
                                    "minH": 1,
                                    "minW": 2
                                  },
                                  "md": {
                                    "h": 1,
                                    "w": 5,
                                    "x": 0,
                                    "y": 4,
                                    "minH": 1,
                                    "minW": 2
                                  },
                                  "sm": {
                                    "h": 1,
                                    "w": 4,
                                    "x": 0,
                                    "y": 4,
                                    "minH": 1,
                                    "minW": 2
                                  },
                                  "xs": {
                                    "h": 1,
                                    "w": 6,
                                    "x": 0,
                                    "y": 8,
                                    "minH": 1,
                                    "minW": 2
                                  },
                                  "xxs": {
                                    "h": 1,
                                    "w": 4,
                                    "x": 0,
                                    "y": 10,
                                    "minH": 1,
                                    "minW": 2
                                  }
                                },
                                "settings": {
                                  "type": "Switch",
                                  "disabled": {
                                    "if": "error|orphaned|unknown|offline|off|loading",
                                    "channel": {
                                      "name": "status"
                                    }
                                  },
                                  "defaultScope": {
                                    "type": "range",
                                    "params": [
                                      "2020-02-14T11:43:32.851Z",
                                      "2020-02-14T12:38:32.851Z"
                                    ]
                                  },
                                  "inputChannels": [
                                    6278
                                  ]
                                },
                                "identifier": "2178e146-80d7-4f9c-95fd-aaa5a22b72e0"
                              }
                            ]
                          },
                          "viewable_type": "Measurement",
                          "data_scopes": {
                            "scopes": {
                              "d92bf658-03bc-4a4c-b6a6-4a57ed44fd4d": {
                                "type": "range",
                                "params": [
                                  "2019-11-28T17:14:54.363Z",
                                  "2019-11-28T18:09:54.363Z"
                                ],
                                "channels": [
                                  6204,
                                  6214
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "169ed9b5-1399-4c23-ac2a-0d9f25197d2a": {
                                "type": "range",
                                "params": [
                                  "2019-11-28T17:14:54.363Z",
                                  "2019-11-28T18:09:54.363Z"
                                ],
                                "channels": [
                                  6205,
                                  6214
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "b36172d6-6977-414c-99e5-11eb5e5d7486": {
                                "type": "range",
                                "params": [
                                  "2019-11-28T17:14:54.363Z",
                                  "2019-11-28T18:09:54.363Z"
                                ],
                                "channels": [
                                  6206,
                                  6214
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "80e82232-9414-4b75-acb7-8fb68be5ffdd": {
                                "type": "range",
                                "params": [
                                  "2019-11-28T17:14:54.363Z",
                                  "2019-11-28T18:09:54.363Z"
                                ],
                                "channels": [
                                  6207,
                                  6214
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "7cb7cbde-0a96-4a19-a46f-8d0800b76d7a": {
                                "type": "range",
                                "params": [
                                  "2019-11-28T17:14:54.363Z",
                                  "2019-11-28T18:09:54.363Z"
                                ],
                                "channels": [
                                  6208,
                                  6214
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "56e0d05a-1f9c-42ae-91ac-0ad840e355a5": {
                                "type": "range",
                                "params": [
                                  "2019-11-28T17:14:54.363Z",
                                  "2019-11-28T18:09:54.363Z"
                                ],
                                "channels": [
                                  6210,
                                  6214
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "16fd7d49-1b99-4d11-9df6-f9b0fe739594": {
                                "type": "range",
                                "params": [
                                  "2019-11-28T17:14:54.363Z",
                                  "2019-11-28T18:09:54.363Z"
                                ],
                                "channels": [
                                  6213,
                                  6214
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "c9296248-6567-4abe-a52d-3d3b73c4f176": {
                                "type": "range",
                                "params": [
                                  "2019-11-28T17:14:54.363Z",
                                  "2019-11-28T18:09:54.363Z"
                                ],
                                "channels": [
                                  6204,
                                  6206,
                                  6216,
                                  6218,
                                  6214,
                                  6226
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "5a8e8856-8387-4643-ae11-1dde92cc9526": {
                                "type": "range",
                                "params": [
                                  "2019-11-28T17:14:54.363Z",
                                  "2019-11-28T18:09:54.363Z"
                                ],
                                "channels": [
                                  6216,
                                  6226
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "78b85762-f2ea-4231-9ca5-f0db4e814a2a": {
                                "type": "range",
                                "params": [
                                  "2019-11-28T17:14:54.363Z",
                                  "2019-11-28T18:09:54.363Z"
                                ],
                                "channels": [
                                  6217,
                                  6226
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "4cadbb2f-df2d-4cb7-aaa2-1fce71e67036": {
                                "type": "range",
                                "params": [
                                  "2019-11-28T17:14:54.363Z",
                                  "2019-11-28T18:09:54.363Z"
                                ],
                                "channels": [
                                  6218,
                                  6226
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "f4116ec6-acf8-4dee-b067-b914d7b0ae37": {
                                "type": "range",
                                "params": [
                                  "2019-11-28T17:14:54.363Z",
                                  "2019-11-28T18:09:54.363Z"
                                ],
                                "channels": [
                                  6219,
                                  6226
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "05b4e3cd-bb21-49d9-a75c-4fbdb1f43ade": {
                                "type": "range",
                                "params": [
                                  "2019-11-28T17:14:54.363Z",
                                  "2019-11-28T18:09:54.363Z"
                                ],
                                "channels": [
                                  6220,
                                  6226
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "dbcd31a4-ad8b-4d0a-bf99-2ffb75988235": {
                                "type": "range",
                                "params": [
                                  "2019-11-28T17:14:54.363Z",
                                  "2019-11-28T18:09:54.363Z"
                                ],
                                "channels": [
                                  6222,
                                  6226
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "1b3f2086-ee35-4d0f-8e01-c74603fd1c17": {
                                "type": "range",
                                "params": [
                                  "2019-11-28T17:14:54.363Z",
                                  "2019-11-28T18:09:54.363Z"
                                ],
                                "channels": [
                                  6225,
                                  6226
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "26302b5a-0c39-4cc5-8ed9-856ee08fd28c": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T12:25:10.017Z",
                                  "2020-02-03T13:20:10.017Z"
                                ],
                                "channels": [
                                  6257,
                                  6267
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "e1ff9836-ae18-4cc5-981c-8848a620fd73": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T12:25:10.017Z",
                                  "2020-02-03T13:20:10.017Z"
                                ],
                                "channels": [
                                  6258,
                                  6267
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "148699b1-faf9-433d-af95-c487ec94ef94": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T12:25:10.017Z",
                                  "2020-02-03T13:20:10.017Z"
                                ],
                                "channels": [
                                  6259,
                                  6267
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "2b255d9c-3fb4-405c-9495-a99c586fceeb": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T12:25:10.017Z",
                                  "2020-02-03T13:20:10.017Z"
                                ],
                                "channels": [
                                  6260,
                                  6267
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "fcf17143-5454-4c0d-9079-88bca8135943": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T12:25:10.017Z",
                                  "2020-02-03T13:20:10.017Z"
                                ],
                                "channels": [
                                  6261,
                                  6267
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "7ffe9aea-d31f-43be-8d47-89d4b2abdba7": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T12:25:10.017Z",
                                  "2020-02-03T13:20:10.017Z"
                                ],
                                "channels": [
                                  6263,
                                  6267
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "fb4443de-fc52-416f-865e-21cb484c28f4": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T12:25:10.017Z",
                                  "2020-02-03T13:20:10.017Z"
                                ],
                                "channels": [
                                  6266,
                                  6267
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "8e69e08c-0daf-4407-9f60-a4b670d4de70": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T12:25:10.017Z",
                                  "2020-02-03T13:20:10.017Z"
                                ],
                                "channels": [
                                  6257,
                                  6259,
                                  6269,
                                  6271,
                                  6267,
                                  6279
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "45e035e6-357c-49d4-8123-c25c534d5f47": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T12:25:10.017Z",
                                  "2020-02-03T13:20:10.017Z"
                                ],
                                "channels": [
                                  6269,
                                  6279
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "fe2a9530-e841-4991-8ccd-cdddee810b45": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T12:25:10.017Z",
                                  "2020-02-03T13:20:10.017Z"
                                ],
                                "channels": [
                                  6270,
                                  6279
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "f58cdc98-7e5d-416a-894b-d5b1840d3ebf": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T12:25:10.017Z",
                                  "2020-02-03T13:20:10.017Z"
                                ],
                                "channels": [
                                  6271,
                                  6279
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "015f5f2e-75ca-4fe9-b631-03617ce03838": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T12:25:10.017Z",
                                  "2020-02-03T13:20:10.017Z"
                                ],
                                "channels": [
                                  6272,
                                  6279
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "55d629b6-15d9-460d-98b2-a34ee4a58f83": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T12:25:10.017Z",
                                  "2020-02-03T13:20:10.017Z"
                                ],
                                "channels": [
                                  6273,
                                  6279
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "3e99c77c-727e-4ade-9c1e-8dcad3d60e3e": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T12:25:10.017Z",
                                  "2020-02-03T13:20:10.017Z"
                                ],
                                "channels": [
                                  6275,
                                  6279
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "50d438de-de5c-4eaa-9a87-841037ceca04": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T12:25:10.017Z",
                                  "2020-02-03T13:20:10.017Z"
                                ],
                                "channels": [
                                  6278,
                                  6279
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "86a6f6dd-92d1-48e7-9d3f-425cb4fe420e": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T12:43:13.958Z",
                                  "2020-02-03T13:38:13.958Z"
                                ],
                                "channels": [
                                  6257,
                                  6267
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "9d533dab-2080-4bed-9ac3-caaae3137f8f": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T12:43:13.958Z",
                                  "2020-02-03T13:38:13.958Z"
                                ],
                                "channels": [
                                  6258,
                                  6267
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "71f8c5ae-46e4-447f-8f12-30dcfe09c0a9": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T12:43:13.958Z",
                                  "2020-02-03T13:38:13.958Z"
                                ],
                                "channels": [
                                  6259,
                                  6267
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "09e33580-dcd2-40bf-816f-bf65f0532707": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T12:43:13.958Z",
                                  "2020-02-03T13:38:13.958Z"
                                ],
                                "channels": [
                                  6260,
                                  6267
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "66d2d668-3238-42ed-89de-5073bc1f937c": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T12:43:13.958Z",
                                  "2020-02-03T13:38:13.958Z"
                                ],
                                "channels": [
                                  6261,
                                  6267
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "1aef1751-58bc-4ad1-915e-a4b0337c533e": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T12:43:13.958Z",
                                  "2020-02-03T13:38:13.958Z"
                                ],
                                "channels": [
                                  6263,
                                  6267
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "16c657f7-8445-4cb9-b3d1-ffebc2b1b6b0": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T12:43:13.958Z",
                                  "2020-02-03T13:38:13.958Z"
                                ],
                                "channels": [
                                  6266,
                                  6267
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "491bcebb-c1f3-475e-9581-853843ee98d8": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T12:43:13.958Z",
                                  "2020-02-03T13:38:13.958Z"
                                ],
                                "channels": [
                                  6257,
                                  6259,
                                  6269,
                                  6271,
                                  6267,
                                  6279
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "a41853e7-115e-4d24-9be4-5384532939ba": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T12:43:13.958Z",
                                  "2020-02-03T13:38:13.958Z"
                                ],
                                "channels": [
                                  6269,
                                  6279
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "6f65b19b-d77b-4595-b470-6dd0fec06857": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T12:43:13.958Z",
                                  "2020-02-03T13:38:13.958Z"
                                ],
                                "channels": [
                                  6270,
                                  6279
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "b8c21cb7-abf6-4c68-9005-0825f681bcc6": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T12:43:13.958Z",
                                  "2020-02-03T13:38:13.958Z"
                                ],
                                "channels": [
                                  6271,
                                  6279
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "7a116cc4-6b0b-4e60-afe7-31da259ee6a9": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T12:43:13.958Z",
                                  "2020-02-03T13:38:13.958Z"
                                ],
                                "channels": [
                                  6272,
                                  6279
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "75325a7f-4ddc-4bfa-9eb5-4dd07495459e": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T12:43:13.958Z",
                                  "2020-02-03T13:38:13.958Z"
                                ],
                                "channels": [
                                  6273,
                                  6279
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "3752222d-08f4-48b5-b535-4e5325b2cc66": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T12:43:13.958Z",
                                  "2020-02-03T13:38:13.958Z"
                                ],
                                "channels": [
                                  6275,
                                  6279
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "0e2f89f4-929e-4365-961e-2179bf470511": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T12:43:13.958Z",
                                  "2020-02-03T13:38:13.958Z"
                                ],
                                "channels": [
                                  6278,
                                  6279
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "c17ead26-3309-4855-8ece-c078328470f9": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T13:26:37.616Z",
                                  "2020-02-03T14:21:37.616Z"
                                ],
                                "channels": [
                                  6257,
                                  6267
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "faeecd61-12bb-49fd-8578-02539271646c": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T13:26:37.616Z",
                                  "2020-02-03T14:21:37.616Z"
                                ],
                                "channels": [
                                  6258,
                                  6267
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "f639de72-177a-435c-a1b4-a22eaddcd369": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T13:26:37.616Z",
                                  "2020-02-03T14:21:37.616Z"
                                ],
                                "channels": [
                                  6259,
                                  6267
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "0c3ffcb1-1983-4c62-8b56-50366b1e9f09": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T13:26:37.616Z",
                                  "2020-02-03T14:21:37.616Z"
                                ],
                                "channels": [
                                  6260,
                                  6267
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "5011f9da-3695-48f5-8842-55690735867b": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T13:26:37.616Z",
                                  "2020-02-03T14:21:37.616Z"
                                ],
                                "channels": [
                                  6261,
                                  6267
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "12012bb1-879f-487a-9936-a6a1b20634cd": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T13:26:37.616Z",
                                  "2020-02-03T14:21:37.616Z"
                                ],
                                "channels": [
                                  6263,
                                  6267
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "1a318e57-19d0-437d-819f-ea93b7e19395": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T13:26:37.616Z",
                                  "2020-02-03T14:21:37.616Z"
                                ],
                                "channels": [
                                  6266,
                                  6267
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "732fbbff-fe55-4182-a80e-78c8c330107d": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T13:26:37.616Z",
                                  "2020-02-03T14:21:37.616Z"
                                ],
                                "channels": [
                                  6257,
                                  6259,
                                  6269,
                                  6271,
                                  6267,
                                  6279
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "f9810d87-a7d2-4998-8d61-e2ae40476eb4": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T13:26:37.616Z",
                                  "2020-02-03T14:21:37.616Z"
                                ],
                                "channels": [
                                  6269,
                                  6279
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "ddcf6529-e231-48b2-ac9b-39f2c5eb9558": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T13:26:37.616Z",
                                  "2020-02-03T14:21:37.616Z"
                                ],
                                "channels": [
                                  6270,
                                  6279
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "1b039855-215d-4fbc-9857-02311d1d4014": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T13:26:37.616Z",
                                  "2020-02-03T14:21:37.616Z"
                                ],
                                "channels": [
                                  6271,
                                  6279
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "081c7ccb-13ee-4613-bf47-d3adda3f605d": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T13:26:37.616Z",
                                  "2020-02-03T14:21:37.616Z"
                                ],
                                "channels": [
                                  6272,
                                  6279
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "441f5a1d-f663-4568-832d-d5601867e5c0": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T13:26:37.616Z",
                                  "2020-02-03T14:21:37.616Z"
                                ],
                                "channels": [
                                  6273,
                                  6279
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "aedb16bd-84fb-4b89-8ef8-2845d483c135": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T13:26:37.616Z",
                                  "2020-02-03T14:21:37.616Z"
                                ],
                                "channels": [
                                  6275,
                                  6279
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "0e27f433-9958-4d50-a4f7-111aa63eb75d": {
                                "type": "range",
                                "params": [
                                  "2020-02-03T13:26:37.616Z",
                                  "2020-02-03T14:21:37.616Z"
                                ],
                                "channels": [
                                  6278,
                                  6279
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "3112826b-a017-488a-8f89-08176b7acc80": {
                                "type": "range",
                                "params": [
                                  "2020-02-04T12:55:58.577Z",
                                  "2020-02-04T13:50:58.577Z"
                                ],
                                "channels": [
                                  6257,
                                  6267
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "c36261ea-d616-40e2-96f4-361c4578e267": {
                                "type": "range",
                                "params": [
                                  "2020-02-04T12:55:58.577Z",
                                  "2020-02-04T13:50:58.577Z"
                                ],
                                "channels": [
                                  6258,
                                  6267
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "357fff1c-95a1-4b54-bdf5-601fe6e23614": {
                                "type": "range",
                                "params": [
                                  "2020-02-04T12:55:58.577Z",
                                  "2020-02-04T13:50:58.577Z"
                                ],
                                "channels": [
                                  6259,
                                  6267
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "ceb2aaa6-c3b2-4032-aa7f-83fd0095cbf2": {
                                "type": "range",
                                "params": [
                                  "2020-02-04T12:55:58.577Z",
                                  "2020-02-04T13:50:58.577Z"
                                ],
                                "channels": [
                                  6260,
                                  6267
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "2a3a9b12-0db4-4885-9519-dc8bf7266f96": {
                                "type": "range",
                                "params": [
                                  "2020-02-04T12:55:58.577Z",
                                  "2020-02-04T13:50:58.577Z"
                                ],
                                "channels": [
                                  6261,
                                  6267
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "fa66f8ce-18ed-4196-a9d5-987fea448c06": {
                                "type": "range",
                                "params": [
                                  "2020-02-04T12:55:58.577Z",
                                  "2020-02-04T13:50:58.577Z"
                                ],
                                "channels": [
                                  6263,
                                  6267
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "0d07fd2f-9882-432d-839d-2c9ee6cb3e08": {
                                "type": "range",
                                "params": [
                                  "2020-02-04T12:55:58.577Z",
                                  "2020-02-04T13:50:58.577Z"
                                ],
                                "channels": [
                                  6266,
                                  6267
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "76ad680e-75f6-4d0d-b5e2-134455d652db": {
                                "type": "range",
                                "params": [
                                  "2020-02-04T12:55:58.577Z",
                                  "2020-02-04T13:50:58.577Z"
                                ],
                                "channels": [
                                  6257,
                                  6259,
                                  6269,
                                  6271,
                                  6267,
                                  6279
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "0ab8d004-8366-47d5-9d27-5c01cf0168e9": {
                                "type": "range",
                                "params": [
                                  "2020-02-04T12:55:58.577Z",
                                  "2020-02-04T13:50:58.577Z"
                                ],
                                "channels": [
                                  6269,
                                  6279
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "e843f057-a7a4-4f49-aa99-86d7f7ee0905": {
                                "type": "range",
                                "params": [
                                  "2020-02-04T12:55:58.577Z",
                                  "2020-02-04T13:50:58.577Z"
                                ],
                                "channels": [
                                  6270,
                                  6279
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "a4997e05-1091-4691-9361-3a8c7139c07d": {
                                "type": "range",
                                "params": [
                                  "2020-02-04T12:55:58.577Z",
                                  "2020-02-04T13:50:58.577Z"
                                ],
                                "channels": [
                                  6271,
                                  6279
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "b2f6f95b-1836-495d-a4c3-de7ee6438a51": {
                                "type": "range",
                                "params": [
                                  "2020-02-04T12:55:58.577Z",
                                  "2020-02-04T13:50:58.577Z"
                                ],
                                "channels": [
                                  6272,
                                  6279
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "40e49ce2-e00c-4b7d-b1eb-d8b33faffc3d": {
                                "type": "range",
                                "params": [
                                  "2020-02-04T12:55:58.577Z",
                                  "2020-02-04T13:50:58.577Z"
                                ],
                                "channels": [
                                  6273,
                                  6279
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "5b38bec4-796d-44d4-859d-48946ed009b0": {
                                "type": "range",
                                "params": [
                                  "2020-02-04T12:55:58.577Z",
                                  "2020-02-04T13:50:58.577Z"
                                ],
                                "channels": [
                                  6275,
                                  6279
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "63fd2f69-5248-4488-a1fd-18c1f139de5d": {
                                "type": "range",
                                "params": [
                                  "2020-02-04T12:55:58.577Z",
                                  "2020-02-04T13:50:58.577Z"
                                ],
                                "channels": [
                                  6278,
                                  6279
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "165937e9-2707-4487-b0cd-b17de9a61529": {
                                "type": "range",
                                "params": [
                                  "2020-02-06T13:51:29.972Z",
                                  "2020-02-06T14:46:29.972Z"
                                ],
                                "channels": [
                                  6257,
                                  6267
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "d001166c-7de2-4c46-9d99-632abea83c9e": {
                                "type": "range",
                                "params": [
                                  "2020-02-06T13:51:29.972Z",
                                  "2020-02-06T14:46:29.972Z"
                                ],
                                "channels": [
                                  6258,
                                  6267
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "01ca75ae-95d3-47c6-aac3-ef287651455b": {
                                "type": "range",
                                "params": [
                                  "2020-02-06T13:51:29.972Z",
                                  "2020-02-06T14:46:29.972Z"
                                ],
                                "channels": [
                                  6259,
                                  6267
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "b74b2519-0ba3-4951-85f5-60e31c8c2d0a": {
                                "type": "range",
                                "params": [
                                  "2020-02-06T13:51:29.972Z",
                                  "2020-02-06T14:46:29.972Z"
                                ],
                                "channels": [
                                  6260,
                                  6267
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "1f97480b-137f-461d-acc5-057f3580b0f4": {
                                "type": "range",
                                "params": [
                                  "2020-02-06T13:51:29.972Z",
                                  "2020-02-06T14:46:29.972Z"
                                ],
                                "channels": [
                                  6261,
                                  6267
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "b9ab8432-b1ad-47f8-b154-ba146f992dc6": {
                                "type": "range",
                                "params": [
                                  "2020-02-06T13:51:29.972Z",
                                  "2020-02-06T14:46:29.972Z"
                                ],
                                "channels": [
                                  6263,
                                  6267
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "2d3a138e-656c-4e3b-8df9-d1cbf7d8dc2a": {
                                "type": "range",
                                "params": [
                                  "2020-02-06T13:51:29.972Z",
                                  "2020-02-06T14:46:29.972Z"
                                ],
                                "channels": [
                                  6266,
                                  6267
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "10f0b7d0-8d23-4e1b-b4f8-121b77378c4c": {
                                "type": "range",
                                "params": [
                                  "2020-02-06T13:51:29.972Z",
                                  "2020-02-06T14:46:29.972Z"
                                ],
                                "channels": [
                                  6257,
                                  6259,
                                  6269,
                                  6271,
                                  6267,
                                  6279
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "f7fdbea6-bc8c-4564-93be-c33ef6c0be7a": {
                                "type": "range",
                                "params": [
                                  "2020-02-06T13:51:29.972Z",
                                  "2020-02-06T14:46:29.972Z"
                                ],
                                "channels": [
                                  6269,
                                  6279
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "6879bfa6-4e8d-4c26-8a35-1dec70f41505": {
                                "type": "range",
                                "params": [
                                  "2020-02-06T13:51:29.972Z",
                                  "2020-02-06T14:46:29.972Z"
                                ],
                                "channels": [
                                  6270,
                                  6279
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "da46509c-f850-42e4-834d-7600ac9af23c": {
                                "type": "range",
                                "params": [
                                  "2020-02-06T13:51:29.972Z",
                                  "2020-02-06T14:46:29.972Z"
                                ],
                                "channels": [
                                  6271,
                                  6279
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "0f56acc3-1bb9-4796-ae88-8a27d6dc36db": {
                                "type": "range",
                                "params": [
                                  "2020-02-06T13:51:29.972Z",
                                  "2020-02-06T14:46:29.972Z"
                                ],
                                "channels": [
                                  6272,
                                  6279
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "2834ed39-c4c2-402d-bf18-74f4e690667c": {
                                "type": "range",
                                "params": [
                                  "2020-02-06T13:51:29.972Z",
                                  "2020-02-06T14:46:29.972Z"
                                ],
                                "channels": [
                                  6273,
                                  6279
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "9884e239-eaa1-4fea-a23c-81c2027d4376": {
                                "type": "range",
                                "params": [
                                  "2020-02-06T13:51:29.972Z",
                                  "2020-02-06T14:46:29.972Z"
                                ],
                                "channels": [
                                  6275,
                                  6279
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "592af5b8-c0eb-4835-80d5-7e2a3380ea63": {
                                "type": "range",
                                "params": [
                                  "2020-02-06T13:51:29.972Z",
                                  "2020-02-06T14:46:29.972Z"
                                ],
                                "channels": [
                                  6278,
                                  6279
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "fddd1860-9da5-4aa6-a381-107494e75d95": {
                                "type": "range",
                                "params": [
                                  "2020-02-10T13:47:21.778Z",
                                  "2020-02-10T14:42:21.778Z"
                                ],
                                "channels": [
                                  6257,
                                  6267
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "a54ea668-2ce0-4719-97fa-c562412f0b55": {
                                "type": "range",
                                "params": [
                                  "2020-02-10T13:47:21.778Z",
                                  "2020-02-10T14:42:21.778Z"
                                ],
                                "channels": [
                                  6258,
                                  6267
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "60854cf7-52ac-445f-b400-8000e1d6899c": {
                                "type": "range",
                                "params": [
                                  "2020-02-10T13:47:21.778Z",
                                  "2020-02-10T14:42:21.778Z"
                                ],
                                "channels": [
                                  6259,
                                  6267
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "f118e164-f0be-455a-a6d8-314ad11cb07a": {
                                "type": "range",
                                "params": [
                                  "2020-02-10T13:47:21.778Z",
                                  "2020-02-10T14:42:21.778Z"
                                ],
                                "channels": [
                                  6260,
                                  6267
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "22381be9-a5c8-4772-88c8-1f37c9c84777": {
                                "type": "range",
                                "params": [
                                  "2020-02-10T13:47:21.778Z",
                                  "2020-02-10T14:42:21.778Z"
                                ],
                                "channels": [
                                  6261,
                                  6267
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "d5ebcdc8-a5c4-441e-84f7-d801c7d5a1f6": {
                                "type": "range",
                                "params": [
                                  "2020-02-10T13:47:21.778Z",
                                  "2020-02-10T14:42:21.778Z"
                                ],
                                "channels": [
                                  6263,
                                  6267
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "c265353e-bdda-42ee-82e6-2cf38bc3be7b": {
                                "type": "range",
                                "params": [
                                  "2020-02-10T13:47:21.778Z",
                                  "2020-02-10T14:42:21.778Z"
                                ],
                                "channels": [
                                  6266,
                                  6267
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "25569a09-a548-4ba3-b73d-3c8407ebbd92": {
                                "type": "range",
                                "params": [
                                  "2020-02-10T13:47:21.778Z",
                                  "2020-02-10T14:42:21.778Z"
                                ],
                                "channels": [
                                  6257,
                                  6259,
                                  6269,
                                  6271,
                                  6267,
                                  6279
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "5e59f688-c072-49f8-96d1-190bb470465f": {
                                "type": "range",
                                "params": [
                                  "2020-02-10T13:47:21.778Z",
                                  "2020-02-10T14:42:21.778Z"
                                ],
                                "channels": [
                                  6269,
                                  6279
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "564193a1-84ee-4e81-aebe-c155b26df459": {
                                "type": "range",
                                "params": [
                                  "2020-02-10T13:47:21.778Z",
                                  "2020-02-10T14:42:21.778Z"
                                ],
                                "channels": [
                                  6270,
                                  6279
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "0ca044b1-1bfa-4aa3-89e8-485e3cd5dfad": {
                                "type": "range",
                                "params": [
                                  "2020-02-10T13:47:21.778Z",
                                  "2020-02-10T14:42:21.778Z"
                                ],
                                "channels": [
                                  6271,
                                  6279
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "47c5b3ff-830f-4485-abe2-5ffa676f9066": {
                                "type": "range",
                                "params": [
                                  "2020-02-10T13:47:21.778Z",
                                  "2020-02-10T14:42:21.778Z"
                                ],
                                "channels": [
                                  6272,
                                  6279
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "9991ec55-aca4-4de5-9210-c1eec2e94945": {
                                "type": "range",
                                "params": [
                                  "2020-02-10T13:47:21.778Z",
                                  "2020-02-10T14:42:21.778Z"
                                ],
                                "channels": [
                                  6273,
                                  6279
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "cd5c1f17-fdb9-46bd-be1f-6e8e94e9d922": {
                                "type": "range",
                                "params": [
                                  "2020-02-10T13:47:21.778Z",
                                  "2020-02-10T14:42:21.778Z"
                                ],
                                "channels": [
                                  6275,
                                  6279
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "33c8cde5-47c6-4953-9696-6f30c1d9e61e": {
                                "type": "range",
                                "params": [
                                  "2020-02-10T13:47:21.778Z",
                                  "2020-02-10T14:42:21.778Z"
                                ],
                                "channels": [
                                  6278,
                                  6279
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "2a86d83a-57dc-47a9-abaa-f2d670616b2c": {
                                "type": "range",
                                "params": [
                                  "2020-02-14T11:43:32.851Z",
                                  "2020-02-14T12:38:32.851Z"
                                ],
                                "channels": [
                                  6257,
                                  6267
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "ea951550-85b7-401b-bd0b-d2036b8c28ff": {
                                "type": "range",
                                "params": [
                                  "2020-02-14T11:43:32.851Z",
                                  "2020-02-14T12:38:32.851Z"
                                ],
                                "channels": [
                                  6258,
                                  6267
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "95a5939d-b660-4d7b-ac05-8087ea2e02fb": {
                                "type": "range",
                                "params": [
                                  "2020-02-14T11:43:32.851Z",
                                  "2020-02-14T12:38:32.851Z"
                                ],
                                "channels": [
                                  6259,
                                  6267
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "f922c18e-b915-42b1-8eeb-50de7da6e130": {
                                "type": "range",
                                "params": [
                                  "2020-02-14T11:43:32.851Z",
                                  "2020-02-14T12:38:32.851Z"
                                ],
                                "channels": [
                                  6260,
                                  6267
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "25daa749-aceb-43d5-85dc-3b33ee9c4a3f": {
                                "type": "range",
                                "params": [
                                  "2020-02-14T11:43:32.851Z",
                                  "2020-02-14T12:38:32.851Z"
                                ],
                                "channels": [
                                  6261,
                                  6267
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "dd47a349-c0d1-4ec7-ab16-e01c0c3ae448": {
                                "type": "range",
                                "params": [
                                  "2020-02-14T11:43:32.851Z",
                                  "2020-02-14T12:38:32.851Z"
                                ],
                                "channels": [
                                  6263,
                                  6267
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "1a80d548-d236-4868-b6ea-f84513cc953c": {
                                "type": "range",
                                "params": [
                                  "2020-02-14T11:43:32.851Z",
                                  "2020-02-14T12:38:32.851Z"
                                ],
                                "channels": [
                                  6266,
                                  6267
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "5e2e06aa-fda1-4729-83ed-cce0cbf486e8": {
                                "type": "range",
                                "params": [
                                  "2020-02-14T11:43:32.851Z",
                                  "2020-02-14T12:38:32.851Z"
                                ],
                                "channels": [
                                  6257,
                                  6259,
                                  6269,
                                  6271,
                                  6267,
                                  6279
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "51b6ffc4-666c-4e6a-9372-7fbc85457002": {
                                "type": "range",
                                "params": [
                                  "2020-02-14T11:43:32.851Z",
                                  "2020-02-14T12:38:32.851Z"
                                ],
                                "channels": [
                                  6269,
                                  6279
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "87d1ae3a-8300-40e5-b9ed-1197cee5cf65": {
                                "type": "range",
                                "params": [
                                  "2020-02-14T11:43:32.851Z",
                                  "2020-02-14T12:38:32.851Z"
                                ],
                                "channels": [
                                  6270,
                                  6279
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "d4127df5-c1ff-4f82-b8b0-94bcaed89774": {
                                "type": "range",
                                "params": [
                                  "2020-02-14T11:43:32.851Z",
                                  "2020-02-14T12:38:32.851Z"
                                ],
                                "channels": [
                                  6271,
                                  6279
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "59d879c7-72bb-4bbc-9dd7-8160e9cba527": {
                                "type": "range",
                                "params": [
                                  "2020-02-14T11:43:32.851Z",
                                  "2020-02-14T12:38:32.851Z"
                                ],
                                "channels": [
                                  6272,
                                  6279
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "9225883c-132e-42bc-b985-556cc2529522": {
                                "type": "range",
                                "params": [
                                  "2020-02-14T11:43:32.851Z",
                                  "2020-02-14T12:38:32.851Z"
                                ],
                                "channels": [
                                  6273,
                                  6279
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "d7faeb90-0008-49a3-8e36-846579ad63a2": {
                                "type": "range",
                                "params": [
                                  "2020-02-14T11:43:32.851Z",
                                  "2020-02-14T12:38:32.851Z"
                                ],
                                "channels": [
                                  6275,
                                  6279
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              },
                              "2178e146-80d7-4f9c-95fd-aaa5a22b72e0": {
                                "type": "range",
                                "params": [
                                  "2020-02-14T11:43:32.851Z",
                                  "2020-02-14T12:38:32.851Z"
                                ],
                                "channels": [
                                  6278,
                                  6279
                                ],
                                "container": {
                                  "id": 1013,
                                  "type": "View"
                                }
                              }
                            }
                          }
                        },
                        "relationships": {
                          "viewable": {
                            "data": {
                              "id": "122",
                              "type": "viewable"
                            }
                          },
                          "measurements": {
                            "data": []
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/views/1013"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "views"
        ]
      }
    },
    "/webhook_subscriptions": {
      "get": {
        "description": "Get a list of existing WebhookSubscriptions.",
        "operationId": "getWebhookSubscriptions",
        "summary": "Get Webhook Subscriptions",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "List of WebhookSubscription attributes to be included in the response."
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "List of related resource to include. Allowed values are: `value`, `value`."
          },
          {
            "name": "filter",
            "description": "Resources and/or attributes to filter by.",
            "in": "query",
            "schema": {
              "type": "object",
              "properties": {
                "webhook_subscriptions": {
                  "type": "object",
                  "additionalProperties": false
                },
                "user": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "username": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "email": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "organisation": {
                  "type": "object",
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookSubscriptions"
                },
                "examples": {
                  "List of WebhookSubscriptions": {
                    "summary": "List of WebhookSubscriptions",
                    "value": {
                      "data": [
                        {
                          "id": "1",
                          "type": "webhook_subscription",
                          "attributes": {
                            "active": true,
                            "url": "http://connellychristiansen.biz/katherine.wilderman",
                            "triggers": [
                              "some.random.trigger"
                            ],
                            "created_at": "2020-02-14T12:43:45.143Z",
                            "updated_at": "2020-02-14T12:43:45.143Z",
                            "headers": {}
                          },
                          "relationships": {
                            "organisation": {
                              "data": {
                                "id": "874",
                                "type": "organisation"
                              }
                            },
                            "user": {
                              "data": {
                                "id": "3388",
                                "type": "user"
                              }
                            }
                          },
                          "links": {
                            "self": "http://connellychristiansen.biz/katherine.wilderman"
                          }
                        },
                        {
                          "id": "2",
                          "type": "webhook_subscription",
                          "attributes": {
                            "active": true,
                            "url": "http://lakin.net/lura",
                            "triggers": [
                              "some.random.trigger"
                            ],
                            "created_at": "2020-02-14T12:43:45.148Z",
                            "updated_at": "2020-02-14T12:43:45.148Z",
                            "headers": {}
                          },
                          "relationships": {
                            "organisation": {
                              "data": {
                                "id": "874",
                                "type": "organisation"
                              }
                            },
                            "user": {
                              "data": {
                                "id": "3388",
                                "type": "user"
                              }
                            }
                          },
                          "links": {
                            "self": "http://lakin.net/lura"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Wrong Filter Error": {
                    "summary": "Wrong Filter Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong webhook_subscriptions attributes given for filtering: `hair`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Wrong Fields Set Error": {
                    "summary": "Wrong Fields Set Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong `fields` value(s) for webhook_subscriptions given: `invalid`, `invalid2`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "webhook_subscriptions"
        ]
      },
      "post": {
        "description": "Create a WebhookSubscription.",
        "operationId": "createWebhookSubscription",
        "summary": "Create Webhook Subscription",
        "security": [
          {
            "oauth2": [
              "read",
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookSubscription"
                },
                "examples": {
                  "WebhookSubscription": {
                    "summary": "WebhookSubscription",
                    "value": {
                      "data": {
                        "id": "47",
                        "type": "webhook_subscription",
                        "attributes": {
                          "active": true,
                          "url": "http://websubsc.cubuslab.com",
                          "triggers": [
                            "6532"
                          ],
                          "created_at": "2020-02-14T12:43:47.762Z",
                          "updated_at": "2020-02-14T12:43:47.762Z",
                          "headers": {
                            "a": "b"
                          }
                        },
                        "relationships": {
                          "organisation": {
                            "data": {
                              "id": "888",
                              "type": "organisation"
                            }
                          },
                          "user": {
                            "data": {
                              "id": "3417",
                              "type": "user"
                            }
                          }
                        },
                        "links": {
                          "self": "http://websubsc.cubuslab.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Bad Request Error": {
                    "summary": "Bad Request Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Missing `data` member at document's top level.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Missed Required Attributes Error": {
                    "summary": "Missed Required Attributes Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Missed required attribute(s) for webhook_subscription: `url`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthorized Error because of a missed scope": {
                    "summary": "Unauthorized Error because of a missed scope",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "Insufficient OAuth2 scope to perform this operation. Required: Update",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  },
                  "ID parameter given": {
                    "summary": "ID parameter given",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "ID parameter is not allowed for `create` requests.",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Conflict Missing Type Error": {
                    "summary": "Conflict Missing Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "Missing `type` member at document's `data` level.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Conflict Wrong Type Error": {
                    "summary": "Conflict Wrong Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "The given `type` member does not match the resource.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "webhook_subscriptions"
        ],
        "requestBody": {
          "description": "Create a WebhookSubscription.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWebhookSubscription"
              },
              "example": {
                "data": {
                  "type": "webhook_subscription",
                  "attributes": {
                    "headers": {
                      "a": "b"
                    },
                    "url": "http://websubsc.cubuslab.com",
                    "triggers": [
                      "6532"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/webhook_subscriptions/{id}": {
      "get": {
        "description": "Get a single WebhookSubscription by its id.",
        "operationId": "getWebhookSubscription",
        "summary": "Get Webhook Subscription",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "An id of WebhookSubscription to get."
          },
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "List of WebhookSubscription attributes to be included in the response."
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "List of related resource to include. Allowed values are: `value`, `value`."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookSubscription"
                },
                "examples": {
                  "WebhookSubscription": {
                    "summary": "WebhookSubscription",
                    "value": {
                      "data": {
                        "id": "20",
                        "type": "webhook_subscription",
                        "attributes": {
                          "active": true,
                          "url": "http://zboncak.org/wendell",
                          "triggers": [
                            "some.random.trigger"
                          ],
                          "created_at": "2020-02-14T12:43:46.190Z",
                          "updated_at": "2020-02-14T12:43:46.190Z",
                          "headers": {}
                        },
                        "relationships": {
                          "organisation": {
                            "data": {
                              "id": "880",
                              "type": "organisation"
                            }
                          },
                          "user": {
                            "data": {
                              "id": "3401",
                              "type": "user"
                            }
                          }
                        },
                        "links": {
                          "self": "http://zboncak.org/wendell"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Wrong Include Error": {
                    "summary": "Wrong Include Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong `include` value(s) given: `spaceships`, `aliens`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Wrong Fields Set Error": {
                    "summary": "Wrong Fields Set Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong `fields` value(s) for webhook_subscriptions given: `invalid`, `invalid`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "webhook_subscriptions"
        ]
      },
      "patch": {
        "description": "Update a WebhookSubscription.",
        "operationId": "updateWebhookSubscription",
        "summary": "Update Webhook Subscription",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Id of a WebhookSubscription to update."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read",
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookSubscription"
                },
                "examples": {
                  "WebhookSubscription": {
                    "summary": "WebhookSubscription",
                    "value": {
                      "data": {
                        "id": "69",
                        "type": "webhook_subscription",
                        "attributes": {
                          "active": true,
                          "url": "http://huel.biz/annabell",
                          "triggers": [
                            "some.random.trigger"
                          ],
                          "created_at": "2020-02-14T12:43:48.951Z",
                          "updated_at": "2020-02-14T12:43:49.028Z",
                          "headers": {
                            "a": "b"
                          }
                        },
                        "relationships": {
                          "organisation": {
                            "data": {
                              "id": "896",
                              "type": "organisation"
                            }
                          },
                          "user": {
                            "data": {
                              "id": "3434",
                              "type": "user"
                            }
                          }
                        },
                        "links": {
                          "self": "http://huel.biz/annabell"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Bad Request Error": {
                    "summary": "Bad Request Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Missing `data` member at document's top level.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthorized Error because of a missed scope": {
                    "summary": "Unauthorized Error because of a missed scope",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "Insufficient OAuth2 scope to perform this operation. Required: Update",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Conflict Missing Type Error": {
                    "summary": "Conflict Missing Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "Missing `type` member at document's `data` level.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Conflict Wrong Type Error": {
                    "summary": "Conflict Wrong Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "The given `type` member does not match the resource.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "webhook_subscriptions"
        ],
        "requestBody": {
          "description": "Update a WebhookSubscription.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWebhookSubscription"
              },
              "example": {
                "data": {
                  "type": "webhook_subscription",
                  "attributes": {
                    "headers": {
                      "a": "b"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Delete a WebhookSubscription.",
        "operationId": "deleteWebhookSubscription",
        "summary": "Delete Webhook Subscription",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Id of a WebhookSubscription to delete."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read",
              "delete"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Success"
                },
                "examples": {
                  "Ok": {
                    "summary": "Ok",
                    "value": {
                      "meta": {
                        "result": "Success"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthorized Error": {
                    "summary": "Unauthorized Error",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "You do not have the required permissions to access this resource. Note: OAuth 2 scopes do not overrule application level permissions.",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Unauthorized Error because of a missed scope": {
                    "summary": "Unauthorized Error because of a missed scope",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "Insufficient OAuth2 scope to perform this operation. Required: Delete",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "webhook_subscriptions"
        ]
      }
    },
    "/workflow_fields": {
      "get": {
        "description": "Get a list of existing WorkflowFields.",
        "operationId": "getWorkflowFields",
        "summary": "Get Workflow Fields",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "List of WorkflowField attributes to be included in the response."
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "List of related resource to include. Allowed values are: `value`, `value`."
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "Pagination"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "Sorting"
          },
          {
            "name": "filter",
            "description": "Resources and/or attributes to filter by.",
            "in": "query",
            "schema": {
              "type": "object",
              "properties": {
                "workflow_fields": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "workflow_run_id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "field_scope_id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "field_scope_type": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "title": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "identifier": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "pointer": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "flow_pointer": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "read_only": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "prepare": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "output": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "type": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "created_at": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "updated_at": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "deleted_at": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "field_scope": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "workflow_template_id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "workflow_run": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "workflow_template_id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowFields"
                },
                "examples": {
                  "List of WorkflowFields": {
                    "summary": "List of WorkflowFields",
                    "value": {
                      "data": [
                        {
                          "id": "1",
                          "type": "workflow_field",
                          "attributes": {
                            "title": null,
                            "identifier": "someString",
                            "pointer": "/fields/someString",
                            "read_only": false,
                            "prepare": false,
                            "output": true,
                            "schema": {
                              "type": "string",
                              "maxLength": 100,
                              "defaultValue": "Test"
                            },
                            "hidden": false,
                            "field_scope_type": "WorkflowRun",
                            "updated_at": "2020-02-14T12:43:51.566Z",
                            "created_at": "2020-02-14T12:43:51.566Z",
                            "deleted_at": null,
                            "value_type": "basic",
                            "value": "Test"
                          },
                          "relationships": {
                            "organisation": {
                              "data": {
                                "id": "915",
                                "type": "organisation"
                              }
                            },
                            "workflow_run": {
                              "data": {
                                "id": "1",
                                "type": "workflow_run"
                              }
                            },
                            "field_scope": {
                              "data": {
                                "id": "1",
                                "type": "workflow_run"
                              }
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/workflow_fields/1"
                          }
                        },
                        {
                          "id": "2",
                          "type": "workflow_field",
                          "attributes": {
                            "title": null,
                            "identifier": "balance",
                            "pointer": "/fields/balance",
                            "read_only": false,
                            "prepare": true,
                            "output": true,
                            "schema": {
                              "type": "relationship",
                              "prepare": true,
                              "resourceType": "devices"
                            },
                            "hidden": false,
                            "field_scope_type": "WorkflowRun",
                            "updated_at": "2020-02-14T12:43:51.583Z",
                            "created_at": "2020-02-14T12:43:51.583Z",
                            "deleted_at": null,
                            "value_type": "relationship",
                            "value": null
                          },
                          "relationships": {
                            "organisation": {
                              "data": {
                                "id": "915",
                                "type": "organisation"
                              }
                            },
                            "workflow_run": {
                              "data": {
                                "id": "1",
                                "type": "workflow_run"
                              }
                            },
                            "field_scope": {
                              "data": {
                                "id": "1",
                                "type": "workflow_run"
                              }
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/workflow_fields/2"
                          }
                        },
                        {
                          "id": "3",
                          "type": "workflow_field",
                          "attributes": {
                            "title": null,
                            "identifier": "instrumentInstructions",
                            "pointer": "/fields/instrumentInstructions",
                            "read_only": true,
                            "prepare": true,
                            "output": true,
                            "schema": {
                              "type": "file",
                              "output": false,
                              "prepare": true,
                              "readOnly": true,
                              "mediaType": "application/my-instruments-config-file-type"
                            },
                            "hidden": false,
                            "field_scope_type": "WorkflowRun",
                            "updated_at": "2020-02-14T12:43:51.604Z",
                            "created_at": "2020-02-14T12:43:51.604Z",
                            "deleted_at": null,
                            "value_type": "file",
                            "value": {
                              "name": "__value______",
                              "type": ""
                            }
                          },
                          "relationships": {
                            "organisation": {
                              "data": {
                                "id": "915",
                                "type": "organisation"
                              }
                            },
                            "workflow_run": {
                              "data": {
                                "id": "1",
                                "type": "workflow_run"
                              }
                            },
                            "field_scope": {
                              "data": {
                                "id": "1",
                                "type": "workflow_run"
                              }
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/workflow_fields/3"
                          }
                        },
                        {
                          "id": "4",
                          "type": "workflow_field",
                          "attributes": {
                            "title": null,
                            "identifier": "actualWeight",
                            "pointer": "/fields/actualWeight",
                            "read_only": false,
                            "prepare": false,
                            "output": true,
                            "schema": {
                              "type": "quantity",
                              "unit": "mg"
                            },
                            "hidden": false,
                            "field_scope_type": "WorkflowRun",
                            "updated_at": "2020-02-14T12:43:51.621Z",
                            "created_at": "2020-02-14T12:43:51.621Z",
                            "deleted_at": null,
                            "value_type": "quantity",
                            "value": null
                          },
                          "relationships": {
                            "organisation": {
                              "data": {
                                "id": "915",
                                "type": "organisation"
                              }
                            },
                            "workflow_run": {
                              "data": {
                                "id": "1",
                                "type": "workflow_run"
                              }
                            },
                            "field_scope": {
                              "data": {
                                "id": "1",
                                "type": "workflow_run"
                              }
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/workflow_fields/4"
                          }
                        },
                        {
                          "id": "5",
                          "type": "workflow_field",
                          "attributes": {
                            "title": null,
                            "identifier": "actualVolume",
                            "pointer": "/fields/actualVolume",
                            "read_only": false,
                            "prepare": false,
                            "output": true,
                            "schema": {
                              "type": "quantity",
                              "unit": "ml"
                            },
                            "hidden": false,
                            "field_scope_type": "WorkflowRun",
                            "updated_at": "2020-02-14T12:43:51.626Z",
                            "created_at": "2020-02-14T12:43:51.626Z",
                            "deleted_at": null,
                            "value_type": "quantity",
                            "value": null
                          },
                          "relationships": {
                            "organisation": {
                              "data": {
                                "id": "915",
                                "type": "organisation"
                              }
                            },
                            "workflow_run": {
                              "data": {
                                "id": "1",
                                "type": "workflow_run"
                              }
                            },
                            "field_scope": {
                              "data": {
                                "id": "1",
                                "type": "workflow_run"
                              }
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/workflow_fields/5"
                          }
                        },
                        {
                          "id": "6",
                          "type": "workflow_field",
                          "attributes": {
                            "title": null,
                            "identifier": "density",
                            "pointer": "/fields/density",
                            "read_only": true,
                            "prepare": false,
                            "output": true,
                            "schema": {
                              "type": "script",
                              "result": {
                                "type": "quantity",
                                "unit": "mg"
                              },
                              "script": "actualWeight / actualVolume",
                              "readOnly": true
                            },
                            "hidden": false,
                            "field_scope_type": "WorkflowRun",
                            "updated_at": "2020-02-14T12:43:51.643Z",
                            "created_at": "2020-02-14T12:43:51.643Z",
                            "deleted_at": null,
                            "value_type": "script",
                            "value": null
                          },
                          "relationships": {
                            "organisation": {
                              "data": {
                                "id": "915",
                                "type": "organisation"
                              }
                            },
                            "workflow_run": {
                              "data": {
                                "id": "1",
                                "type": "workflow_run"
                              }
                            },
                            "field_scope": {
                              "data": {
                                "id": "1",
                                "type": "workflow_run"
                              }
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/workflow_fields/6"
                          }
                        },
                        {
                          "id": "7",
                          "type": "workflow_field",
                          "attributes": {
                            "title": "Internal State",
                            "identifier": "INTERNAL_STATE",
                            "pointer": "/fields/INTERNAL_STATE",
                            "read_only": false,
                            "prepare": false,
                            "output": true,
                            "schema": {
                              "type": "object",
                              "title": "Internal State",
                              "hidden": true,
                              "description": "Used by the workflow engine to store state data. Use with caution, as manipulating this can easily break things!",
                              "defaultValue": {}
                            },
                            "hidden": true,
                            "field_scope_type": "WorkflowRun",
                            "updated_at": "2020-02-14T12:43:51.648Z",
                            "created_at": "2020-02-14T12:43:51.648Z",
                            "deleted_at": null,
                            "value_type": "basic",
                            "value": {}
                          },
                          "relationships": {
                            "organisation": {
                              "data": {
                                "id": "915",
                                "type": "organisation"
                              }
                            },
                            "workflow_run": {
                              "data": {
                                "id": "1",
                                "type": "workflow_run"
                              }
                            },
                            "field_scope": {
                              "data": {
                                "id": "1",
                                "type": "workflow_run"
                              }
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/workflow_fields/7"
                          }
                        },
                        {
                          "id": "8",
                          "type": "workflow_field",
                          "attributes": {
                            "title": null,
                            "identifier": "12345",
                            "pointer": "someString",
                            "read_only": true,
                            "prepare": false,
                            "output": true,
                            "schema": "{}",
                            "hidden": null,
                            "field_scope_type": "WorkflowRun",
                            "updated_at": "2020-02-14T12:43:51.666Z",
                            "created_at": "2020-02-14T12:43:51.666Z",
                            "deleted_at": null,
                            "value_type": "basic",
                            "value": "value"
                          },
                          "relationships": {
                            "organisation": {
                              "data": {
                                "id": "915",
                                "type": "organisation"
                              }
                            },
                            "workflow_run": {
                              "data": {
                                "id": "1",
                                "type": "workflow_run"
                              }
                            },
                            "field_scope": {
                              "data": {
                                "id": "1",
                                "type": "workflow_run"
                              }
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/workflow_fields/8"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Wrong Filter Error": {
                    "summary": "Wrong Filter Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong workflow_fields attributes given for filtering: `hair`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Wrong Fields Set Error": {
                    "summary": "Wrong Fields Set Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong `fields` value(s) for workflow_fields given: `invalid`, `DROP TABLE USERS`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "workflow_fields"
        ]
      }
    },
    "/workflow_fields/{id}": {
      "patch": {
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWorkflowField"
              }
            }
          }
        },
        "description": "Update a WorkflowField.",
        "operationId": "updateWorkflowField",
        "summary": "Update Workflow Field",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Id of a WorkflowField to update."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read",
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowField"
                },
                "examples": {
                  "WorkflowField": {
                    "summary": "WorkflowField",
                    "value": {
                      "data": {
                        "id": "120",
                        "type": "workflow_field",
                        "attributes": {
                          "title": null,
                          "identifier": "12345",
                          "pointer": "someString",
                          "read_only": true,
                          "prepare": false,
                          "output": true,
                          "schema": "{}",
                          "hidden": null,
                          "field_scope_type": "WorkflowRun",
                          "updated_at": "2020-02-14T12:43:55.937Z",
                          "created_at": "2020-02-14T12:43:55.901Z",
                          "deleted_at": null,
                          "value_type": "basic",
                          "value": "25"
                        },
                        "relationships": {
                          "organisation": {
                            "data": {
                              "id": "929",
                              "type": "organisation"
                            }
                          },
                          "workflow_run": {
                            "data": {
                              "id": "15",
                              "type": "workflow_run"
                            }
                          },
                          "field_scope": {
                            "data": {
                              "id": "15",
                              "type": "workflow_run"
                            }
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/workflow_fields/120"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Bad Request Error": {
                    "summary": "Bad Request Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Missing `data` member at document's top level.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthorized Error because of a missed scope": {
                    "summary": "Unauthorized Error because of a missed scope",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "Insufficient OAuth2 scope to perform this operation. Required: Update",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Conflict Missing Type Error": {
                    "summary": "Conflict Missing Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "Missing `type` member at document's `data` level.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Conflict Wrong Type Error": {
                    "summary": "Conflict Wrong Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "The given `type` member does not match the resource.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "workflow_fields"
        ]
      },
      "get": {
        "description": "Get a single WorkflowField by its id.",
        "operationId": "getWorkflowField",
        "summary": "Get Workflow Field",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "An id of WorkflowField to get."
          },
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "List of WorkflowField attributes to be included in the response."
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "List of related resource to include. Allowed values are: `field_scope`, `organisation`."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowField"
                },
                "examples": {
                  "WorkflowField": {
                    "summary": "WorkflowField",
                    "value": {
                      "data": {
                        "id": "56",
                        "type": "workflow_field",
                        "attributes": {
                          "title": null,
                          "identifier": "12345",
                          "pointer": "someString",
                          "read_only": true,
                          "prepare": false,
                          "output": true,
                          "schema": "{}",
                          "hidden": null,
                          "field_scope_type": "WorkflowRun",
                          "updated_at": "2020-02-14T12:43:54.009Z",
                          "created_at": "2020-02-14T12:43:54.009Z",
                          "deleted_at": null,
                          "value_type": "basic",
                          "value": "value"
                        },
                        "relationships": {
                          "organisation": {
                            "data": {
                              "id": "921",
                              "type": "organisation"
                            }
                          },
                          "workflow_run": {
                            "data": {
                              "id": "7",
                              "type": "workflow_run"
                            }
                          },
                          "field_scope": {
                            "data": {
                              "id": "7",
                              "type": "workflow_run"
                            }
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/workflow_fields/56"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Wrong Include Error": {
                    "summary": "Wrong Include Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong `include` value(s) given: `spaceships`, `aliens`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Wrong Fields Set Error": {
                    "summary": "Wrong Fields Set Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong `fields` value(s) for workflow_fields given: `invalid`, `DROP TABLE USERS`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "workflow_fields"
        ]
      }
    },
    "/workflow_runs": {
      "get": {
        "description": "Get a list of existing WorkflowRuns.",
        "operationId": "getWorkflowRuns",
        "summary": "Get Workflow Runs",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "List of WorkflowRun attributes to be included in response."
          },
          {
            "name": "filter",
            "description": "Resources and/or attributes to filter by.",
            "in": "query",
            "schema": {
              "type": "object",
              "properties": {
                "workflow_runs": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "workflow_template_id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "owner": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "username": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "email": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "workflow_template": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "title": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "uuid": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "template_version": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "name": "template",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Include `template` attribute in response."
          },
          {
            "name": "deleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Include archived workflow runs."
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "Pagination"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "Sorting"
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowRuns"
                },
                "examples": {
                  "List of WorkflowRuns": {
                    "summary": "List of WorkflowRuns",
                    "value": {
                      "data": [
                        {
                          "id": "1",
                          "type": "workflow_run",
                          "attributes": {
                            "title": "My Premium Workflow",
                            "description": "Add a fancy description here. It even supports __Markdown__!\n",
                            "state": "pending",
                            "run_number": 1,
                            "created_at": "2020-03-16T14:59:06.584Z",
                            "updated_at": "2020-03-16T14:59:06.584Z",
                            "deleted_at": null
                          },
                          "relationships": {
                            "owner": {
                              "data": {
                                "id": "1",
                                "type": "user"
                              }
                            },
                            "workflow_template": {
                              "data": {
                                "id": "1",
                                "type": "workflow_template"
                              }
                            },
                            "organisation": {
                              "data": {
                                "id": "1",
                                "type": "organisation"
                              }
                            },
                            "workflow_steps": {
                              "data": []
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/workflow_runs/1"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Wrong Filter Error": {
                    "summary": "Wrong Filter Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong workflow_runs attributes given for filtering: `hair`.",
                          "title": "Bad Request",
                          "source": {
                            "messages": {}
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "workflow_runs"
        ]
      },
      "post": {
        "description": "Create a WorkflowRun.",
        "operationId": "createWorkflowRun",
        "summary": "Create Workflow Run",
        "security": [
          {
            "oauth2": [
              "read",
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowRun"
                },
                "examples": {
                  "WorkflowRun": {
                    "summary": "WorkflowRun",
                    "value": {
                      "data": {
                        "id": "11",
                        "type": "workflow_run",
                        "attributes": {
                          "state": "pending",
                          "run_number": 2,
                          "created_at": "2020-03-16T14:59:17.089Z",
                          "updated_at": "2020-03-16T14:59:17.089Z",
                          "deleted_at": null,
                          "title": "My Premium Workflow",
                          "description": "Add a fancy description here. It even supports __Markdown__!\n"
                        },
                        "relationships": {
                          "owner": {
                            "data": {
                              "id": "10",
                              "type": "user"
                            }
                          },
                          "workflow_template": {
                            "data": {
                              "id": "10",
                              "type": "workflow_template"
                            }
                          },
                          "organisation": {
                            "data": {
                              "id": "10",
                              "type": "organisation"
                            }
                          },
                          "workflow_steps": {
                            "data": []
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/workflow_runs/11"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Bad Request Error": {
                    "summary": "Bad Request Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Missing `data` member at document's top level.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Conflict Missing Type Error": {
                    "summary": "Conflict Missing Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "Missing `type` member at document's `data` level.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Conflict Wrong Type Error": {
                    "summary": "Conflict Wrong Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "The given `type` member does not match the resource.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "workflow_runs"
        ],
        "requestBody": {
          "description": "Create a WorkflowRun.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWorkflowRun"
              },
              "example": {
                "data": {
                  "type": "workflow_run",
                  "relationships": {
                    "workflow_template": {
                      "data": {
                        "type": "workflow_templates",
                        "id": "10"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/workflow_runs/{id}": {
      "get": {
        "description": "Get a single WorkflowRun by its id.",
        "operationId": "getWorkflowRun",
        "summary": "Get Workflow Run",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "An id of WorkflowRun to get."
          },
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "List of WorkflowRun attributes to be included in response."
          },
          {
            "name": "template",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Include `template` attribute in response."
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "List of related resource to include. Allowed values are: `owner`, `workflow_template`"
          },
          {
            "name": "deleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Find in archive."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowRun"
                },
                "examples": {
                  "WorkflowRun": {
                    "summary": "WorkflowRun",
                    "value": {
                      "data": {
                        "id": "4",
                        "type": "workflow_run",
                        "attributes": {
                          "state": "pending",
                          "run_number": 1,
                          "created_at": "2020-03-16T14:59:10.292Z",
                          "updated_at": "2020-03-16T14:59:10.292Z",
                          "deleted_at": null,
                          "title": "My Premium Workflow",
                          "description": "Add a fancy description here. It even supports __Markdown__!\n"
                        },
                        "relationships": {
                          "owner": {
                            "data": {
                              "id": "4",
                              "type": "user"
                            }
                          },
                          "workflow_template": {
                            "data": {
                              "id": "4",
                              "type": "workflow_template"
                            }
                          },
                          "organisation": {
                            "data": {
                              "id": "4",
                              "type": "organisation"
                            }
                          },
                          "workflow_steps": {
                            "data": []
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/workflow_runs/4"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Wrong Include Error": {
                    "summary": "Wrong Include Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong `include` value(s) given: `spaceships`, `aliens`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "workflow_runs"
        ]
      },
      "patch": {
        "description": "Update a WorkflowRun.",
        "operationId": "updateWorkflowRun",
        "summary": "Update Workflow Run",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Id of a WorkflowRun to update."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read",
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowRun"
                },
                "examples": {
                  "WorkflowRun": {
                    "summary": "WorkflowRun",
                    "value": {
                      "data": {
                        "id": "16",
                        "type": "workflow_run",
                        "attributes": {
                          "state": "active",
                          "run_number": 1,
                          "created_at": "2020-03-16T14:59:21.661Z",
                          "updated_at": "2020-03-16T14:59:22.603Z",
                          "deleted_at": null,
                          "title": "My Premium Workflow",
                          "description": "Add a fancy description here. It even supports __Markdown__!\n"
                        },
                        "relationships": {
                          "owner": {
                            "data": {
                              "id": "15",
                              "type": "user"
                            }
                          },
                          "workflow_template": {
                            "data": {
                              "id": "15",
                              "type": "workflow_template"
                            }
                          },
                          "organisation": {
                            "data": {
                              "id": "15",
                              "type": "organisation"
                            }
                          },
                          "workflow_steps": {
                            "data": [
                              {
                                "id": "1",
                                "type": "workflow_step"
                              }
                            ]
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/workflow_runs/16"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Bad Request Error": {
                    "summary": "Bad Request Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Missing `data` member at document's top level.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Bad State Transition": {
                    "summary": "Bad State Transition",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Cannot transition from pending to completed.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Invalid State": {
                    "summary": "Invalid State",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Target state 'puzzled' is undefined.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Conflict Missing Type Error": {
                    "summary": "Conflict Missing Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "Missing `type` member at document's `data` level.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Conflict Wrong Type Error": {
                    "summary": "Conflict Wrong Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "The given `type` member does not match the resource.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "workflow_runs"
        ],
        "requestBody": {
          "description": "Update a WorkflowRun.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWorkflowRun"
              },
              "example": {
                "data": {
                  "type": "workflow_run",
                  "attributes": {
                    "state": "active"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Delete a WorkflowRun.",
        "operationId": "deleteWorkflowRun",
        "summary": "Delete Workflow Run",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Id of a WorkflowRun to delete."
          },
          {
            "name": "deleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Real destroy."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read",
              "delete"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Success"
                },
                "examples": {
                  "Ok": {
                    "summary": "Ok",
                    "value": {
                      "meta": {
                        "result": "Success"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthorized Error": {
                    "summary": "Unauthorized Error",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "You do not have the required permissions to access this resource. Note: OAuth 2 scopes do not overrule application level permissions.",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "workflow_runs"
        ]
      }
    },
    "/workflow_runs/restore": {
      "patch": {
        "description": "Restore a WorkflowRun.",
        "operationId": "restoreWorkflowRun",
        "summary": "Restore Workflow Run",
        "security": [
          {
            "oauth2": [
              "read",
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowRuns"
                },
                "examples": {
                  "Ok": {
                    "summary": "Ok",
                    "value": {
                      "data": [
                        {
                          "id": "30",
                          "type": "workflow_run",
                          "attributes": {
                            "title": "My Premium Workflow",
                            "description": "Add a fancy description here. It even supports __Markdown__!\n",
                            "state": "pending",
                            "run_number": 1,
                            "created_at": "2020-03-16T14:59:35.216Z",
                            "updated_at": "2020-03-16T14:59:35.945Z",
                            "deleted_at": null
                          },
                          "relationships": {
                            "owner": {
                              "data": {
                                "id": "29",
                                "type": "user"
                              }
                            },
                            "workflow_template": {
                              "data": {
                                "id": "28",
                                "type": "workflow_template"
                              }
                            },
                            "organisation": {
                              "data": {
                                "id": "28",
                                "type": "organisation"
                              }
                            },
                            "workflow_steps": {
                              "data": []
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/workflow_runs/30"
                          }
                        }
                      ]
                    }
                  },
                  "Ignore Record Not Found Error": {
                    "summary": "Ignore Record Not Found Error",
                    "value": {
                      "data": []
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "workflow_runs"
        ]
      }
    },
    "/workflow_steps": {
      "get": {
        "description": "Get a list of existing WorkflowSteps.",
        "operationId": "getWorkflowSteps",
        "summary": "Get Workflow Steps",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "List of WorkflowStep attributes to be included in response."
          },
          {
            "name": "filter",
            "description": "Resources and/or attributes to filter by.",
            "in": "query",
            "schema": {
              "type": "object",
              "properties": {
                "workflow_steps": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "workflow_run_id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "completed_at": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "workflow_run": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "workflow_template_id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "Pagination"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "Sorting"
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowSteps"
                },
                "examples": {
                  "List of WorkflowSteps": {
                    "summary": "List of WorkflowSteps",
                    "value": {
                      "data": [
                        {
                          "id": "4",
                          "type": "workflow_step",
                          "attributes": {
                            "pointer": "/steps/weighing",
                            "flow_pointer": "/flow/2",
                            "current_substep": -1,
                            "completed_at": null,
                            "step_number": 1,
                            "created_at": "2020-02-14T12:44:14.192Z",
                            "updated_at": "2020-02-14T12:44:14.192Z",
                            "deleted_at": null
                          },
                          "relationships": {
                            "workflow_run": {
                              "data": {
                                "id": "69",
                                "type": "workflow_run"
                              }
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/workflow_steps/4"
                          }
                        },
                        {
                          "id": "5",
                          "type": "workflow_step",
                          "attributes": {
                            "pointer": "/steps/weighing",
                            "flow_pointer": "/flow/2",
                            "current_substep": -1,
                            "completed_at": null,
                            "step_number": 1,
                            "created_at": "2020-02-14T12:44:14.203Z",
                            "updated_at": "2020-02-14T12:44:14.203Z",
                            "deleted_at": null
                          },
                          "relationships": {
                            "workflow_run": {
                              "data": {
                                "id": "69",
                                "type": "workflow_run"
                              }
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/workflow_steps/5"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Wrong Filter Error": {
                    "summary": "Wrong Filter Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong workflow_steps attributes given for filtering: `hair`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Wrong Fields Set Error": {
                    "summary": "Wrong Fields Set Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong `fields` value(s) for workflow_steps given: `invalid`, `DROP TABLE USERS`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "workflow_steps"
        ]
      }
    },
    "/workflow_steps/{id}": {
      "get": {
        "description": "Get a single WorkflowStep by its id.",
        "operationId": "getWorkflowStep",
        "summary": "Get Workflow Step",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "An id of WorkflowStep to get."
          },
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "List of WorkflowStep attributes to be included in response."
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "List of related resource to include. Allowed values are: `value`, `value`."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowStep"
                },
                "examples": {
                  "WorkflowStep": {
                    "summary": "WorkflowStep",
                    "value": {
                      "data": {
                        "id": "12",
                        "type": "workflow_step",
                        "attributes": {
                          "pointer": "/steps/weighing",
                          "flow_pointer": "/flow/2",
                          "current_substep": -1,
                          "completed_at": null,
                          "step_number": 1,
                          "created_at": "2020-02-14T12:44:15.834Z",
                          "updated_at": "2020-02-14T12:44:15.834Z",
                          "deleted_at": null
                        },
                        "relationships": {
                          "workflow_run": {
                            "data": {
                              "id": "75",
                              "type": "workflow_run"
                            }
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/workflow_steps/12"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Wrong Include Error": {
                    "summary": "Wrong Include Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong `include` value(s) given: `spaceships`, `aliens`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Wrong Fields Set Error": {
                    "summary": "Wrong Fields Set Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong `fields` value(s) for workflow_steps given: `invalid`, `DROP TABLE USERS`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "workflow_steps"
        ]
      },
      "patch": {
        "description": "Update a WorkflowStep.",
        "operationId": "updateWorkflowStep",
        "summary": "Update Workflow Step",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Id of a WorkflowStep to update."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read",
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowStep"
                },
                "examples": {
                  "WorkflowStep": {
                    "summary": "WorkflowStep",
                    "value": {
                      "data": {
                        "id": "20",
                        "type": "workflow_step",
                        "attributes": {
                          "pointer": "/steps/weighing",
                          "flow_pointer": "/flow/2",
                          "current_substep": 1,
                          "completed_at": "2020-02-14T12:44:18.044Z",
                          "step_number": 1,
                          "created_at": "2020-02-14T12:44:17.978Z",
                          "updated_at": "2020-02-14T12:44:18.044Z",
                          "deleted_at": null
                        },
                        "relationships": {
                          "workflow_run": {
                            "data": {
                              "id": "83",
                              "type": "workflow_run"
                            }
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/workflow_steps/20"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Bad Request Error": {
                    "summary": "Bad Request Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Missing `data` member at document's top level.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthorized Error because of a missed scope": {
                    "summary": "Unauthorized Error because of a missed scope",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "Insufficient OAuth2 scope to perform this operation. Required: Update",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Conflict Missing Type Error": {
                    "summary": "Conflict Missing Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "Missing `type` member at document's `data` level.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Conflict Wrong Type Error": {
                    "summary": "Conflict Wrong Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "The given `type` member does not match the resource.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "workflow_steps"
        ],
        "requestBody": {
          "description": "Update a WorkflowStep.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWorkflowStep"
              },
              "example": {
                "data": {
                  "type": "workflow_step",
                  "attributes": {
                    "current_substep": "1"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/workflow_steps/{id}/trigger": {
      "put": {
        "responses": {
          "202": {
            "description": "Trigger Accepted",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Success"
                },
                "examples": {
                  "Success": {
                    "summary": "Success",
                    "value": {
                      "meta": {
                        "result": "Success"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Bad Trigger Type": {
                    "summary": "Bad Trigger Type",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Missing or invalid trigger type: invalid",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Trigger Not Handled ": {
                    "summary": "Trigger Not Handled ",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Missing or invalid trigger type: invalid",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Bad Request Error": {
                    "summary": "Bad Request Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "param is missing or the value is empty: data",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Signal a trigger to a workflow step.",
        "operationId": "triggerWorkflowStep",
        "summary": "Trigger Workflow Step",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "The ID of the workflow step the trigger should fire for."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read",
              "write"
            ]
          }
        ],
        "tags": [
          "workflow_steps"
        ],
        "requestBody": {
          "description": "Trigger a WorkflowStep.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/TriggerSignal"
              },
              "example": {
                "data": {
                  "type": "manual",
                  "substep": "0",
                  "key": "clickable-button"
                }
              }
            }
          }
        }
      }
    },
    "/workflow_templates": {
      "get": {
        "description": "Get a list of existing WorkflowTemplates.",
        "operationId": "getWorkflowTemplates",
        "summary": "Get Workflow Templates",
        "parameters": [
          {
            "name": "template",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Include `template` attribute in response."
          },
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "List of WorkflowTemplate attributes to be included in response."
          },
          {
            "name": "filter",
            "description": "Resources and/or attributes to filter by.",
            "in": "query",
            "schema": {
              "type": "object",
              "properties": {
                "workflow_templates": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "title": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "uuid": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "template_version": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "owner": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "username": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "email": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "organisation": {
                  "type": "object",
                  "additionalProperties": false
                }
              }
            }
          },
          {
            "name": "deleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Include archived workflow templates."
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "Pagination"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "Sorting"
          },
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "Searching"
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowTemplates"
                },
                "examples": {
                  "List of WorkflowTemplates": {
                    "summary": "List of WorkflowTemplates",
                    "value": {
                      "data": [
                        {
                          "id": "2",
                          "type": "workflow_template",
                          "attributes": {
                            "uuid": "ad9c1642-f26d-4dd0-8924-68182477e9c7",
                            "template_version": "1.0.0",
                            "title": "My Premium Workflow",
                            "description": "Add a fancy description here. It even supports __Markdown__!\n",
                            "slug": "my-premium-workflow",
                            "updated_at": "2020-04-01T08:46:51.853Z",
                            "created_at": "2020-04-01T08:46:51.853Z",
                            "deleted_at": null
                          },
                          "relationships": {
                            "owner": {
                              "data": {
                                "id": "36",
                                "type": "user"
                              }
                            },
                            "organisation": {
                              "data": {
                                "id": "35",
                                "type": "organisation"
                              }
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/workflow_templates/2"
                          }
                        },
                        {
                          "id": "3",
                          "type": "workflow_template",
                          "attributes": {
                            "uuid": "ad9c1642-f26d-4dd0-8924-68182477e9c7",
                            "template_version": "1.0.1",
                            "title": "My Premium Workflow",
                            "description": "Add a fancy description here. It even supports __Markdown__!\n",
                            "slug": "my-premium-workflow",
                            "updated_at": "2020-04-01T08:46:51.992Z",
                            "created_at": "2020-04-01T08:46:51.992Z",
                            "deleted_at": null
                          },
                          "relationships": {
                            "owner": {
                              "data": {
                                "id": "36",
                                "type": "user"
                              }
                            },
                            "organisation": {
                              "data": {
                                "id": "35",
                                "type": "organisation"
                              }
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/workflow_templates/3"
                          }
                        }
                      ]
                    }
                  },
                  "List of found WorkflowTemplates": {
                    "summary": "List of found WorkflowTemplates",
                    "value": {
                      "data": [
                        {
                          "id": "4",
                          "type": "workflow_template",
                          "attributes": {
                            "uuid": "ad9c1642-f26d-4dd0-8924-68182477e9c7",
                            "template_version": "1.0.0",
                            "title": "My Premium Workflow",
                            "description": "Add a fancy description here. It even supports __Markdown__!\n",
                            "slug": "my-premium-workflow",
                            "updated_at": "2020-04-01T08:46:53.024Z",
                            "created_at": "2020-04-01T08:46:53.024Z",
                            "deleted_at": null
                          },
                          "relationships": {
                            "owner": {
                              "data": {
                                "id": "37",
                                "type": "user"
                              }
                            },
                            "organisation": {
                              "data": {
                                "id": "36",
                                "type": "organisation"
                              }
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/workflow_templates/4"
                          }
                        },
                        {
                          "id": "5",
                          "type": "workflow_template",
                          "attributes": {
                            "uuid": "ad9c1642-f26d-4dd0-8924-68182477e9c7",
                            "template_version": "1.0.1",
                            "title": "My Premium Workflow",
                            "description": "Add a fancy description here. It even supports __Markdown__!\n",
                            "slug": "my-premium-workflow",
                            "updated_at": "2020-04-01T08:46:53.158Z",
                            "created_at": "2020-04-01T08:46:53.158Z",
                            "deleted_at": null
                          },
                          "relationships": {
                            "owner": {
                              "data": {
                                "id": "37",
                                "type": "user"
                              }
                            },
                            "organisation": {
                              "data": {
                                "id": "36",
                                "type": "organisation"
                              }
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/workflow_templates/5"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Wrong Filter Error": {
                    "summary": "Wrong Filter Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong workflow_templates attributes given for filtering: `hair`.",
                          "title": "Bad Request",
                          "source": {
                            "messages": {}
                          }
                        }
                      ]
                    }
                  },
                  "Wrong Fields Set Error": {
                    "summary": "Wrong Fields Set Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong `fields` value(s) for workflow_templates given: `invalid`, `DROP TABLE USERS`.",
                          "title": "Bad Request",
                          "source": {
                            "messages": {}
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "workflow_templates"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CreateWorkflowTemplate"
              }
            }
          }
        },
        "description": "Create a WorkflowTemplate.",
        "operationId": "createWorkflowTemplate",
        "summary": "Create Workflow Template",
        "security": [
          {
            "oauth2": [
              "read",
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowTemplate"
                },
                "examples": {
                  "WorkflowTemplate": {
                    "summary": "WorkflowTemplate",
                    "value": {
                      "data": {
                        "id": "25",
                        "type": "workflow_template",
                        "attributes": {
                          "uuid": "ad9c1642-f26d-4dd0-8924-68182477e9c7",
                          "template_version": "1.0.0",
                          "title": "My Premium Workflow",
                          "description": "Add a fancy description here. It even supports __Markdown__!\n",
                          "slug": "my-premium-workflow",
                          "updated_at": "2020-04-01T08:47:10.740Z",
                          "created_at": "2020-04-01T08:47:10.740Z",
                          "deleted_at": null
                        },
                        "relationships": {
                          "owner": {
                            "data": {
                              "id": "54",
                              "type": "user"
                            }
                          },
                          "organisation": {
                            "data": {
                              "id": "53",
                              "type": "organisation"
                            }
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/workflow_templates/25"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Bad Request Error": {
                    "summary": "Bad Request Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Validation failed: File can't be blank",
                          "title": "Bad Request",
                          "source": {
                            "messages": {
                              "file": [
                                "can't be blank"
                              ]
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthorized Error because of a missed scope": {
                    "summary": "Unauthorized Error because of a missed scope",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "Insufficient OAuth2 scope to perform this operation. Required: Update",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Conflict Missing Type Error": {
                    "summary": "Conflict Missing Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "Missing `type` member at document's `data` level.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Conflict Wrong Type Error": {
                    "summary": "Conflict Wrong Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "The given `type` member does not match the resource.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "workflow_templates"
        ]
      }
    },
    "/workflow_templates/{id}": {
      "get": {
        "description": "Get a single WorkflowTemplate by its id.",
        "operationId": "getWorkflowTemplate",
        "summary": "Get Workflow Template",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "An id of WorkflowTemplate to get."
          },
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "List of WorkflowTemplate attributes to be included in response."
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "List of related resource to include. Allowed values are: `owner`, `organisation`."
          },
          {
            "name": "template",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Include `template` attribute in response."
          },
          {
            "name": "deleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Find in archive."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowTemplate"
                },
                "examples": {
                  "WorkflowTemplate": {
                    "summary": "WorkflowTemplate",
                    "value": {
                      "data": {
                        "id": "13",
                        "type": "workflow_template",
                        "attributes": {
                          "uuid": "ad9c1642-f26d-4dd0-8924-68182477e9c7",
                          "template_version": "1.0.0",
                          "title": "My Premium Workflow",
                          "description": "Add a fancy description here. It even supports __Markdown__!\n",
                          "slug": "my-premium-workflow",
                          "updated_at": "2020-04-01T08:46:59.172Z",
                          "created_at": "2020-04-01T08:46:59.172Z",
                          "deleted_at": null
                        },
                        "relationships": {
                          "owner": {
                            "data": {
                              "id": "43",
                              "type": "user"
                            }
                          },
                          "organisation": {
                            "data": {
                              "id": "42",
                              "type": "organisation"
                            }
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/workflow_templates/13"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Wrong Include Error": {
                    "summary": "Wrong Include Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong `include` value(s) given: `spaceships`, `aliens`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Wrong Fields Set Error": {
                    "summary": "Wrong Fields Set Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong `fields` value(s) for workflow_templates given: `invalid`, `DROP TABLE USERS`.",
                          "title": "Bad Request",
                          "source": {
                            "messages": {}
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "workflow_templates"
        ]
      },
      "delete": {
        "description": "Delete a WorkflowTemplate.",
        "operationId": "deleteWorkflowTemplate",
        "summary": "Delete Workflow Template",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Id of a WorkflowTemplate to delete."
          },
          {
            "name": "deleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Real destroy."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read",
              "delete"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Success"
                },
                "examples": {
                  "Ok": {
                    "summary": "Ok",
                    "value": {
                      "meta": {
                        "result": "Success"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthorized Error": {
                    "summary": "Unauthorized Error",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "You do not have the required permissions to access this resource. Note: OAuth 2 scopes do not overrule application level permissions.",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Conflict Error (Template used by previous runs)": {
                    "summary": "Conflict Error (Template used by previous runs)",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "Cannot delete record because of dependent Workflow Runs",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "workflow_templates"
        ]
      }
    },
    "/workflow_templates/{id}/download": {
      "get": {
        "description": "Download a previously uploaded workflow template file.",
        "operationId": "downloadWorkflowTemplate",
        "summary": "Download Workflow Template",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "An id of WorkflowTemplate with a file to download."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowTemplate"
                },
                "examples": {
                  "WorkflowTemplate download": {
                    "summary": "WorkflowTemplate download",
                    "value": "---\nschema_version: '0.0.1' # version of the workflow template schema\ninfo:\n  version: '1.0.0' # version of the workflow\n  uuid: ad9c1642-f26d-4dd0-8924-68182477e9c7 # can be passed an external uuid\n  title: My Premium Workflow\n  description: |\n    Add a fancy description here. It even supports __Markdown__!\n  author:\n    name: Max Mustermann\n    email: max.mustermann@company.com\n  slug: my-premium-workflow\n\nfields:\n  someString: # basic types\n    type: string\n    maxLength: 100\n    defaultValue: 'Test'\n  balance: # relationships\n    type: relationship\n    resourceType: devices\n    prepare: true # required before starting the workflow\n  instrumentInstructions: # files\n    type: file\n    mediaType: application/my-instruments-config-file-type\n    prepare: true\n    readOnly: true # can not be changed once the workflow is started\n    output: false # should not be part of a the workflows export output\n  actualWeight: # quantities\n    type: quantity\n    unit: mg\n  actualVolume:\n    type: quantity\n    unit: ml\n  density: # scripts\n    type: script\n    script: actualWeight / actualVolume\n    readOnly: true # script fields are required to be read-only\n    result:\n      type: quantity\n      unit: mg\n\nsteps:\n  weighing: # within the workflow this needs to be a unique reference\n    info:\n      title: Weighing\n    substeps:\n      - primary: Place the {{sample}} on the balance.\n        description: |\n          Your fancy markdown body with formatting, images and what not else!\n        confirm: true\n        timer:\n          type: timer\n          defaultDuration: 5s\n\n  dosing:\n    uuid: b3fc8c2b-aa03-4ab7-9172-377ef38fd860\n    version: 1.0.0\n\n  externalStep:\n    info:\n      uuid: 6e83282d-c67c-49cb-b921-51e9a16b8de8 # can be passed an external uuid\n      title: A Great Step\n      description: |\n        Add a fancy description here. It even supports __Markdown__!\n      author:\n        name: Max Mustermann\n        email: max.mustermann@company.com\n      slug: a-great-step\n\n    fields:\n      sample: # basic types\n        type: string\n        maxLength: 100\n      powderDispenser: # relationships\n        type: relationship\n        resourceType: devices\n        prepare: true # required before starting the workflow\n\n    substeps:\n      - primary: Load a {{sample}} into the {{powderDispenser}}.\n        secondary: Please, confirm when you are done.\n        confirm: true\n\n      - primary: |\n          The sample will be gravimetrically placed in a {{target}} reaction tube.\n        devices:\n          - powderDispenser\n        behaviors:\n          - title: Start gravimetrical measurement\n            when: ON_SUBSTEP_START\n            do:\n              - SEND_COMMAND:\n                  device: powderDose\n                  command: GET_GRAVIMETRICAL_MEASUREMENT\n                  scope: substep # could be step or even workflow run?!\n\n          - title: Record result\n            when:\n              ON_COMMAND_RESPONSE:\n                device: powderDose\n                command: GET_GRAVIMETRICAL_MEASUREMENT\n            and: data.value >= 9 && data.value <= 11\n            do:\n              - SET_FIELD:\n                  field: actual\n                  value: data.value\n              - COMPLETE_SUBSTEP\n            else:\n              - ALERT:\n                  title: Tolerance Missed\n                  text: |\n                    Result is not within tolerance of 1 {{target.unit}} of the\n                    target of {{target}}. Repeat the step.\n              - REPEAT_STEP # note that we repeat the entire step not only substep\n\n      - primary: |\n          Results after gravimetrical placement are recorded: {{actual}}\n        behaviors:\n          - when: ON_SUBSTEP_START\n            delay: 4s\n            do:\n              - COMPLETE_SUBSTEP\n              - COMPLETE_STEP\n\n      - primary: Send results to ELN\n        behaviors:\n          - when: ON_SUBSTEP_COMPLETE\n            do:\n              - webhook:\n                  url: http://localhost:5000/__cypress__/webhook?status=200&body=6\n                  method: post\n                  blocking: true\n                  headers:\n                    content-type: application/json\n                  body: |\n                    {\n                      \"registered_value\": \"{{someString}}\",\n                      \"description\": \"some information goes here\"\n                    }\n                  onSuccess:\n                    processor: json\n                    do:\n                      SET_FIELD:\n                        field: actual\n                        value: data.value\n                  onError:\n                    processor: json\n                    do:\n                      - REPEAT_SUBSTEP\n                  onCode:\n                    '404':\n                      processor: json\n                      do:\n                        - ALERT:\n                            title: Not Found\n                            text: Ensure that you're using a valid\n                              url / endpoint\n\n                    '418':\n                      processor: json\n                      do:\n                        - ALERT:\n                            title: I'm a teapot\n                            text: For real! I'm a teapot\n\n  alert:\n    info:\n      title: Alert completed\n    substeps:\n      - primary: Yuhu!\n    behaviors:\n      - title: Alert that we are done.\n        when: ON_STEP_START\n        do:\n          - ALERT:\n              title: Finished!\n              text: We are done here.\n\n  buttonStep:\n    info:\n      title: A step with a hanlded button.\n    substeps:\n      - primary: This is a step with a button.\n        buttons:\n          - label: Click me\n            key: clickable-button\n        behaviors:\n          - when:\n              MANUAL:\n                key: clickable-button\n            do:\n              - COMPLETE_SUBSTEP\n\nflow:\n  - weighing:\n      fields:\n        target: 100 mg\n      fieldMapping:\n        actual: actualWeight\n  - parallel:\n      streamA:\n        - dosing\n        - dosing\n      streamB:\n        - stirring\n  - buttonStep\n  - if: 'true'\n    then: alert\n    else:\n      - step6\n      - step7\n  - loop:\n      - step8\n      - step9\n    until: field1 > 20\n  - while: 'true'\n    do:\n      - step8\n      - step9\n  - externalStep:\n      fields:\n        sample: 'MySample'\n      fieldMapping:\n        balance: powderDispenser\n"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "workflow_templates"
        ]
      }
    },
    "/workflow_templates/restore": {
      "patch": {
        "description": "Restore a WorkflowTemplate.",
        "operationId": "restoreWorkflowTemplate",
        "summary": "Restore Workflow Template",
        "security": [
          {
            "oauth2": [
              "read",
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowTemplates"
                },
                "examples": {
                  "Ok": {
                    "summary": "Ok",
                    "value": {
                      "data": [
                        {
                          "id": "39",
                          "type": "workflow_template",
                          "attributes": {
                            "uuid": "ad9c1642-f26d-4dd0-8924-68182477e9c7",
                            "template_version": "1.0.0",
                            "title": "My Premium Workflow",
                            "description": "Add a fancy description here. It even supports __Markdown__!\n",
                            "slug": "my-premium-workflow",
                            "updated_at": "2020-04-01T08:47:23.752Z",
                            "created_at": "2020-04-01T08:47:23.118Z",
                            "deleted_at": null
                          },
                          "relationships": {
                            "owner": {
                              "data": {
                                "id": "69",
                                "type": "user"
                              }
                            },
                            "organisation": {
                              "data": {
                                "id": "67",
                                "type": "organisation"
                              }
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/workflow_templates/39"
                          }
                        }
                      ]
                    }
                  },
                  "Ignore Record Not Found Error": {
                    "summary": "Ignore Record Not Found Error",
                    "value": {
                      "data": []
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "workflow_templates"
        ]
      }
    },
    "/device_classes": {
      "get": {
        "description": "Get a list of existing Device Classes.",
        "operationId": "getDeviceClasses",
        "summary": "Get Device Classes",
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceClasses"
                },
                "examples": {
                  "List of Device Classes": {
                    "summary": "List of Device Classes",
                    "value": {
                      "data": [
                        {
                          "id": "8",
                          "type": "device_class",
                          "attributes": {
                            "label": "Incubator"
                          }
                        },
                        {
                          "id": "20",
                          "type": "device_class",
                          "attributes": {
                            "label": "Heating/Cooling Unit"
                          }
                        },
                        {
                          "id": "24",
                          "type": "device_class",
                          "attributes": {
                            "label": "Evaporator"
                          }
                        },
                        {
                          "id": "25",
                          "type": "device_class",
                          "attributes": {
                            "label": "Balance"
                          }
                        },
                        {
                          "id": "26",
                          "type": "device_class",
                          "attributes": {
                            "label": "Pump (liquid)"
                          }
                        },
                        {
                          "id": "27",
                          "type": "device_class",
                          "attributes": {
                            "label": "Vacuum Pump"
                          }
                        },
                        {
                          "id": "31",
                          "type": "device_class",
                          "attributes": {
                            "label": "Camera"
                          }
                        },
                        {
                          "id": "1000",
                          "type": "device_class",
                          "attributes": {
                            "label": "Custom Device Class"
                          }
                        },
                        {
                          "id": "1050",
                          "type": "device_class",
                          "attributes": {
                            "label": "Developer Console"
                          }
                        },
                        {
                          "id": "2000",
                          "type": "device_class",
                          "attributes": {
                            "label": "Power Meter"
                          }
                        },
                        {
                          "id": "3000",
                          "type": "device_class",
                          "attributes": {
                            "label": "Soil Moisture Sensor"
                          }
                        },
                        {
                          "id": "3100",
                          "type": "device_class",
                          "attributes": {
                            "label": "Probe"
                          }
                        },
                        {
                          "id": "4000",
                          "type": "device_class",
                          "attributes": {
                            "label": "Analyzer"
                          }
                        },
                        {
                          "id": "5000",
                          "type": "device_class",
                          "attributes": {
                            "label": "Heat Control"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "device_classes"
        ]
      }
    },
    "/comments": {
      "get": {
        "description": "Get a list of existing Comments.",
        "operationId": "getComments",
        "summary": "Get Comments",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "List of Comment attributes to be included in the response."
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "List of related resource to include. Allowed values are: owner."
          },
          {
            "name": "filter",
            "description": "Resources and/or attributes to filter by.",
            "in": "query",
            "schema": {
              "type": "object",
              "properties": {
                "comments": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "commentable_id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "commentable_type": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "owner_id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "created_at": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "updated_at": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "deleted_at": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "content": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "owner": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "username": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "email": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "Pagination"
          },
          {
            "name": "deleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Include soft deleted comments."
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "Sorting"
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Comments"
                },
                "examples": {
                  "List of Comments": {
                    "summary": "List of Comments",
                    "value": {
                      "data": [
                        {
                          "id": "3",
                          "type": "comment",
                          "attributes": {
                            "commentable_type": "WorkflowStep",
                            "commentable_id": 1,
                            "content": "Ex aut eaque voluptatem.",
                            "deleted_at": null,
                            "created_at": "2020-03-10T11:51:27.258Z",
                            "updated_at": "2020-03-10T11:51:27.258Z"
                          },
                          "relationships": {
                            "owner": {
                              "data": {
                                "id": "4",
                                "type": "user"
                              }
                            },
                            "commentable": {
                              "data": {
                                "id": "1",
                                "type": "workflow_step"
                              }
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/comments/3"
                          }
                        },
                        {
                          "id": "2",
                          "type": "comment",
                          "attributes": {
                            "commentable_type": "WorkflowStep",
                            "commentable_id": 1,
                            "content": "Ratione illo eos ea.",
                            "deleted_at": null,
                            "created_at": "2020-03-10T11:51:27.188Z",
                            "updated_at": "2020-03-10T11:51:27.188Z"
                          },
                          "relationships": {
                            "owner": {
                              "data": {
                                "id": "3",
                                "type": "user"
                              }
                            },
                            "commentable": {
                              "data": {
                                "id": "1",
                                "type": "workflow_step"
                              }
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/comments/2"
                          }
                        },
                        {
                          "id": "1",
                          "type": "comment",
                          "attributes": {
                            "commentable_type": "WorkflowStep",
                            "commentable_id": 1,
                            "content": "Quam fugiat eos aut.",
                            "deleted_at": null,
                            "created_at": "2020-03-10T11:51:27.127Z",
                            "updated_at": "2020-03-10T11:51:27.127Z"
                          },
                          "relationships": {
                            "owner": {
                              "data": {
                                "id": "1",
                                "type": "user"
                              }
                            },
                            "commentable": {
                              "data": {
                                "id": "1",
                                "type": "workflow_step"
                              }
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/comments/1"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Wrong Filter Error": {
                    "summary": "Wrong Filter Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong comments attributes given for filtering: `hair`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Wrong Fields Set Error (all fieldnames are invalid)": {
                    "summary": "Wrong Fields Set Error (all fieldnames are invalid)",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong `fields` value(s) for comments given: `invalid`, `invalid2`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Wrong Fields Set Error (one fieldname is invalid)": {
                    "summary": "Wrong Fields Set Error (one fieldname is invalid)",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong `fields` value(s) for comments given: `wrong`, `invalid`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Container filter is missing": {
                    "summary": "Container filter is missing",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Missed required attribute(s) for comments: filter[comments][container_id].",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Container type is wrong": {
                    "summary": "Container type is wrong",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Your request is mal formed.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  },
                  "commentable filter is missing": {
                    "summary": "commentable filter is missing",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Missed required attribute(s) for comments: filter[comments][commentable_id].",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  },
                  "commentable type is wrong": {
                    "summary": "commentable type is wrong",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Invalid values: Wierd given for comments commentable_type.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Container doesn't exist": {
                    "summary": "Container doesn't exist",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  },
                  "commentable doesn't exist": {
                    "summary": "commentable doesn't exist",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "comments"
        ]
      },
      "post": {
        "description": "Create a Comment.",
        "operationId": "createComment",
        "summary": "Create Comment",
        "security": [
          {
            "oauth2": [
              "read",
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                },
                "examples": {
                  "Comment": {
                    "summary": "Comment",
                    "value": {
                      "data": {
                        "id": "38",
                        "type": "comment",
                        "attributes": {
                          "container_type": "WorkflowStep",
                          "container_id": 18,
                          "content": "Test info",
                          "deleted_at": null,
                          "created_at": "2020-03-10T11:51:36.982Z",
                          "updated_at": "2020-03-10T11:51:36.982Z",
                          "commentable_type": "WorkflowStep",
                          "commentable_id": 18
                        },
                        "relationships": {
                          "owner": {
                            "data": {
                              "id": "53",
                              "type": "user"
                            }
                          },
                          "commentable": {
                            "data": {
                              "id": "18",
                              "type": "workflow_step"
                            }
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/comments/38"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Bad Request Error": {
                    "summary": "Bad Request Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Missing `data` member at document's top level.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Missed Required Attributes Error": {
                    "summary": "Missed Required Attributes Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Missed required attribute(s) for comment: `content`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthorized Error because of a missed scope": {
                    "summary": "Unauthorized Error because of a missed scope",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "Insufficient OAuth2 scope to perform this operation. Required: Update",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  },
                  "ID parameter given": {
                    "summary": "ID parameter given",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "ID parameter is not allowed for `create` requests.",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Conflict Missing Type Error": {
                    "summary": "Conflict Missing Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "Missing `type` member at document's `data` level.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Conflict Wrong Type Error": {
                    "summary": "Conflict Wrong Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "The given `type` member does not match the resource.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "comments"
        ],
        "requestBody": {
          "description": "Create a Comment.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateComment"
              },
              "example": {
                "data": {
                  "type": "comment",
                  "attributes": {
                    "content": "Test info",
                    "container_id": "18",
                    "container_type": "WorkflowStep",
                    "owner_id": "53",
                    "commentable_id": "18",
                    "commentable_type": "WorkflowStep"
                  },
                  "relationships": {
                    "commentable": {
                      "data": {
                        "id": "18",
                        "type": "WorkflowStep"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/comments/{id}": {
      "get": {
        "description": "Get a single Comment by its id.",
        "operationId": "getComment",
        "summary": "Get Comment",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "An id of Comment to get."
          },
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "List of Comment attributes to be included in the response."
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "List of related resource to include. Allowed values are: `owner`."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                },
                "examples": {
                  "Comment": {
                    "summary": "Comment",
                    "value": {
                      "data": {
                        "id": "20",
                        "type": "comment",
                        "attributes": {
                          "container_type": "WorkflowStep",
                          "container_id": 10,
                          "content": "Dignissimos ea consequatur quisquam.",
                          "deleted_at": null,
                          "created_at": "2020-03-10T11:51:32.409Z",
                          "updated_at": "2020-03-10T11:51:32.409Z",
                          "commentable_type": "WorkflowStep",
                          "commentable_id": 10
                        },
                        "relationships": {
                          "owner": {
                            "data": {
                              "id": "29",
                              "type": "user"
                            }
                          },
                          "commentable": {
                            "data": {
                              "id": "10",
                              "type": "workflow_step"
                            }
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/comments/20"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Wrong Include Error": {
                    "summary": "Wrong Include Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong `include` value(s) given: `spaceships`, `aliens`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Wrong Fields Set Error (all fieldnames are invalid)": {
                    "summary": "Wrong Fields Set Error (all fieldnames are invalid)",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong `fields` value(s) for comments given: `invalid`, `invalid`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Wrong Fields Set Error (one fieldname is invalid)": {
                    "summary": "Wrong Fields Set Error (one fieldname is invalid)",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong `fields` value(s) for comments given: `invalid`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "comments"
        ]
      },
      "patch": {
        "description": "Update a Comment.",
        "operationId": "updateComment",
        "summary": "Update Comment",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Id of a Comment to update."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read",
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                },
                "examples": {
                  "Comment": {
                    "summary": "Comment",
                    "value": {
                      "data": {
                        "id": "53",
                        "type": "comment",
                        "attributes": {
                          "container_type": "WorkflowStep",
                          "container_id": 26,
                          "content": "Other info",
                          "deleted_at": null,
                          "created_at": "2020-03-10T11:51:41.249Z",
                          "updated_at": "2020-03-10T11:51:41.407Z",
                          "commentable_type": "WorkflowStep",
                          "commentable_id": 26
                        },
                        "relationships": {
                          "owner": {
                            "data": {
                              "id": "77",
                              "type": "user"
                            }
                          },
                          "commentable": {
                            "data": {
                              "id": "26",
                              "type": "workflow_step"
                            }
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/comments/53"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Bad Request Error": {
                    "summary": "Bad Request Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Missing `data` member at document's top level.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthorized Error because of a missed scope": {
                    "summary": "Unauthorized Error because of a missed scope",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "Insufficient OAuth2 scope to perform this operation. Required: Update",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Conflict Missing Type Error": {
                    "summary": "Conflict Missing Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "Missing `type` member at document's `data` level.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Conflict Wrong Type Error": {
                    "summary": "Conflict Wrong Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "The given `type` member does not match the resource.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "comments"
        ],
        "requestBody": {
          "description": "Update a Comment.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateComment"
              },
              "example": {
                "data": {
                  "type": "comment",
                  "attributes": {
                    "content": "Other info"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Delete a Comment.",
        "operationId": "deleteComment",
        "summary": "Delete Comment",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Id of a Comment to delete."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read",
              "delete"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Success"
                },
                "examples": {
                  "Ok": {
                    "summary": "Ok",
                    "value": {
                      "meta": {
                        "result": "Success"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthorized Error": {
                    "summary": "Unauthorized Error",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "You do not have the required permissions to access this resource. Note: OAuth 2 scopes do not overrule application level permissions.",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Unauthorized Error because of a missed scope": {
                    "summary": "Unauthorized Error because of a missed scope",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "Insufficient OAuth2 scope to perform this operation. Required: Delete",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "comments"
        ]
      }
    },
    "/comments/restore": {
      "patch": {
        "description": "Restore a Comment.",
        "operationId": "restoreComment",
        "summary": "Restore Comment",
        "security": [
          {
            "oauth2": [
              "read",
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Comments"
                },
                "examples": {
                  "Ok": {
                    "summary": "Ok",
                    "value": {
                      "data": [
                        {
                          "id": "79",
                          "type": "comment",
                          "attributes": {
                            "commentable_type": "WorkflowStep",
                            "commentable_id": 38,
                            "content": "Similique ut possimus beatae.",
                            "deleted_at": null,
                            "created_at": "2020-03-10T11:51:48.146Z",
                            "updated_at": "2020-03-10T11:51:48.244Z"
                          },
                          "relationships": {
                            "owner": {
                              "data": {
                                "id": "113",
                                "type": "user"
                              }
                            },
                            "commentable": {
                              "data": {
                                "id": "38",
                                "type": "workflow_step"
                              }
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/comments/79"
                          }
                        }
                      ]
                    }
                  },
                  "Ignore Unauthorized Error": {
                    "summary": "Ignore Unauthorized Error",
                    "value": {
                      "data": []
                    }
                  },
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "data": []
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "comments"
        ]
      }
    },
    "/workflow_step_templates": {
      "get": {
        "description": "Get a list of existing WorkflowStepTemplates.",
        "operationId": "getWorkflowStepTemplates",
        "summary": "Get Workflow Step Templates",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "List of WorkflowStepTemplate attributes to be included in response."
          },
          {
            "name": "filter",
            "description": "Resources and/or attributes to filter by.",
            "in": "query",
            "schema": {
              "type": "object",
              "properties": {
                "workflow_step_templates": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "title": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "uuid": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "template_version": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "created_at": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "updated_at": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "deleted_at": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "owner": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "username": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "email": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "organisation": {
                  "type": "object",
                  "additionalProperties": false
                }
              }
            }
          },
          {
            "name": "template",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "If this flag is set, the template will be included as the `template` attribute."
          },
          {
            "name": "deleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Include archived workflow templates."
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "Pagination"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "Sorting"
          },
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "Searching"
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowStepTemplates"
                },
                "examples": {
                  "List of WorkflowStepTemplates": {
                    "summary": "List of WorkflowStepTemplates",
                    "value": {
                      "data": [
                        {
                          "id": "1",
                          "type": "workflow_step_template",
                          "attributes": {
                            "uuid": "b16e8146-d14e-4052-8ad8-0fd6d53d9ed0",
                            "template_version": "1.0.0",
                            "title": "A Great Step",
                            "description": "Add a fancy description here. It even supports __Markdown__!\n",
                            "slug": "a-great-step",
                            "updated_at": "2020-04-01T08:46:14.608Z",
                            "created_at": "2020-04-01T08:46:14.608Z",
                            "deleted_at": null
                          },
                          "relationships": {
                            "owner": {
                              "data": {
                                "id": "1",
                                "type": "user"
                              }
                            },
                            "organisation": {
                              "data": {
                                "id": "1",
                                "type": "organisation"
                              }
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/workflow_step_templates/1"
                          }
                        }
                      ]
                    }
                  },
                  "List of found WorkflowStepTemplates": {
                    "summary": "List of found WorkflowStepTemplates",
                    "value": {
                      "data": [
                        {
                          "id": "2",
                          "type": "workflow_step_template",
                          "attributes": {
                            "uuid": "b16e8146-d14e-4052-8ad8-0fd6d53d9ed0",
                            "template_version": "1.0.0",
                            "title": "A Great Step",
                            "description": "Add a fancy description here. It even supports __Markdown__!\n",
                            "slug": "a-great-step",
                            "updated_at": "2020-04-01T08:46:16.697Z",
                            "created_at": "2020-04-01T08:46:16.697Z",
                            "deleted_at": null
                          },
                          "relationships": {
                            "owner": {
                              "data": {
                                "id": "2",
                                "type": "user"
                              }
                            },
                            "organisation": {
                              "data": {
                                "id": "2",
                                "type": "organisation"
                              }
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/workflow_step_templates/2"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Wrong Filter Error": {
                    "summary": "Wrong Filter Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong workflow_step_templates attributes given for filtering: `hair`.",
                          "title": "Bad Request",
                          "source": {
                            "messages": {}
                          }
                        }
                      ]
                    }
                  },
                  "Wrong Fields Set Error": {
                    "summary": "Wrong Fields Set Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong `fields` value(s) for workflow_step_templates given: `invalid`, `DROP TABLE USERS`.",
                          "title": "Bad Request",
                          "source": {
                            "messages": {}
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "workflow_step_templates"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CreateWorkflowStepTemplate"
              }
            }
          }
        },
        "description": "Create a WorkflowStepTemplate.",
        "operationId": "createWorkflowStepTemplate",
        "summary": "Create Workflow Step Template",
        "security": [
          {
            "oauth2": [
              "read",
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowStepTemplate"
                },
                "examples": {
                  "WorkflowStepTemplate": {
                    "summary": "WorkflowStepTemplate",
                    "value": {
                      "data": {
                        "id": "12",
                        "type": "workflow_step_template",
                        "attributes": {
                          "uuid": "b16e8146-d14e-4052-8ad8-0fd6d53d9ed0",
                          "template_version": "1.0.0",
                          "title": "A Great Step",
                          "description": "Add a fancy description here. It even supports __Markdown__!\n",
                          "slug": "a-great-step",
                          "updated_at": "2020-04-01T08:46:31.696Z",
                          "created_at": "2020-04-01T08:46:31.696Z",
                          "deleted_at": null
                        },
                        "relationships": {
                          "owner": {
                            "data": {
                              "id": "16",
                              "type": "user"
                            }
                          },
                          "organisation": {
                            "data": {
                              "id": "16",
                              "type": "organisation"
                            }
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/workflow_step_templates/12"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Bad Request": {
                    "summary": "Bad Request",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Validation failed: File can't be blank",
                          "title": "Bad Request",
                          "source": {
                            "messages": {
                              "file": [
                                "can't be blank"
                              ]
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthorized Error because of a missed scope": {
                    "summary": "Unauthorized Error because of a missed scope",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "Insufficient OAuth2 scope to perform this operation. Required: Update",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Conflict Missing Type Error": {
                    "summary": "Conflict Missing Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "Missing `type` member at document's `data` level.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Conflict Wrong Type Error": {
                    "summary": "Conflict Wrong Type Error",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "The given `type` member does not match the resource.",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "workflow_step_templates"
        ]
      }
    },
    "/workflow_step_templates/{id}": {
      "get": {
        "description": "Get a single WorkflowStepTemplate by its id.",
        "operationId": "getWorkflowStepTemplate",
        "summary": "Get Workflow Step Template",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "An id of WorkflowStepTemplate to get."
          },
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "List of WorkflowStepTemplate attributes to be included in response."
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "List of related resource to include. Allowed values are: `owner`, `organisation`."
          },
          {
            "name": "template",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "If this flag is set, the template will be included as the `template` attribute."
          },
          {
            "name": "deleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Find in archive."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowStepTemplate"
                },
                "examples": {
                  "WorkflowStepTemplate": {
                    "summary": "WorkflowStepTemplate",
                    "value": {
                      "data": {
                        "id": "5",
                        "type": "workflow_step_template",
                        "attributes": {
                          "uuid": "b16e8146-d14e-4052-8ad8-0fd6d53d9ed0",
                          "template_version": "1.0.0",
                          "title": "A Great Step",
                          "description": "Add a fancy description here. It even supports __Markdown__!\n",
                          "slug": "a-great-step",
                          "updated_at": "2020-04-01T08:46:22.197Z",
                          "created_at": "2020-04-01T08:46:22.197Z",
                          "deleted_at": null
                        },
                        "relationships": {
                          "owner": {
                            "data": {
                              "id": "8",
                              "type": "user"
                            }
                          },
                          "organisation": {
                            "data": {
                              "id": "8",
                              "type": "organisation"
                            }
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/workflow_step_templates/5"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Wrong Include Error": {
                    "summary": "Wrong Include Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong `include` value(s) given: `spaceships`, `aliens`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Wrong Fields Set Error": {
                    "summary": "Wrong Fields Set Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong `fields` value(s) for workflow_step_templates given: `invalid`, `DROP TABLE USERS`.",
                          "title": "Bad Request",
                          "source": {
                            "messages": {}
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "workflow_step_templates"
        ]
      },
      "delete": {
        "description": "Delete a WorkflowStepTemplate.",
        "operationId": "deleteWorkflowStepTemplate",
        "summary": "Delete Workflow Step Template",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Id of a WorkflowStepTemplate to delete."
          },
          {
            "name": "deleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Real destroy."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read",
              "delete"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Success"
                },
                "examples": {
                  "Ok": {
                    "summary": "Ok",
                    "value": {
                      "meta": {
                        "result": "Success"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthorized Error": {
                    "summary": "Unauthorized Error",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "You do not have the required permissions to access this resource. Note: OAuth 2 scopes do not overrule application level permissions.",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Conflict Error (Template used by previous runs)": {
                    "summary": "Conflict Error (Template used by previous runs)",
                    "value": {
                      "errors": [
                        {
                          "status": "409",
                          "code": "409",
                          "detail": "Cannot delete record because of dependent Workflow Steps",
                          "title": "Conflict",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "workflow_step_templates"
        ]
      }
    },
    "/workflow_step_templates/{id}/download": {
      "get": {
        "description": "Download a previously uploaded workflow template file.",
        "operationId": "downloadWorkflowStepTemplate",
        "summary": "Download Workflow Step Template",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "An id of WorkflowStepTemplate with a file to download."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowStepTemplate"
                },
                "examples": {
                  "WorkflowStepTemplate download": {
                    "summary": "WorkflowStepTemplate download",
                    "value": "---\nschema_version: '0.0.1' # version of the workflow template schema\ninfo:\n  version: '1.0.0'\n  uuid: b16e8146-d14e-4052-8ad8-0fd6d53d9ed0 # can be passed an external uuid\n  title: A Great Step\n  description: |\n    Add a fancy description here. It even supports __Markdown__!\n  author:\n    name: Max Mustermann\n    email: max.mustermann@company.com\n  slug: a-great-step\n\nfields:\n  sample: # basic types\n    type: string\n    maxLength: 100\n  powderDispenser: # relationships\n    type: relationship\n    resourceType: devices\n    prepare: true # required before starting the workflow\n\nsubsteps:\n  - primary: Load a {{sample}} into the {{powderDispenser}}.\n    secondary: Please, confirm when you are done.\n    confirm: true\n    timer:\n      type: timer\n      defaultDuration: 5s\n\n  - primary: |\n      The sample will be gravimetrically placed in a {{target}} reaction tube.\n    devices:\n      - powderDispenser\n    behaviors:\n      - title: Start gravimetrical measurement\n        when: ON_SUBSTEP_START\n        do:\n          - SEND_COMMAND:\n              device: powderDose\n              command: GET_GRAVIMETRICAL_MEASUREMENT\n              scope: substep # could be step or even workflow run?!\n\n  - primary: |\n      Results after gravimetrical placement are recorded: {{actual}}\n    behaviors:\n      - when: ON_SUBSTEP_START\n        delay: 4s\n        do:\n          - ALERT:\n              title: Finished!\n              text: We are done here.\n          - COMPLETE_SUBSTEP\n          - COMPLETE_STEP\n\n  - primary: Send results to ELN\n    behaviors:\n      - when: ON_SUBSTEP_COMPLETE\n        do:\n          - webhook:\n              url: https://my_endpoint.com/webhook\n              method: post\n              blocking: true\n              headers:\n                content-type: application/json\n              body: body_value\n              onSuccess:\n                processor: json\n                do:\n                  - SET_FIELD:\n                      field: actual\n                      value: data.value\n              onError:\n                processor: json\n                do:\n                  - REPEAT_SUBSTEP\n              onCode:\n                '404':\n                  processor: json\n                  do:\n                    - ALERT:\n                        title: Not Found\n                        text: Ensure that you're using a valid\n                          url / endpoint\n\n                '418':\n                  processor: json\n                  do:\n                    - ALERT:\n                        title: I'm a teapot\n                        text: For real! I'm a teapot\n"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "workflow_step_templates"
        ]
      }
    },
    "/workflow_step_templates/restore": {
      "patch": {
        "description": "Restore a WorkflowStepTemplate.",
        "operationId": "restoreWorkflowStepTemplate",
        "summary": "Restore Workflow Step Template",
        "security": [
          {
            "oauth2": [
              "read",
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowStepTemplates"
                },
                "examples": {
                  "Ok": {
                    "summary": "Ok",
                    "value": {
                      "data": [
                        {
                          "id": "21",
                          "type": "workflow_step_template",
                          "attributes": {
                            "uuid": "b16e8146-d14e-4052-8ad8-0fd6d53d9ed0",
                            "template_version": "1.0.0",
                            "title": "A Great Step",
                            "description": "Add a fancy description here. It even supports __Markdown__!\n",
                            "slug": "a-great-step",
                            "updated_at": "2020-04-01T08:46:49.471Z",
                            "created_at": "2020-04-01T08:46:48.554Z",
                            "deleted_at": null
                          },
                          "relationships": {
                            "owner": {
                              "data": {
                                "id": "33",
                                "type": "user"
                              }
                            },
                            "organisation": {
                              "data": {
                                "id": "32",
                                "type": "organisation"
                              }
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/workflow_step_templates/21"
                          }
                        }
                      ]
                    }
                  },
                  "Ignore Record Not Found Error": {
                    "summary": "Ignore Record Not Found Error",
                    "value": {
                      "data": []
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "workflow_step_templates"
        ]
      }
    },
    "/workflow_events": {
      "get": {
        "description": "Get a list of existing WorkflowEvents.",
        "operationId": "getWorkflowEvents",
        "summary": "Get Workflow Events",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "List of WorkflowEvent attributes to be included in response."
          },
          {
            "name": "filter",
            "description": "Resources and/or attributes to filter by.",
            "in": "query",
            "schema": {
              "type": "object",
              "properties": {
                "workflow_events": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "owner_id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "workflow_run_id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "owner": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "username": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "email": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "workflow_run": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "workflow_template_id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "Pagination"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "Sorting"
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowEvents"
                },
                "examples": {
                  "List of WorkflowEvents": {
                    "summary": "List of WorkflowEvents",
                    "value": {
                      "data": [
                        {
                          "id": "1",
                          "type": "workflow_event",
                          "attributes": {
                            "definition": {
                              "type": "add_step",
                              "payload": {
                                "uuid": "1ab3372f-f2f0-45d3-8417-208ac835dfd3",
                                "version": "1.0.0"
                              }
                            }
                          },
                          "relationships": {
                            "owner": {
                              "data": {
                                "id": "1",
                                "type": "user"
                              }
                            },
                            "workflow_run": {
                              "data": {
                                "id": "1",
                                "type": "workflow_run"
                              }
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/workflow_events/1"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Wrong Filter Error": {
                    "summary": "Wrong Filter Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong workflow_events attributes given for filtering: `hair`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "workflow_events"
        ]
      },
      "post": {
        "description": "Record a dynamic workflow modification event.",
        "operationId": "createWorkflowEvent",
        "summary": "Create Workflow Event",
        "security": [
          {
            "oauth2": [
              "read",
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowEvent"
                },
                "examples": {
                  "Success": {
                    "summary": "Success",
                    "value": {
                      "data": {
                        "id": "4",
                        "type": "workflow_event",
                        "attributes": {
                          "definition": {
                            "type": "add_step",
                            "payload": {
                              "uuid": "1ab3372f-f2f0-45d3-8417-208ac835dfd3",
                              "version": "1.0.0"
                            }
                          }
                        },
                        "relationships": {
                          "owner": {
                            "data": {
                              "id": "4",
                              "type": "user"
                            }
                          },
                          "workflow_run": {
                            "data": {
                              "id": "4",
                              "type": "workflow_run"
                            }
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/workflow_events/4"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Bad Request": {
                    "summary": "Bad Request",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Validation failed: Definition [{\"data\"=>nil, \"data_pointer\"=>\"\", \"schema\"=>{\"type\"=>\"object\", \"title\"=>\"The event of adding a step to a running dynamic template.\\nThe added step will be appended as the last step of the run.\\n\", \"properties\"=>{\"type\"=>{\"enum\"=>[\"add_step\"]}, \"payload\"=>{\"type\"=>\"object\", \"required\"=>[\"uuid\", \"version\"], \"properties\"=>{\"uuid\"=>{\"$ref\"=>\"#/definitions/uuid\"}, \"version\"=>{\"$ref\"=>\"#/definitions/version\"}}}}}, \"schema_pointer\"=>\"/definitions/workflow_event/addStep\", \"type\"=>\"object\"}, {\"data\"=>nil, \"data_pointer\"=>\"\", \"schema\"=>{\"type\"=>\"object\", \"title\"=>\"The event of removing a step from a running dynamic template.\\nOnly steps which are not yet initiated can be removed\\n\", \"properties\"=>{\"type\"=>{\"enum\"=>[\"remove_step\"]}, \"payload\"=>{\"type\"=>\"object\", \"required\"=>[\"pointer\"], \"properties\"=>{\"pointer\"=>{\"type\"=>\"string\", \"pattern\"=>\"^/flow/\"}}}}}, \"schema_pointer\"=>\"/definitions/workflow_event/removeStep\", \"type\"=>\"object\"}, {\"data\"=>nil, \"data_pointer\"=>\"\", \"schema\"=>{\"type\"=>\"object\", \"title\"=>\"The event of removing a step from a running dynamic template.\\nOnly steps which are not yet initiated can be removed\\n\", \"properties\"=>{\"type\"=>{\"enum\"=>[\"move_step\"]}, \"payload\"=>{\"type\"=>\"object\", \"require\"=>[\"from\", \"to\"], \"properties\"=>{\"from\"=>{\"type\"=>\"string\", \"pattern\"=>\"^/flow/\"}, \"to\"=>{\"type\"=>\"string\", \"pattern\"=>\"^/flow/\"}}}}}, \"schema_pointer\"=>\"/definitions/workflow_event/moveStep\", \"type\"=>\"object\"}]",
                          "title": "Bad Request",
                          "source": {
                            "messages": {
                              "definition": [
                                [
                                  {
                                    "data": null,
                                    "data_pointer": "",
                                    "schema": {
                                      "type": "object",
                                      "title": "The event of adding a step to a running dynamic template.\nThe added step will be appended as the last step of the run.\n",
                                      "properties": {
                                        "type": {
                                          "enum": [
                                            "add_step"
                                          ]
                                        },
                                        "payload": {
                                          "type": "object",
                                          "required": [
                                            "uuid",
                                            "version"
                                          ],
                                          "properties": {
                                            "uuid": {},
                                            "version": {}
                                          }
                                        }
                                      }
                                    },
                                    "schema_pointer": "/definitions/workflow_event/addStep",
                                    "type": "object"
                                  },
                                  {
                                    "data": null,
                                    "data_pointer": "",
                                    "schema": {
                                      "type": "object",
                                      "title": "The event of removing a step from a running dynamic template.\nOnly steps which are not yet initiated can be removed\n",
                                      "properties": {
                                        "type": {
                                          "enum": [
                                            "remove_step"
                                          ]
                                        },
                                        "payload": {
                                          "type": "object",
                                          "required": [
                                            "pointer"
                                          ],
                                          "properties": {
                                            "pointer": {
                                              "type": "string",
                                              "pattern": "^/flow/"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "schema_pointer": "/definitions/workflow_event/removeStep",
                                    "type": "object"
                                  },
                                  {
                                    "data": null,
                                    "data_pointer": "",
                                    "schema": {
                                      "type": "object",
                                      "title": "The event of removing a step from a running dynamic template.\nOnly steps which are not yet initiated can be removed\n",
                                      "properties": {
                                        "type": {
                                          "enum": [
                                            "move_step"
                                          ]
                                        },
                                        "payload": {
                                          "type": "object",
                                          "require": [
                                            "from",
                                            "to"
                                          ],
                                          "properties": {
                                            "from": {
                                              "type": "string",
                                              "pattern": "^/flow/"
                                            },
                                            "to": {
                                              "type": "string",
                                              "pattern": "^/flow/"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "schema_pointer": "/definitions/workflow_event/moveStep",
                                    "type": "object"
                                  }
                                ]
                              ]
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthorized Error": {
                    "summary": "Unauthorized Error",
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "code": "403",
                          "detail": "You do not have the required permissions to access this resource. Note: OAuth 2 scopes do not overrule application level permissions.",
                          "title": "Forbidden",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "workflow_events"
        ],
        "requestBody": {
          "description": "Create a WorkflowEvent.",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWorkflowEvent"
              },
              "example": {
                "data": {
                  "type": "workflow_event",
                  "attributes": {
                    "owner": null,
                    "definition": {
                      "type": "add_step",
                      "payload": {
                        "uuid": "1ab3372f-f2f0-45d3-8417-208ac835dfd3",
                        "version": "1.0.0"
                      }
                    }
                  },
                  "relationships": {
                    "workflow_run": {
                      "data": {
                        "type": "workflow_runs",
                        "id": "4"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/versions": {
      "get": {
        "description": "Get a list of existing Versions.",
        "operationId": "getVersions",
        "summary": "Get Versions",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "List of Version attributes to be included in the response."
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "List of related resource to include. Allowed values are: `value`, `value`."
          },
          {
            "name": "filter",
            "description": "Resources and/or attributes to filter by.",
            "in": "query",
            "schema": {
              "type": "object",
              "properties": {
                "versions": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "item_type": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "item_id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "item_owner": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "username": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "email": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Versions"
                },
                "examples": {
                  "List of Versions": {
                    "summary": "List of Versions",
                    "value": {
                      "data": [
                        {
                          "id": "1",
                          "type": "version",
                          "attributes": {
                            "item_type": "Sample",
                            "item_id": 1,
                            "event": "create",
                            "object": null,
                            "object_changes": {
                              "id": [
                                null,
                                1
                              ],
                              "name": [
                                null,
                                "Hassium"
                              ],
                              "owner_id": [
                                null,
                                1
                              ],
                              "created_at": [
                                null,
                                "2020-05-14T12:13:27.838Z"
                              ],
                              "identifier": [
                                null,
                                "d8196b47-23f6-44d4-b72e-5da2262684a2"
                              ],
                              "updated_at": [
                                null,
                                "2020-05-14T12:13:27.838Z"
                              ],
                              "organisation_id": [
                                null,
                                1
                              ]
                            },
                            "whodunnit": null,
                            "created_at": "2020-05-14T12:13:27.838Z"
                          },
                          "relationships": {
                            "item_owner": {
                              "data": {
                                "id": "1",
                                "type": "user"
                              }
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/versions/1"
                          }
                        },
                        {
                          "id": "2",
                          "type": "version",
                          "attributes": {
                            "item_type": "Sample",
                            "item_id": 2,
                            "event": "create",
                            "object": null,
                            "object_changes": {
                              "id": [
                                null,
                                2
                              ],
                              "name": [
                                null,
                                "Meitnerium"
                              ],
                              "owner_id": [
                                null,
                                1
                              ],
                              "created_at": [
                                null,
                                "2020-05-14T12:13:27.882Z"
                              ],
                              "identifier": [
                                null,
                                "89bb349f-280f-46c3-aa04-6adc07e40c96"
                              ],
                              "updated_at": [
                                null,
                                "2020-05-14T12:13:27.882Z"
                              ],
                              "organisation_id": [
                                null,
                                1
                              ]
                            },
                            "whodunnit": null,
                            "created_at": "2020-05-14T12:13:27.882Z"
                          },
                          "relationships": {
                            "item_owner": {
                              "data": {
                                "id": "1",
                                "type": "user"
                              }
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/versions/2"
                          }
                        },
                        {
                          "id": "3",
                          "type": "version",
                          "attributes": {
                            "item_type": "Sample",
                            "item_id": 1,
                            "event": "update",
                            "object": {
                              "id": 1,
                              "name": "Hassium",
                              "slug": null,
                              "owner_id": 1,
                              "created_at": "2020-05-14T12:13:27.838Z",
                              "deleted_at": null,
                              "identifier": "d8196b47-23f6-44d4-b72e-5da2262684a2",
                              "updated_at": "2020-05-14T12:13:27.838Z",
                              "organisation_id": 1,
                              "custom_attributes": []
                            },
                            "object_changes": {
                              "name": [
                                "Hassium",
                                "Updated"
                              ],
                              "updated_at": [
                                "2020-05-14T12:13:27.838Z",
                                "2020-05-14T12:13:27.905Z"
                              ]
                            },
                            "whodunnit": null,
                            "created_at": "2020-05-14T12:13:27.905Z"
                          },
                          "relationships": {
                            "item_owner": {
                              "data": {
                                "id": "1",
                                "type": "user"
                              }
                            }
                          },
                          "links": {
                            "self": "https://cubuslab.lvh.me/api/v2/versions/3"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Wrong Filter Error": {
                    "summary": "Wrong Filter Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong versions attributes given for filtering: `hair`.",
                          "title": "Bad Request",
                          "source": {
                            "messages": {}
                          }
                        }
                      ]
                    }
                  },
                  "Wrong Fields Set Error (all fieldnames are invalid)": {
                    "summary": "Wrong Fields Set Error (all fieldnames are invalid)",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong `fields` value(s) for versions given: `invalid`, `invalid2`.",
                          "title": "Bad Request",
                          "source": {
                            "messages": {}
                          }
                        }
                      ]
                    }
                  },
                  "Wrong Fields Set Error (one fieldname is invalid)": {
                    "summary": "Wrong Fields Set Error (one fieldname is invalid)",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong `fields` value(s) for versions given: `wrong`, `invalid`.",
                          "title": "Bad Request",
                          "source": {
                            "messages": {}
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "versions"
        ]
      }
    },
    "/versions/{id}": {
      "get": {
        "description": "Get a single Version by its id.",
        "operationId": "getVersion",
        "summary": "Get Version",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "An id of Version to get."
          },
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "object"
            },
            "description": "List of Version attributes to be included in the response."
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "List of related resource to include. Allowed values are: `value`, `value`."
          }
        ],
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Version"
                },
                "examples": {
                  "Version": {
                    "summary": "Version",
                    "value": {
                      "data": {
                        "id": "19",
                        "type": "version",
                        "attributes": {
                          "item_type": "Sample",
                          "item_id": 16,
                          "event": "create",
                          "object": null,
                          "object_changes": {
                            "id": [
                              null,
                              16
                            ],
                            "name": [
                              null,
                              "Roentgenium"
                            ],
                            "owner_id": [
                              null,
                              8
                            ],
                            "created_at": [
                              null,
                              "2020-05-14T12:13:29.669Z"
                            ],
                            "identifier": [
                              null,
                              "702b41af-a51b-4655-9eb9-efd3a0da6363"
                            ],
                            "updated_at": [
                              null,
                              "2020-05-14T12:13:29.669Z"
                            ],
                            "organisation_id": [
                              null,
                              8
                            ]
                          },
                          "whodunnit": null,
                          "created_at": "2020-05-14T12:13:29.669Z"
                        },
                        "relationships": {
                          "item_owner": {
                            "data": {
                              "id": "8",
                              "type": "user"
                            }
                          }
                        },
                        "links": {
                          "self": "https://cubuslab.lvh.me/api/v2/versions/19"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Wrong Include Error": {
                    "summary": "Wrong Include Error",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong `include` value(s) given: `spaceships`, `aliens`.",
                          "title": "Bad Request",
                          "source": null
                        }
                      ]
                    }
                  },
                  "Wrong Fields Set Error (all fieldnames are invalid)": {
                    "summary": "Wrong Fields Set Error (all fieldnames are invalid)",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong `fields` value(s) for versions given: `invalid`, `invalid`.",
                          "title": "Bad Request",
                          "source": {
                            "messages": {}
                          }
                        }
                      ]
                    }
                  },
                  "Wrong Fields Set Error (one fieldname is invalid)": {
                    "summary": "Wrong Fields Set Error (one fieldname is invalid)",
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "code": "400",
                          "detail": "Wrong `fields` value(s) for versions given: `invalid`.",
                          "title": "Bad Request",
                          "source": {
                            "messages": {}
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Unauthenticated Error": {
                    "summary": "Unauthenticated Error",
                    "value": {
                      "errors": [
                        {
                          "status": "401",
                          "code": "401",
                          "detail": "Authentication failed. The access token is invalid.",
                          "title": "Unauthorized",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Record Not Found Error": {
                    "summary": "Record Not Found Error",
                    "value": {
                      "errors": [
                        {
                          "status": "404",
                          "code": "404",
                          "detail": "We haven't found the resource you are looking for.",
                          "title": "Not Found",
                          "source": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "versions"
        ]
      }
    }
  },
  "openapi": "3.0.0",
  "info": {
    "title": "Laboperator API",
    "contact": {
      "name": "Julian Lübke",
      "email": "julian.luebke@labforward.io",
      "url": "https://www.laboperator.com/contact/"
    },
    "version": "2.0.0-rc.12",
    "x-logo": {
      "url": "/assets/laboperator_logo-1e698a7d503e3cc860f2aa616ce8d9c1f53ebf02e34deb24e52875785bf81d5d.png",
      "backgroundColor": "#fafafa",
      "altText": "Laboperator logo"
    },
    "description": "This is the Laboperator API documentation bundled with\nyour Laboperator Server. It will reflect the API v2 subversion that\nruns on this instance.\n\n# PRE-RELEASE\nThe current distribution of the API v2 is a pre-realease and as such\nsubject to frequent updates and potentially breaking changes.\n\n# Changlelog\nThis changelog will be kept here for pre-releases only.\n\n## v2.0.0-rc.12\n### Added\n- introduce trait-tags in API V2 documentaion for common query parameters `fields`, `filter`, `sort`, `page`\n\n### Change\n- API V2 data_points endpoints are normalized\n\n## v2.0.0-rc.11\n\n### Added\n- additional endpoints for `jobs`, `views`, `tasks`, `notifications`, `ports`, `schemas`\n- custom rake task `rake spec:api_v2_docs` for running specs along with generation of documentation\n- `filter` fetch parameter accepts and understands comparison operators `gt`, `ge`, `lt`, `le`, `eq`, `ne`, `lk`, `nlk`\n\n### Changed\n- invalid query params are not ignored anymore but throw a 'Bad Request' error\n\n### Fixed\n- ActiveRecord validation errors are handled by JsonApiUtils\n- `fields` specs context and descriptions\n- errors which happen on a middleware level are handled in a JsonApiUtils manner\n\n## v2.0.0-rc.10\n\n### Changed\n- invalid query params are not ignored anymore but throw a 'Bad Request' error\n\n### Fixed\n- ActiveRecord validation errors are handled by JsonApiUtils\n\n## v2.0.0-rc.9\n\n### Changed\n- updated schema structure\n\n### Fixed\n- missing id parameter for device command endpoint\n- minor errors in several response and body schemas\n\n## v2.0.0-rc.8\n\n### Added\n- command execution endpoints\n- devices command endpoint\n\n## v2.0.0-rc.7\n\n### Added\n- protocol rule endpoints\n\n## v2.0.0-rc.6\n\n### Added\n- data points endpoints\n- task include `result`\n- measurement `data_points` documentation\n- measurement `protocol_entries` documentation\n\n### Fixed\n- task type serialization\n\n## v2.0.0-rc.5\n\n### Added\n- support for filters\n- support for sparse field sets\n- Task.parameters documentation\n- custom attributes documentation\n- Job.response\n- Task include option for Measurements\n- added `created_at`, `description`, `end_at`, `protocol_entries`, `start_at`, `status`, `updated_at`, `uuid` to Measurement serializer\n\n### Fixed\n- URLs in links for subtyped entities\n\n### Removed\n- create action for channels\n- `prev` and `next` links without logical relation (most cases as of now)\n\n# Standards\nThe API uses standards (referenced below) and best practices to\nmake the interaction as easy as possible. Not only are standards\na great way of benefitting from the collective experience of a large\ncommunity that develops these standards, but also for users to rely\non a vivid ecosystem of documentation and resources.\n\n## OpenAPI specification\nThis API is documented in the both human- and machine-readable\n[OpenAPI](https://github.com/OAI/OpenAPI-Specification) format.\nYou can download the raw OpenAPI document for this API using the\nbutton on the top of this page.\n\nThe OpenAPI specification originates from the\n[swagger.io](https://swagger.io). There is an active community\naround the standard and many [tools](https://openapi.tools)\navailable for most modern programming environments.\n\n## JSON:API specification\nWhile OpenAPI specifies how to document an API,\n[JSON:API](https://jsonapi.org) is a specification for building APIs in\n[JSON](https://www.json.org). It is mostly a set of conventions that help\nus to build a consistent service. Our developers and users of the API\nalike can build on generalized tooling and a common understanding of\nwhat to expect.\n"
  },
  "externalDocs": {
    "description": "Find out more about Laboperator terminology and resources in general at our helpdesk.\n",
    "url": "https://support.labforward.io"
  },
  "servers": [
    {
      "url": "/api/v2/main",
      "description": "Default endpoint on the server hosting this documentation."
    },
    {
      "url": "{scheme}://{tenant}.{host}/api/v2",
      "description": "Use this server template for the subdomain tenant strategy.",
      "variables": {
        "scheme": {
          "enum": [
            "http",
            "https"
          ],
          "description": "The HTTP scheme to use.",
          "default": "http"
        },
        "tenant": {
          "description": "Your tenants domain.",
          "default": "main"
        },
        "host": {
          "description": "The server hosting your Laboperator instance.",
          "default": "lvh.me"
        }
      }
    },
    {
      "url": "{scheme}://{host}/api/v2/{tenant}",
      "description": "Use this server template for the route tenant strategy.",
      "variables": {
        "scheme": {
          "enum": [
            "http",
            "https"
          ],
          "description": "The HTTP scheme to use.",
          "default": "http"
        },
        "tenant": {
          "description": "Your tenants domain.",
          "default": "main"
        },
        "host": {
          "description": "The server hosting your Laboperator instance.",
          "default": "lvh.me"
        }
      }
    }
  ],
  "components": {
    "securitySchemes": {
      "oauth2": {
        "type": "oauth2",
        "description": "All requests against the API need to be authenticated. We use\n[OAuth 2.0](https://oauth.net/2/) to implement different\nauthentication strategies. If you are not familiar with OAuth,\nyet, you can get started with some\n[useful resources](https://oauth.net/articles/) to understand the\nbasics. All OAuth strategies lead to an Access Token being issued\nthat needs to be included in the headers of any API request.\n\nFor example:\n```\nAuthorization: Bearer 6e5ca31a16a1bf3426b33ace25efd07d03afb1c63e5f5c0fb6e82ef8b0293a0d\n```\n\n### Prerequisites\nEvery third-party code that wants to authenticate against the API\nneeds to be registered as an OAuth Client or in the Laboperator\nterminology an Application.\n\nRead more about [how to create an Application](https://support.labforward.io/support/solutions/articles/19000106654-how-to-create-a-new-oauth-client-application)\nfrom your Laboperator admin account.\n\n### OAuth Authorization Flows\nThe Laboperator API supports OAuth 2 with either the\n[Resource Owner Password](http://tools.ietf.org/html/draft-ietf-oauth-v2-22#section-4.3)\nor the [Authorization Code](http://tools.ietf.org/html/draft-ietf-oauth-v2-22#section-4.1) flow.\n\nMore information on the procedure can be found in the\n[Authentication article](https://support.labforward.io/support/solutions/articles/19000106856-authentication) in the helpdesk.\n",
        "flows": {
          "password": {
            "tokenUrl": "/oauth/token",
            "refreshUrl": "/oauth/token",
            "scopes": {
              "read": "Read access to resources.",
              "write": "Write access to resources.",
              "delete": "Deleting resources."
            }
          },
          "authorizationCode": {
            "authorizationUrl": "/oauth/authorize",
            "tokenUrl": "/oauth/token",
            "refreshUrl": "/oauth/token",
            "scopes": {
              "read": "Read access to resources.",
              "write": "Write access to resources.",
              "delete": "Deleting resources."
            }
          }
        }
      }
    },
    "schemas": {
      "CustomAttribute": {
        "discriminator": {
          "mapping": {
            "boolean": "#/components/schemas/BooleanAttribute",
            "date": "#/components/schemas/DateAttribute",
            "datetime": "#/components/schemas/DatetimeAttribute",
            "file": "#/components/schemas/FileAttribute",
            "image": "#/components/schemas/ImageAttribute",
            "number": "#/components/schemas/NumberAttribute",
            "physicalQuantity": "#/components/schemas/PhysicalQuantityAttribute",
            "plot": "#/components/schemas/PlotAttribute",
            "relation": "#/components/schemas/RelationAttribute",
            "string": "#/components/schemas/StringAttribute",
            "text": "#/components/schemas/TextAttribute",
            "duration": "#/components/schemas/DurationAttribute",
            "temperatureCurve": "#/components/schemas/TemperatureCurveAttribute"
          },
          "propertyName": "type"
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/BooleanAttribute"
          },
          {
            "$ref": "#/components/schemas/DateAttribute"
          },
          {
            "$ref": "#/components/schemas/DatetimeAttribute"
          },
          {
            "$ref": "#/components/schemas/FileAttribute"
          },
          {
            "$ref": "#/components/schemas/ImageAttribute"
          },
          {
            "$ref": "#/components/schemas/NumberAttribute"
          },
          {
            "$ref": "#/components/schemas/PhysicalQuantityAttribute"
          },
          {
            "$ref": "#/components/schemas/PlotAttribute"
          },
          {
            "$ref": "#/components/schemas/RelationAttribute"
          },
          {
            "$ref": "#/components/schemas/StringAttribute"
          },
          {
            "$ref": "#/components/schemas/TextAttribute"
          },
          {
            "$ref": "#/components/schemas/DurationAttribute"
          },
          {
            "$ref": "#/components/schemas/TemperatureCurveAttribute"
          }
        ]
      },
      "Errors": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "status",
                "title"
              ],
              "properties": {
                "code": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "detail": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "Success": {
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "properties": {
              "result": {
                "type": "string",
                "enum": [
                  "Success"
                ]
              }
            }
          }
        }
      },
      "JobResponseField": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "url": {
            "description": "A post request will dispatched to this url.",
            "type": "string",
            "format": "uri"
          },
          "headers": {
            "description": "Any headers that should be added to the request.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "TaskErrorAttribute": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string"
                },
                "detail": {
                  "type": "string"
                },
                "when": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "TaskParametersField": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/DosingTaskParameters"
          },
          {
            "$ref": "#/components/schemas/WeighingTaskParameters"
          },
          {
            "$ref": "#/components/schemas/SimpleTaskParameters"
          },
          {
            "$ref": "#/components/schemas/StirringTaskParameters"
          },
          {
            "$ref": "#/components/schemas/GenericMeasurementTaskParameters"
          },
          {
            "$ref": "#/components/schemas/TemperatureControlTaskParameters"
          }
        ]
      },
      "ProtocolEntry": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "datetime",
            "description": "Timestamp of the protocol entry."
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "ID of the channel this protocol entry is related to."
                },
                "name": {
                  "type": "string",
                  "description": "The name of the channel."
                },
                "value": {
                  "type": "number",
                  "nullable": true,
                  "description": "The value the channel had at this time."
                },
                "unit": {
                  "type": "string",
                  "description": "The unit of the channel."
                }
              }
            }
          },
          "comment": {
            "type": "string",
            "description": "A comment generated by the protocol rule."
          }
        }
      },
      "ProtocolEntries": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ProtocolEntry"
        }
      },
      "AddResource": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "resource"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "resource_type": {
                    "type": "string"
                  },
                  "resource_id": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              }
            }
          }
        }
      },
      "MoveResource": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "resource"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "collection_id": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              }
            }
          }
        }
      },
      "ManualTriggerParams": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "manual"
            ],
            "description": "The type of trigger to signal. As of now only `manual` triggers\nare allowed to be signaled via API.\n"
          },
          "substep": {
            "type": "number",
            "description": "Index of the substep that gives context to this trigger.\n"
          },
          "key": {
            "type": "string",
            "description": "A key that identifies the manual trigger in the context of the\nstep. When definind a behavior the key is passed as an option to\nthe manual trigger definition. The same key can be passed to a\nbutton on a substep. When the button is clicked this key is\npassed with the trigger. The key allows to use multiple manual\ntrigger in the context of the same step or substep.\n"
          }
        }
      },
      "TriggerSignal": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "oneOf": [
              {}
            ],
            "discriminator": {
              "propertyName": "type",
              "mapping": {
                "manual": "#/components/schemas/ManualTriggerParams"
              }
            }
          }
        }
      },
      "Application": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              },
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "redirect_uri": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "Applications": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Application"
            }
          }
        }
      },
      "Authentication": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              },
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "provider": {
                    "type": "string"
                  },
                  "uid": {
                    "type": "string"
                  },
                  "access_token": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "Authentications": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Authentication"
            }
          }
        }
      },
      "Channel": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              },
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "capability": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "interval": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "name": {
                    "type": "string"
                  },
                  "on_update": {
                    "type": "string"
                  },
                  "status": {
                    "description": "Correct attributes type could not be automatically inferred. Please refer to the example payloads."
                  },
                  "unit": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  },
                  "specific_attributes": {
                    "description": "Correct attributes type could not be automatically inferred. Please refer to the example payloads."
                  },
                  "device_class": {
                    "description": "Correct attributes type could not be automatically inferred. Please refer to the example payloads."
                  },
                  "type_sym": {
                    "description": "Correct attributes type could not be automatically inferred. Please refer to the example payloads."
                  }
                }
              }
            }
          }
        }
      },
      "Channels": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Channel"
            }
          }
        }
      },
      "Collection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              },
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "personal": {
                    "type": "boolean"
                  },
                  "secure": {
                    "type": "boolean"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "deleted_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        }
      },
      "Collections": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Collection"
            }
          }
        }
      },
      "CreateCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "parent_id": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "secure": {
                    "type": "boolean"
                  },
                  "user_id": {
                    "description": "Correct attributes type could not be automatically inferred. Please refer to the example payloads."
                  }
                }
              }
            }
          }
        },
        "required": [
          "name"
        ]
      },
      "UpdateCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "parent_id": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "secure": {
                    "type": "boolean"
                  },
                  "user_id": {
                    "description": "Correct attributes type could not be automatically inferred. Please refer to the example payloads."
                  }
                }
              },
              "id": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        }
      },
      "CommandExecution": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              },
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "uuid": {
                    "type": "string"
                  },
                  "parameters": {
                    "description": "Any parameters send with the command including the command\nthat was triggered itself.\n",
                    "type": "object",
                    "additionalProperties": true,
                    "required": [
                      "command"
                    ],
                    "properties": {
                      "command": {
                        "type": "string",
                        "description": "The triggered command"
                      }
                    }
                  },
                  "device_id": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "user_id": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "status": {
                    "type": "string",
                    "description": "There are four well defined status values:\n\n- **sent:** The command was send to the device\n- **confirmed:** The command was received by the device and will be processed\n- **success:** The command has successfully been processed\n- **error:** An error has occured whil processing the command\n\nAdditionally there might be other status values the device\nsends after confirming the command and before finishing or\nfailing.\n"
                  },
                  "confirmed_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "finished_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "data": {
                    "description": "Any update or result data the device sends back. The\ncontent of this attribute depends on the device type and\nthe command.\n",
                    "type": "object",
                    "additionalProperties": true
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        }
      },
      "CommandExecutions": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommandExecution"
            }
          }
        }
      },
      "Connector": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              },
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "connector_key": {
                    "type": "string"
                  },
                  "serial": {
                    "type": "string"
                  },
                  "last_seen_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "last_appeared_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "status": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "deleted_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "connector_key_nice": {
                    "description": "Correct attributes type could not be automatically inferred. Please refer to the example payloads."
                  },
                  "owner_id": {
                    "description": "Correct attributes type could not be automatically inferred. Please refer to the example payloads."
                  },
                  "slugs": {
                    "description": "Correct attributes type could not be automatically inferred. Please refer to the example payloads."
                  },
                  "enrollment_server": {
                    "type": "string"
                  },
                  "connector_endpoint": {
                    "type": "string"
                  },
                  "last_reported_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "hardware": {
                    "type": "string"
                  },
                  "last_pairing_button_press_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "internal_ip": {
                    "type": "string"
                  },
                  "external_ip": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "Connectors": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Connector"
            }
          }
        }
      },
      "CreateConnector": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "connector_key": {
                    "type": "string"
                  },
                  "serial": {
                    "type": "string"
                  },
                  "last_seen_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "last_appeared_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "status": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "enrollment_server": {
                    "type": "string"
                  },
                  "connector_endpoint": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "required": [
          "connector_key"
        ]
      },
      "UpdateConnector": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "connector_key": {
                    "type": "string"
                  },
                  "serial": {
                    "type": "string"
                  },
                  "last_seen_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "last_appeared_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "status": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "enrollment_server": {
                    "type": "string"
                  },
                  "connector_endpoint": {
                    "type": "string"
                  }
                }
              },
              "id": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        }
      },
      "Dashboard": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              },
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "slug": {
                    "type": "string"
                  },
                  "deleted_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        }
      },
      "Dashboards": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Dashboard"
            }
          }
        }
      },
      "CreateDashboard": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "required": [
          "name"
        ]
      },
      "UpdateDashboard": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              },
              "id": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        }
      },
      "DataPoint": {
        "type": "array",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              },
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {}
              }
            }
          }
        },
        "items": {
          "oneOf": [
            {
              "type": "integer",
              "description": "For the sake of efficiency the DataPoint entity is not a Resource Object as per the JSON:API specification.\n\nA DataPoint is instead provided as a quadruple Array of `channel_id`, `timestamp`, `value` and `str_value`.\n\nThe `channel_id` and the `timestamp` uniquely identify any data point.\n\nEither `value` and `str_value` will always be `null` depending on the channel type.\n\n**Note:** The order of the items is always as mentioned above,\nwhich can due to limitations of the OpenApi specification not be expressed correctly in the schema.\n"
            },
            {
              "type": "string",
              "format": "datetime",
              "description": "For the sake of efficiency the DataPoint entity is not a Resource Object as per the JSON:API specification.\n\nA DataPoint is instead provided as a quadruple Array of `channel_id`, `timestamp`, `value` and `str_value`.\n\nThe `channel_id` and the `timestamp` uniquely identify any data point.\n\nEither `value` and `str_value` will always be `null` depending on the channel type.\n\n**Note:** The order of the items is always as mentioned above,\nwhich can due to limitations of the OpenApi specification not be expressed correctly in the schema.\n"
            },
            {
              "type": "number",
              "description": "For the sake of efficiency the DataPoint entity is not a Resource Object as per the JSON:API specification.\n\nA DataPoint is instead provided as a quadruple Array of `channel_id`, `timestamp`, `value` and `str_value`.\n\nThe `channel_id` and the `timestamp` uniquely identify any data point.\n\nEither `value` and `str_value` will always be `null` depending on the channel type.\n\n**Note:** The order of the items is always as mentioned above,\nwhich can due to limitations of the OpenApi specification not be expressed correctly in the schema.\n"
            }
          ]
        },
        "example": [
          12,
          "2017-11-01T00:00:00Z",
          10.6
        ]
      },
      "DataPoints": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPoint"
            }
          }
        },
        "description": "For the sake of efficiency the DataPoint entity is not a Resource Object as per the JSON:API specification.\n\nA DataPoint is instead provided as a quadruple Array of `channel_id`, `timestamp`, `value` and `str_value`.\n\nThe `channel_id` and the `timestamp` uniquely identify any data point.\n\nEither `value` and `str_value` will always be `null` depending on the channel type.\n\n**Note:** The order of the items is always as mentioned above,\nwhich can due to limitations of the OpenApi specification not be expressed correctly in the schema.\n"
      },
      "DeviceDriver": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              },
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "version": {
                    "type": "string"
                  },
                  "bundle": {
                    "type": "string"
                  },
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "DeviceDrivers": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeviceDriver"
            }
          }
        }
      },
      "CreateDeviceDriver": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "device_driver"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "version": {
                    "type": "string"
                  },
                  "bundle": {
                    "type": "string"
                  },
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "schema": {
            "type": "string",
            "format": "binary"
          },
          "bundle": {
            "type": "string",
            "format": "binary"
          }
        },
        "required": [
          "name",
          "version",
          "bundle",
          "schema"
        ]
      },
      "UpdateDeviceDriver": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "device_driver"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "bundle": {
                    "type": "string"
                  },
                  "schema": {
                    "type": "string"
                  },
                  "remove_bundle": {
                    "description": "Correct attributes type could not be automatically inferred. Please refer to the example payloads."
                  },
                  "remove_schema": {
                    "description": "Correct attributes type could not be automatically inferred. Please refer to the example payloads."
                  }
                }
              },
              "id": {
                "type": "integer",
                "format": "int64"
              }
            }
          },
          "schema": {
            "type": "string",
            "format": "binary"
          },
          "bundle": {
            "type": "string",
            "format": "binary"
          }
        }
      },
      "DeviceType": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              },
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "vendor": {
                    "type": "string"
                  },
                  "device_class": {
                    "type": "string"
                  },
                  "parameters": {
                    "description": "Correct attributes schema could not be automatically inferred. Please refer to the example payloads."
                  },
                  "commands": {
                    "description": "Correct attributes type could not be automatically inferred. Please refer to the example payloads."
                  },
                  "device_class_label": {
                    "description": "Correct attributes type could not be automatically inferred. Please refer to the example payloads."
                  }
                }
              }
            }
          }
        }
      },
      "DeviceTypes": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeviceType"
            }
          }
        }
      },
      "Device": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              },
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string"
                  },
                  "slug": {
                    "type": "string"
                  },
                  "driver_parameters": {
                    "description": "Correct attributes schema could not be automatically inferred. Please refer to the example payloads."
                  },
                  "custom_attributes": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CustomAttribute"
                    }
                  },
                  "vendor": {
                    "description": "Correct attributes type could not be automatically inferred. Please refer to the example payloads."
                  },
                  "device_class": {
                    "description": "Correct attributes type could not be automatically inferred. Please refer to the example payloads."
                  },
                  "device_type": {
                    "description": "Correct attributes type could not be automatically inferred. Please refer to the example payloads."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "deleted_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "slugs": {
                    "description": "Correct attributes type could not be automatically inferred. Please refer to the example payloads."
                  },
                  "display_name": {
                    "description": "Correct attributes type could not be automatically inferred. Please refer to the example payloads."
                  },
                  "commands": {
                    "description": "Correct attributes type could not be automatically inferred. Please refer to the example payloads."
                  },
                  "status_channel_id": {
                    "description": "Correct attributes type could not be automatically inferred. Please refer to the example payloads."
                  },
                  "operator_id": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              }
            }
          }
        }
      },
      "Devices": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Device"
            }
          }
        }
      },
      "UpdateDevice": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "driver_parameters": {
                    "description": "Correct attributes schema could not be automatically inferred. Please refer to the example payloads."
                  },
                  "custom_attributes": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CustomAttribute"
                    }
                  },
                  "driver_id": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "channels_attributes": {
                    "description": "Correct attributes type could not be automatically inferred. Please refer to the example payloads."
                  }
                }
              },
              "id": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        }
      },
      "Export": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              },
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "original_filename": {
                    "type": "string"
                  },
                  "status": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "deleted_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "secure_token": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "Exports": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Export"
            }
          }
        }
      },
      "Job": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              },
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "identifier": {
                    "type": "string"
                  },
                  "custom_attributes": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CustomAttribute"
                    }
                  },
                  "response": {
                    "description": "Correct attributes schema could not be automatically inferred. Please refer to the example payloads.",
                    "$ref": "#/components/schemas/JobResponseField"
                  },
                  "progress": {
                    "description": "Correct attributes type could not be automatically inferred. Please refer to the example payloads."
                  },
                  "deleted_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "finished": {
                    "description": "Correct attributes type could not be automatically inferred. Please refer to the example payloads."
                  }
                }
              }
            }
          }
        }
      },
      "Jobs": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Job"
            }
          }
        }
      },
      "CreateJob": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "identifier": {
                    "type": "string"
                  },
                  "response": {
                    "description": "Correct attributes schema could not be automatically inferred. Please refer to the example payloads.",
                    "$ref": "#/components/schemas/JobResponseField"
                  },
                  "custom_attributes": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CustomAttribute"
                    }
                  }
                }
              }
            }
          }
        },
        "required": [
          "identifier"
        ]
      },
      "UpdateJob": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "identifier": {
                    "type": "string"
                  },
                  "response": {
                    "description": "Correct attributes schema could not be automatically inferred. Please refer to the example payloads.",
                    "$ref": "#/components/schemas/JobResponseField"
                  },
                  "custom_attributes": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CustomAttribute"
                    }
                  },
                  "tasks_order": {
                    "description": "Correct attributes type could not be automatically inferred. Please refer to the example payloads."
                  }
                }
              },
              "id": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        }
      },
      "Measurement": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              },
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "description": {
                    "type": "string"
                  },
                  "end_at": {
                    "description": "Correct attributes type could not be automatically inferred. Please refer to the example payloads."
                  },
                  "protocol_entries": {
                    "description": "Correct attributes type could not be automatically inferred. Please refer to the example payloads.",
                    "$ref": "#/components/schemas/ProtocolEntries"
                  },
                  "scope_params": {
                    "description": "Correct attributes type could not be automatically inferred. Please refer to the example payloads."
                  },
                  "custom_attributes": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CustomAttribute"
                    }
                  },
                  "start_at": {
                    "description": "Correct attributes type could not be automatically inferred. Please refer to the example payloads."
                  },
                  "status": {
                    "description": "Correct attributes type could not be automatically inferred. Please refer to the example payloads."
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "uuid": {
                    "type": "string"
                  },
                  "container_id": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "container_type": {
                    "type": "string"
                  },
                  "deleted_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "data_points": {
                    "description": "For the sake of efficiency the DataPoint entity is not a\nResource Object as per the JSON:API specification. A\nDataPoint is instead always provided as an Array with the\ntripple of `channel_id`, `timestamp` and `value`. The\n`channel_id` and the `timestamp` uniquely identify any\ndata point.\n\n**Note:** The order of the items is always as mentioned\nabove, which can due to limitations of the OpenApi\nspecification not be expressed correctly in the schema.\n",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/DataPoint"
                    }
                  },
                  "scope": {
                    "description": "Correct attributes type could not be automatically inferred. Please refer to the example payloads."
                  },
                  "context_type": {
                    "description": "Correct attributes type could not be automatically inferred. Please refer to the example payloads."
                  },
                  "context_id": {
                    "description": "Correct attributes type could not be automatically inferred. Please refer to the example payloads."
                  },
                  "context_name": {
                    "description": "Correct attributes type could not be automatically inferred. Please refer to the example payloads."
                  }
                }
              }
            }
          }
        }
      },
      "Measurements": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Measurement"
            }
          }
        }
      },
      "CreateMeasurement": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "container_id": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "container_type": {
                    "type": "string"
                  },
                  "custom_attributes": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CustomAttribute"
                    }
                  },
                  "scope_attributes": {
                    "description": "Correct attributes type could not be automatically inferred. Please refer to the example payloads."
                  }
                }
              }
            }
          }
        },
        "required": [
          "scope_attributes"
        ]
      },
      "UpdateMeasurement": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "container_id": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "container_type": {
                    "type": "string"
                  },
                  "custom_attributes": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CustomAttribute"
                    }
                  },
                  "scope_attributes": {
                    "description": "Correct attributes type could not be automatically inferred. Please refer to the example payloads."
                  }
                }
              },
              "id": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        }
      },
      "NotificationSetting": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              },
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "delivery_methods": {
                    "type": "string"
                  },
                  "active": {
                    "type": "boolean"
                  },
                  "rate_limit": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        }
      },
      "NotificationSettings": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NotificationSetting"
            }
          }
        }
      },
      "CreateNotificationSetting": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "delivery_methods": {
                    "type": "string"
                  },
                  "active": {
                    "type": "boolean"
                  },
                  "rate_limit": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              }
            }
          }
        }
      },
      "UpdateNotificationSetting": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "delivery_methods": {
                    "type": "string"
                  },
                  "active": {
                    "type": "boolean"
                  },
                  "rate_limit": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              },
              "id": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        }
      },
      "NotificationTrigger": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              },
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "string"
                  },
                  "conditions": {
                    "description": "Correct attributes schema could not be automatically inferred. Please refer to the example payloads."
                  }
                }
              }
            }
          }
        }
      },
      "NotificationTriggers": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NotificationTrigger"
            }
          }
        }
      },
      "CreateNotificationTrigger": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "string"
                  },
                  "conditions": {
                    "description": "Correct attributes schema could not be automatically inferred. Please refer to the example payloads."
                  }
                }
              }
            }
          }
        },
        "required": [
          "key"
        ]
      },
      "UpdateNotificationTrigger": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "string"
                  },
                  "conditions": {
                    "description": "Correct attributes schema could not be automatically inferred. Please refer to the example payloads."
                  }
                }
              },
              "id": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        }
      },
      "Notification": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              },
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "details": {
                    "description": "Correct attributes schema could not be automatically inferred. Please refer to the example payloads."
                  },
                  "read": {
                    "type": "boolean"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "title": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "Notifications": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Notification"
            }
          }
        }
      },
      "UpdateNotification": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "read": {
                    "type": "boolean"
                  }
                }
              },
              "id": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        }
      },
      "OrganisationMembership": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              },
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "role": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              }
            }
          }
        }
      },
      "OrganisationMemberships": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganisationMembership"
            }
          }
        }
      },
      "UpdateOrganisationMembership": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "role": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "user_id": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              },
              "id": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        }
      },
      "Organisation": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              },
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "website": {
                    "type": "string"
                  },
                  "domain": {
                    "type": "string"
                  },
                  "settings": {
                    "description": "The theme's primary and secondary colors",
                    "type": "object",
                    "properties": {
                      "primary": {
                        "description": "Primary theme colour",
                        "type": "object",
                        "properties": {
                          "main": {
                            "type": "string"
                          },
                          "dark": {
                            "type": "string"
                          },
                          "light": {
                            "type": "string"
                          }
                        }
                      },
                      "secondary": {
                        "description": "Secondary theme colour",
                        "type": "object",
                        "properties": {
                          "main": {
                            "type": "string"
                          },
                          "dark": {
                            "type": "string"
                          },
                          "light": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "logo": {
                    "type": "object",
                    "description": "The respective image size of the different logo versions is 300x300 pixels (medium) and 40x40 pixels (small).",
                    "properties": {
                      "url": {
                        "type": "object",
                        "properties": {
                          "medium": {
                            "type": "string",
                            "format": "uri"
                          },
                          "thumb": {
                            "type": "string",
                            "format": "uri"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "Organisations": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Organisation"
            }
          }
        }
      },
      "CreateOrganisation": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "website": {
                    "type": "string"
                  },
                  "logo": {
                    "type": "string"
                  },
                  "settings": {
                    "description": "Correct attributes schema could not be automatically inferred. Please refer to the example payloads."
                  },
                  "domain": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "logo": {
            "type": "string",
            "format": "binary"
          },
          "settings": {
            "type": "object",
            "description": "The theme's primary and secondary colors",
            "properties": {
              "theme": {
                "type": "object",
                "properties": {
                  "primary": {
                    "type": "object",
                    "description": "The theme's primary color"
                  },
                  "secondary": {
                    "type": "object",
                    "description": "The theme's secondary color"
                  }
                }
              }
            }
          }
        },
        "required": [
          "domain",
          "name"
        ]
      },
      "UpdateOrganisation": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "website": {
                    "type": "string"
                  },
                  "logo": {
                    "type": "object",
                    "nullable": true,
                    "description": "Setting the logo property to 'null' will delete the logo."
                  },
                  "settings": {
                    "description": "Correct attributes schema could not be automatically inferred. Please refer to the example payloads."
                  }
                }
              },
              "id": {
                "type": "integer",
                "format": "int64"
              }
            }
          },
          "logo": {
            "type": "string",
            "format": "binary"
          },
          "settings": {
            "type": "object",
            "description": "The theme's primary and secondary colors",
            "properties": {
              "theme": {
                "type": "object",
                "properties": {
                  "primary": {
                    "type": "object",
                    "description": "The theme's primary color"
                  },
                  "secondary": {
                    "type": "object",
                    "description": "The theme's secondary color"
                  }
                }
              }
            }
          }
        }
      },
      "Permission": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              },
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "rules": {
                    "description": "Correct attributes schema could not be automatically inferred. Please refer to the example payloads."
                  },
                  "privileged": {
                    "type": "boolean"
                  },
                  "collection_id": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "resource_id": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "resource_type": {
                    "type": "string"
                  },
                  "user_id": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "deleted_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "collection_owner": {
                    "type": "boolean"
                  },
                  "name": {
                    "description": "Correct attributes type could not be automatically inferred. Please refer to the example payloads."
                  }
                }
              }
            }
          }
        }
      },
      "Permissions": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Permission"
            }
          }
        }
      },
      "CreatePermission": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "user_id": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "collection_id": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "resource_id": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "resource_type": {
                    "type": "string"
                  },
                  "rules": {
                    "description": "Correct attributes schema could not be automatically inferred. Please refer to the example payloads."
                  },
                  "updating": {
                    "description": "Correct attributes type could not be automatically inferred. Please refer to the example payloads."
                  },
                  "deleting": {
                    "description": "Correct attributes type could not be automatically inferred. Please refer to the example payloads."
                  },
                  "executing": {
                    "description": "Correct attributes type could not be automatically inferred. Please refer to the example payloads."
                  }
                }
              }
            }
          }
        },
        "required": [
          "resource_type"
        ]
      },
      "UpdatePermission": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "user_id": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "collection_id": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "resource_id": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "resource_type": {
                    "type": "string"
                  },
                  "rules": {
                    "description": "Correct attributes schema could not be automatically inferred. Please refer to the example payloads."
                  },
                  "updating": {
                    "description": "Correct attributes type could not be automatically inferred. Please refer to the example payloads."
                  },
                  "deleting": {
                    "description": "Correct attributes type could not be automatically inferred. Please refer to the example payloads."
                  },
                  "executing": {
                    "description": "Correct attributes type could not be automatically inferred. Please refer to the example payloads."
                  }
                }
              },
              "id": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        }
      },
      "Port": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              },
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string"
                  },
                  "position": {
                    "type": "string"
                  },
                  "device_type_simulation": {
                    "type": "string"
                  },
                  "instance": {
                    "description": "Correct attributes schema could not be automatically inferred. Please refer to the example payloads."
                  },
                  "parameters": {
                    "description": "Correct attributes schema could not be automatically inferred. Please refer to the example payloads."
                  },
                  "driver_type": {
                    "description": "Correct attributes schema could not be automatically inferred. Please refer to the example payloads."
                  },
                  "connector_key_nice": {
                    "description": "Correct attributes type could not be automatically inferred. Please refer to the example payloads."
                  }
                }
              }
            }
          }
        }
      },
      "UpdatePort": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string"
                  },
                  "position": {
                    "type": "string"
                  },
                  "device_type_simulation": {
                    "type": "string"
                  },
                  "instance": {
                    "description": "Correct attributes schema could not be automatically inferred. Please refer to the example payloads."
                  },
                  "parameters": {
                    "description": "Correct attributes schema could not be automatically inferred. Please refer to the example payloads."
                  },
                  "driver_type": {
                    "description": "Correct attributes schema could not be automatically inferred. Please refer to the example payloads."
                  },
                  "device_name": {
                    "description": "Correct attributes type could not be automatically inferred. Please refer to the example payloads."
                  },
                  "device_type_id": {
                    "description": "Correct attributes type could not be automatically inferred. Please refer to the example payloads."
                  },
                  "device_id": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              },
              "id": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        }
      },
      "ProtocolRule": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              },
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "type": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "parameters": {
                    "description": "Correct attributes schema could not be automatically inferred. Please refer to the example payloads."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        }
      },
      "ProtocolRules": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProtocolRule"
            }
          }
        }
      },
      "CreateProtocolRule": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  },
                  "protocolable_id": {
                    "description": "Correct attributes type could not be automatically inferred. Please refer to the example payloads."
                  },
                  "protocolable_type": {
                    "description": "Correct attributes type could not be automatically inferred. Please refer to the example payloads."
                  },
                  "parameters": {
                    "description": "Correct attributes schema could not be automatically inferred. Please refer to the example payloads."
                  }
                }
              }
            }
          }
        },
        "required": [
          "type",
          "protocolable_id",
          "protocolable_type"
        ]
      },
      "UpdateProtocolRule": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  },
                  "protocolable_id": {
                    "description": "Correct attributes type could not be automatically inferred. Please refer to the example payloads."
                  },
                  "protocolable_type": {
                    "description": "Correct attributes type could not be automatically inferred. Please refer to the example payloads."
                  },
                  "parameters": {
                    "description": "Correct attributes schema could not be automatically inferred. Please refer to the example payloads."
                  }
                }
              },
              "id": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        }
      },
      "Protonotification": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              },
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        }
      },
      "Protonotifications": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Protonotification"
            }
          }
        }
      },
      "CreateProtonotification": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  },
                  "delivery_methods": {
                    "description": "Correct attributes type could not be automatically inferred. Please refer to the example payloads."
                  },
                  "rate_limit": {
                    "description": "Correct attributes type could not be automatically inferred. Please refer to the example payloads."
                  }
                }
              }
            }
          }
        },
        "required": [
          "title"
        ]
      },
      "UpdateProtonotification": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  },
                  "delivery_methods": {
                    "description": "Correct attributes type could not be automatically inferred. Please refer to the example payloads."
                  },
                  "rate_limit": {
                    "description": "Correct attributes type could not be automatically inferred. Please refer to the example payloads."
                  }
                }
              },
              "id": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        }
      },
      "Sample": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              },
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "identifier": {
                    "type": "string"
                  },
                  "custom_attributes": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CustomAttribute"
                    }
                  },
                  "deleted_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "owner_id": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              }
            }
          }
        }
      },
      "Samples": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Sample"
            }
          }
        }
      },
      "CreateSample": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "identifier": {
                    "type": "string"
                  },
                  "custom_attributes": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CustomAttribute"
                    }
                  }
                }
              }
            }
          }
        },
        "required": [
          "identifier"
        ]
      },
      "UpdateSample": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "identifier": {
                    "type": "string"
                  },
                  "custom_attributes": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CustomAttribute"
                    }
                  }
                }
              },
              "id": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        }
      },
      "Task": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              },
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "state": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "error": {
                    "description": "Correct attributes schema could not be automatically inferred. Please refer to the example payloads.",
                    "$ref": "#/components/schemas/TaskErrorAttribute"
                  },
                  "parameters": {
                    "description": "Correct attributes schema could not be automatically inferred. Please refer to the example payloads.",
                    "$ref": "#/components/schemas/TaskParametersField"
                  },
                  "name": {
                    "type": "string"
                  },
                  "locked_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "index_number": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "custom_attributes": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CustomAttribute"
                    }
                  },
                  "type": {
                    "type": "string"
                  },
                  "allowed_events": {
                    "description": "Correct attributes type could not be automatically inferred. Please refer to the example payloads."
                  },
                  "warnings": {
                    "description": "Correct attributes type could not be automatically inferred. Please refer to the example payloads."
                  }
                }
              }
            }
          }
        }
      },
      "Tasks": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Task"
            }
          }
        }
      },
      "CreateTask": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "custom_attributes": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CustomAttribute"
                    }
                  },
                  "type": {
                    "type": "string"
                  },
                  "parameters": {
                    "description": "Correct attributes schema could not be automatically inferred. Please refer to the example payloads.",
                    "$ref": "#/components/schemas/TaskParametersField"
                  },
                  "index_number": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "trigger_action": {
                    "description": "Correct attributes type could not be automatically inferred. Please refer to the example payloads."
                  }
                }
              }
            }
          }
        },
        "required": [
          "type"
        ]
      },
      "UpdateTask": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "custom_attributes": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CustomAttribute"
                    }
                  },
                  "type": {
                    "type": "string"
                  },
                  "parameters": {
                    "description": "Correct attributes schema could not be automatically inferred. Please refer to the example payloads.",
                    "$ref": "#/components/schemas/TaskParametersField"
                  },
                  "index_number": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "trigger_action": {
                    "description": "Correct attributes type could not be automatically inferred. Please refer to the example payloads."
                  }
                }
              },
              "id": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              },
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "deleted_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "full_name": {
                    "description": "Correct attributes type could not be automatically inferred. Please refer to the example payloads."
                  },
                  "slugs": {
                    "description": "Correct attributes type could not be automatically inferred. Please refer to the example payloads."
                  },
                  "first_name": {
                    "description": "Correct attributes type could not be automatically inferred. Please refer to the example payloads."
                  },
                  "last_name": {
                    "description": "Correct attributes type could not be automatically inferred. Please refer to the example payloads."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "position": {
                    "description": "Correct attributes type could not be automatically inferred. Please refer to the example payloads."
                  },
                  "email_link": {
                    "description": "Correct attributes type could not be automatically inferred. Please refer to the example payloads."
                  },
                  "mobile_phone": {
                    "description": "Correct attributes type could not be automatically inferred. Please refer to the example payloads."
                  },
                  "office_phone": {
                    "description": "Correct attributes type could not be automatically inferred. Please refer to the example payloads."
                  },
                  "personal_collection_id": {
                    "description": "Correct attributes type could not be automatically inferred. Please refer to the example payloads."
                  },
                  "initials": {
                    "description": "Correct attributes type could not be automatically inferred. Please refer to the example payloads."
                  },
                  "role": {
                    "description": "Correct attributes type could not be automatically inferred. Please refer to the example payloads."
                  },
                  "organisation_membership_id": {
                    "description": "Correct attributes type could not be automatically inferred. Please refer to the example payloads."
                  }
                }
              }
            }
          }
        }
      },
      "Users": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          }
        }
      },
      "UpdateUser": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  }
                }
              },
              "id": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        }
      },
      "View": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              },
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "layout": {
                    "description": "Correct attributes schema could not be automatically inferred. Please refer to the example payloads."
                  },
                  "viewable_type": {
                    "type": "string"
                  },
                  "data_scopes": {
                    "description": "Correct attributes type could not be automatically inferred. Please refer to the example payloads."
                  }
                }
              }
            }
          }
        }
      },
      "UpdateView": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "layout": {
                    "description": "Correct attributes schema could not be automatically inferred. Please refer to the example payloads."
                  }
                }
              },
              "id": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        }
      },
      "WebhookSubscription": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              },
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "active": {
                    "type": "boolean"
                  },
                  "url": {
                    "type": "string"
                  },
                  "triggers": {
                    "type": "string"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "headers": {
                    "description": "Correct attributes schema could not be automatically inferred. Please refer to the example payloads."
                  }
                }
              }
            }
          }
        }
      },
      "WebhookSubscriptions": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebhookSubscription"
            }
          }
        }
      },
      "CreateWebhookSubscription": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "headers": {
                    "description": "Correct attributes schema could not be automatically inferred. Please refer to the example payloads."
                  },
                  "url": {
                    "type": "string"
                  },
                  "triggers": {
                    "type": "string"
                  },
                  "active": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "required": [
          "url"
        ]
      },
      "UpdateWebhookSubscription": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "headers": {
                    "description": "Correct attributes schema could not be automatically inferred. Please refer to the example payloads."
                  },
                  "url": {
                    "type": "string"
                  },
                  "triggers": {
                    "type": "string"
                  },
                  "active": {
                    "type": "boolean"
                  }
                }
              },
              "id": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        }
      },
      "WorkflowField": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              },
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "identifier": {
                    "type": "string"
                  },
                  "pointer": {
                    "type": "string"
                  },
                  "read_only": {
                    "type": "boolean"
                  },
                  "prepare": {
                    "type": "boolean"
                  },
                  "output": {
                    "type": "boolean"
                  },
                  "schema": {
                    "description": "Correct attributes schema could not be automatically inferred. Please refer to the example payloads."
                  },
                  "hidden": {
                    "type": "boolean"
                  },
                  "value_type": {
                    "description": "Correct attributes type could not be automatically inferred. Please refer to the example payloads."
                  },
                  "value": {
                    "description": "Correct attributes schema could not be automatically inferred. Please refer to the example payloads."
                  },
                  "field_scope_type": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "deleted_at": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        }
      },
      "WorkflowFields": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkflowField"
            }
          }
        }
      },
      "UpdateWorkflowField": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "workflow_field"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "value": {
                    "description": "Correct attributes schema could not be automatically inferred. Please refer to the example payloads."
                  },
                  "output": {
                    "type": "boolean"
                  }
                }
              },
              "id": {
                "type": "integer",
                "format": "int64"
              }
            }
          },
          "file": {
            "type": "string",
            "format": "binary"
          }
        }
      },
      "WorkflowRun": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              },
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "state": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "run_number": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "deleted_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "template": {
                    "description": "The template schema used by this run",
                    "type": "object"
                  },
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "WorkflowRuns": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkflowRun"
            }
          }
        }
      },
      "CreateWorkflowRun": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "state": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "UpdateWorkflowRun": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "state": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              },
              "id": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        }
      },
      "WorkflowStep": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              },
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "pointer": {
                    "type": "string"
                  },
                  "flow_pointer": {
                    "type": "string"
                  },
                  "current_substep": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "completed_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "step_number": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "deleted_at": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        }
      },
      "WorkflowSteps": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkflowStep"
            }
          }
        }
      },
      "UpdateWorkflowStep": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "completed_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "current_substep": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              },
              "id": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        }
      },
      "WorkflowTemplate": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              },
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string"
                  },
                  "template_version": {
                    "type": "string"
                  },
                  "title": {
                    "type": "string"
                  },
                  "slug": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "deleted_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "description": {
                    "type": "string"
                  },
                  "template": {
                    "description": "The uploaded template schema",
                    "type": "object"
                  }
                }
              }
            }
          }
        }
      },
      "WorkflowTemplates": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkflowTemplate"
            }
          }
        }
      },
      "CreateWorkflowTemplate": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "workflow_template"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "file": {
            "type": "string",
            "format": "binary"
          }
        }
      },
      "BooleanAttribute": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "type",
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Display name and identifier of the attribute."
          },
          "type": {
            "type": "string",
            "description": "The type defines the required structure of the `value` property."
          },
          "options": {
            "type": "object"
          },
          "value": {
            "type": "boolean",
            "default": false,
            "nullable": true
          }
        }
      },
      "DateAttribute": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "type",
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Display name and identifier of the attribute."
          },
          "type": {
            "type": "string",
            "description": "The type defines the required structure of the `value` property."
          },
          "options": {
            "type": "object"
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "DatetimeAttribute": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "type",
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Display name and identifier of the attribute."
          },
          "type": {
            "type": "string",
            "description": "The type defines the required structure of the `value` property."
          },
          "options": {
            "type": "object"
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "FileAttribute": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "type",
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Display name and identifier of the attribute."
          },
          "type": {
            "type": "string",
            "description": "The type defines the required structure of the `value` property."
          },
          "options": {
            "type": "object"
          },
          "value": {
            "properties": {
              "file": {
                "type": "string"
              },
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "type": {
                "type": "string"
              }
            },
            "type": "object",
            "nullable": true
          }
        }
      },
      "ImageAttribute": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "type",
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Display name and identifier of the attribute."
          },
          "type": {
            "type": "string",
            "description": "The type defines the required structure of the `value` property."
          },
          "options": {
            "type": "object"
          },
          "value": {
            "type": "object",
            "properties": {
              "file": {
                "type": "string"
              },
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "type": {
                "type": "string"
              }
            },
            "nullable": true
          }
        }
      },
      "NumberAttribute": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "type",
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Display name and identifier of the attribute."
          },
          "type": {
            "type": "string",
            "description": "The type defines the required structure of the `value` property."
          },
          "options": {
            "type": "object"
          },
          "value": {
            "type": "number",
            "nullable": true
          }
        }
      },
      "PhysicalQuantityAttribute": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "type",
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Display name and identifier of the attribute."
          },
          "type": {
            "type": "string",
            "description": "The type defines the required structure of the `value` property."
          },
          "options": {
            "type": "object"
          },
          "value": {
            "properties": {
              "number": {
                "type": "number"
              },
              "unit": {
                "type": "string"
              }
            },
            "type": "object",
            "nullable": true
          }
        }
      },
      "PlotAttribute": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "type",
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Display name and identifier of the attribute."
          },
          "type": {
            "type": "string",
            "description": "The type defines the required structure of the `value` property."
          },
          "options": {
            "type": "object"
          },
          "value": {
            "properties": {
              "data": {
                "items": {
                  "properties": {
                    "x": {
                      "type": "array",
                      "items": {
                        "type": "number"
                      }
                    },
                    "y": {
                      "type": "array",
                      "items": {
                        "type": "number"
                      }
                    }
                  },
                  "type": "object"
                },
                "type": "array",
                "default": [
                  {
                    "x": [
                      0,
                      60000
                    ],
                    "y": [
                      0,
                      0
                    ],
                    "fill": "tozeroy",
                    "line": {
                      "shape": "hv"
                    }
                  }
                ]
              }
            },
            "type": "object",
            "nullable": true
          }
        }
      },
      "RelationAttribute": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "type",
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Display name and identifier of the attribute."
          },
          "type": {
            "type": "string",
            "description": "The type defines the required structure of the `value` property."
          },
          "options": {
            "type": "object"
          },
          "value": {
            "required": [
              "id",
              "type"
            ],
            "properties": {
              "id": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "integer"
                        }
                      ]
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "integer"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "string"
              }
            },
            "type": "object",
            "nullable": true
          }
        }
      },
      "StringAttribute": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "type",
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Display name and identifier of the attribute."
          },
          "type": {
            "type": "string",
            "description": "The type defines the required structure of the `value` property."
          },
          "options": {
            "type": "object"
          },
          "value": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          }
        }
      },
      "TextAttribute": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "type",
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Display name and identifier of the attribute."
          },
          "type": {
            "type": "string",
            "description": "The type defines the required structure of the `value` property."
          },
          "options": {
            "type": "object"
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "DurationAttribute": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "type",
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Display name and identifier of the attribute."
          },
          "type": {
            "type": "string",
            "description": "The type defines the required structure of the `value` property."
          },
          "options": {
            "type": "object"
          },
          "value": {
            "type": "number",
            "nullable": true
          }
        }
      },
      "TemperatureCurveAttribute": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "type",
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Display name and identifier of the attribute."
          },
          "type": {
            "type": "string",
            "description": "The type defines the required structure of the `value` property."
          },
          "options": {
            "type": "object"
          },
          "value": {
            "items": {
              "properties": {
                "mode": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array",
            "nullable": true
          }
        }
      },
      "DosingTaskParameters": {
        "title": "Dosing Task",
        "type": "array",
        "items": {
          "anyOf": [
            {
              "type": "object",
              "default": {},
              "title": "sample",
              "required": [
                "type"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "default": "sample"
                },
                "type": {
                  "type": "string",
                  "default": "relation"
                },
                "value": {
                  "$ref": "#/components/schemas/RelationAttribute/properties/value"
                }
              }
            },
            {
              "type": "object",
              "default": {},
              "title": "pump",
              "required": [
                "type"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "default": "pump"
                },
                "type": {
                  "type": "string",
                  "default": "relation"
                },
                "value": {
                  "$ref": "#/components/schemas/RelationAttribute/properties/value"
                }
              }
            },
            {
              "type": "object",
              "default": {},
              "title": "balance",
              "required": [
                "type"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "default": "balance"
                },
                "type": {
                  "type": "string",
                  "default": "relation"
                },
                "value": {
                  "$ref": "#/components/schemas/RelationAttribute/properties/value"
                }
              }
            },
            {
              "type": "object",
              "default": {},
              "title": "amount",
              "required": [
                "type",
                "value"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "default": "amount"
                },
                "type": {
                  "type": "string",
                  "default": "plot"
                },
                "value": {
                  "$ref": "#/components/schemas/PlotAttribute/properties/value"
                }
              }
            }
          ]
        }
      },
      "WeighingTaskParameters": {
        "title": "Weighing Task",
        "type": "array",
        "items": {
          "anyOf": [
            {
              "type": "object",
              "default": {},
              "title": "sample",
              "required": [
                "name",
                "type"
              ],
              "properties": {
                "value": {
                  "$ref": "#/components/schemas/RelationAttribute/properties/value"
                },
                "name": {
                  "type": "string",
                  "default": "sample"
                },
                "type": {
                  "type": "string",
                  "default": "relation"
                }
              }
            },
            {
              "type": "object",
              "default": {},
              "title": "device",
              "required": [
                "name",
                "type"
              ],
              "properties": {
                "value": {
                  "$ref": "#/components/schemas/RelationAttribute/properties/value",
                  "default": null
                },
                "name": {
                  "type": "string",
                  "default": "device"
                },
                "type": {
                  "type": "string",
                  "default": "relation"
                }
              }
            },
            {
              "type": "object",
              "default": {},
              "title": "target",
              "required": [
                "name",
                "type"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "default": "target"
                },
                "type": {
                  "type": "string",
                  "default": "physicalQuantity"
                },
                "value": {
                  "$ref": "#/components/schemas/PhysicalQuantityAttribute/properties/value"
                }
              }
            },
            {
              "type": "object",
              "default": {},
              "title": "tolerance",
              "required": [
                "name",
                "type"
              ],
              "properties": {
                "value": {
                  "$ref": "#/components/schemas/PhysicalQuantityAttribute/properties/value"
                },
                "name": {
                  "type": "string",
                  "default": "tolerance"
                },
                "type": {
                  "type": "string",
                  "default": "physicalQuantity"
                }
              }
            }
          ]
        }
      },
      "SimpleTaskParameters": {
        "title": "Simple Task",
        "type": "array",
        "items": {
          "anyOf": [
            {
              "type": "object",
              "title": "description",
              "properties": {
                "name": {
                  "type": "string",
                  "default": "description"
                },
                "type": {
                  "type": "string",
                  "default": "text"
                },
                "value": {
                  "$ref": "#/components/schemas/TextAttribute/properties/value"
                }
              }
            }
          ]
        }
      },
      "StirringTaskParameters": {
        "title": "Stirring Task",
        "type": "array",
        "items": {
          "anyOf": [
            {
              "type": "object",
              "default": {},
              "title": "sample",
              "required": [
                "type"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "default": "sample"
                },
                "type": {
                  "type": "string",
                  "default": "relation"
                },
                "value": {
                  "$ref": "#/components/schemas/RelationAttribute/properties/value"
                }
              }
            },
            {
              "type": "object",
              "default": {},
              "title": "device",
              "required": [
                "type"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "default": "device"
                },
                "type": {
                  "type": "string",
                  "default": "relation"
                },
                "value": {
                  "$ref": "#/components/schemas/RelationAttribute/properties/value"
                }
              }
            },
            {
              "type": "object",
              "default": {},
              "title": "rotation",
              "required": [
                "type",
                "name",
                "value"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "default": "rotation"
                },
                "type": {
                  "type": "string",
                  "default": "plot"
                },
                "value": {
                  "$ref": "#/components/schemas/PlotAttribute/properties/value"
                }
              }
            },
            {
              "type": "object",
              "default": {},
              "title": "manual_stop",
              "required": [
                "type"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "default": "manual_stop"
                },
                "type": {
                  "type": "string",
                  "default": "boolean"
                },
                "value": {
                  "$ref": "#/components/schemas/BooleanAttribute/properties/value"
                }
              }
            }
          ]
        }
      },
      "GenericMeasurementTaskParameters": {
        "title": "Generic Measurement Task",
        "type": "array",
        "items": {
          "anyOf": [
            {
              "type": "object",
              "default": {},
              "title": "sample",
              "properties": {
                "value": {
                  "$ref": "#/components/schemas/RelationAttribute/properties/value"
                },
                "name": {
                  "type": "string",
                  "default": "sample"
                },
                "type": {
                  "type": "string",
                  "default": "relation"
                }
              }
            },
            {
              "type": "object",
              "default": {},
              "title": "duration",
              "properties": {
                "name": {
                  "type": "string",
                  "default": "duration"
                },
                "type": {
                  "type": "string",
                  "default": "duration"
                },
                "value": {
                  "$ref": "#/components/schemas/DurationAttribute/properties/value"
                }
              }
            },
            {
              "type": "object",
              "default": {},
              "title": "end_at",
              "properties": {
                "value": {
                  "$ref": "#/components/schemas/DatetimeAttribute/properties/value"
                },
                "name": {
                  "type": "string",
                  "default": "end_at"
                },
                "type": {
                  "type": "string",
                  "default": "datetime"
                }
              }
            },
            {
              "type": "object",
              "default": {},
              "title": "channels",
              "required": [
                "name",
                "type"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "default": "channels"
                },
                "type": {
                  "type": "string",
                  "default": "relation"
                },
                "value": {
                  "$ref": "#/components/schemas/RelationAttribute/properties/value",
                  "default": null
                }
              }
            }
          ]
        }
      },
      "TemperatureControlTaskParameters": {
        "title": "Temperature Control Task",
        "type": "array",
        "items": {
          "anyOf": [
            {
              "type": "object",
              "default": {},
              "title": "sample",
              "required": [
                "type"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "default": "sample"
                },
                "type": {
                  "type": "string",
                  "default": "relation"
                },
                "value": {
                  "$ref": "#/components/schemas/RelationAttribute/properties/value"
                }
              }
            },
            {
              "type": "object",
              "default": {},
              "title": "control_device",
              "required": [
                "name",
                "type",
                "value"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "default": "control_device"
                },
                "type": {
                  "type": "string",
                  "default": "relation"
                },
                "value": {
                  "$ref": "#/components/schemas/RelationAttribute/properties/value"
                }
              }
            },
            {
              "type": "object",
              "default": {},
              "title": "measurement_channel",
              "required": [
                "name",
                "type",
                "value"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "default": "measurement_channel"
                },
                "type": {
                  "type": "string",
                  "default": "relation"
                },
                "value": {
                  "$ref": "#/components/schemas/RelationAttribute/properties/value"
                }
              }
            },
            {
              "type": "object",
              "default": {},
              "title": "temperatureCurve",
              "required": [
                "type",
                "name",
                "value"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "default": "temperatureCurve"
                },
                "type": {
                  "type": "string",
                  "default": "temperatureCurve"
                },
                "value": {
                  "$ref": "#/components/schemas/TemperatureCurveAttribute/properties/value"
                }
              }
            }
          ]
        }
      },
      "Comment": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              },
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "container_type": {
                    "type": "string"
                  },
                  "container_id": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "content": {
                    "type": "string"
                  },
                  "deleted_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "commentable_type": {
                    "type": "string"
                  },
                  "commentable_id": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              }
            }
          }
        }
      },
      "Comments": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Comment"
            }
          }
        }
      },
      "CreateComment": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "owner_id": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "commentable_id": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "commentable_type": {
                    "type": "string"
                  },
                  "content": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "required": [
          "content"
        ]
      },
      "UpdateComment": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "content": {
                    "type": "string"
                  }
                }
              },
              "id": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        }
      },
      "WorkflowStepTemplate": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              },
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string"
                  },
                  "template_version": {
                    "type": "string"
                  },
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "slug": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "deleted_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "file": {
                    "type": "string"
                  },
                  "template": {
                    "description": "The JSON schema that will be used",
                    "type": "object"
                  }
                }
              }
            }
          }
        }
      },
      "WorkflowStepTemplates": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkflowStepTemplate"
            }
          }
        }
      },
      "CreateWorkflowStepTemplate": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "workflow_step_template"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "file": {
            "type": "string",
            "format": "binary"
          }
        }
      },
      "DeviceClass": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              },
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "label": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "DeviceClasses": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeviceClass"
            }
          }
        }
      },
      "WorkflowEvent": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              },
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "definition": {
                    "description": "Correct attributes schema could not be automatically inferred. Please refer to the example payloads.",
                    "$ref": "#/components/schemas/WorkflowEventDefinition"
                  }
                }
              }
            }
          }
        }
      },
      "WorkflowEvents": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkflowEvent"
            }
          }
        }
      },
      "CreateWorkflowEvent": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "definition": {
                    "description": "Correct attributes schema could not be automatically inferred. Please refer to the example payloads.",
                    "$ref": "#/components/schemas/WorkflowEventDefinition"
                  }
                }
              }
            }
          }
        }
      },
      "WorkflowEventDefinition": {
        "required": [
          "type",
          "payload"
        ],
        "oneOf": [
          {
            "$ref": "#/components/schemas/WorkflowEventAddStep"
          },
          {
            "$ref": "#/components/schemas/WorkflowEventMoveStep"
          },
          {
            "$ref": "#/components/schemas/WorkflowEventRemoveStep"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "add_step": "#/components/schemas/WorkflowEventAddStep",
            "move_step": "#/components/schemas/WorkflowEventMoveStep",
            "remove_step": "#/components/schemas/WorkflowEventRemoveStep"
          }
        }
      },
      "WorkflowEventAddStep": {
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "add_step"
            ],
            "type": "string"
          },
          "payload": {
            "type": "object",
            "required": [
              "uuid",
              "version"
            ],
            "properties": {
              "uuid": {
                "type": "string"
              },
              "version": {
                "type": "string"
              }
            }
          }
        }
      },
      "WorkflowEventMoveStep": {
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "move_step"
            ],
            "type": "string"
          },
          "payload": {
            "type": "object",
            "required": [
              "from",
              "to"
            ],
            "properties": {
              "from": {
                "type": "string",
                "pattern": "^/flow/"
              },
              "to": {
                "type": "string",
                "pattern": "^/flow/"
              }
            }
          }
        }
      },
      "WorkflowEventRemoveStep": {
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "remove_step"
            ],
            "type": "string"
          },
          "payload": {
            "type": "object",
            "required": [
              "pointer"
            ],
            "properties": {
              "pointer": {
                "type": "string",
                "pattern": "^/flow/"
              }
            }
          }
        }
      },
      "Version": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              },
              "type": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "item_type": {
                    "type": "string"
                  },
                  "item_id": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "event": {
                    "type": "string"
                  },
                  "object": {
                    "description": "Correct attributes schema could not be automatically inferred. Please refer to the example payloads."
                  },
                  "object_changes": {
                    "description": "Correct attributes schema could not be automatically inferred. Please refer to the example payloads."
                  },
                  "whodunnit": {
                    "type": "string"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        }
      },
      "Versions": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Version"
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Fields",
      "description": "The `fields` parameter allows you to only fetch required information in\na query. It can be combined with other query parameters. By reducing the transferred\n\n### Examples\n\n- _return a single attribute:_ `devices?fields[devices]=name`\n- _return multiple attributes:_ `devices?fields[devices]=name,created_at`\n- _along with included resources:_ `devices?include=connector&fields[devices]=name&fields[connector]=name`\n",
      "x-traitTag": true
    },
    {
      "name": "Filtering",
      "description": "Filtering of resource's instances is available via a `filter` query\nparameter. Can be combined with other query parameters.\n\n### List of available comparison operators:\n\n| Operator | Query Symbol |\n|---|---|\n| greater than ('>') | `gt` |\n| greater or equal ('>=') | `ge` |\n| less than ('<') | `lt` |\n| less or equal ('<=') | `le` |\n| equal (default) ('=') | `eq` |\n| not equal ('!=') | `ne` |\n| like (match at least partly) ('~*') | `lk` |\n| unlike (does not match even partly) ('!~*') | `nlk` |\n| match json objects ('@>') | `json` |\n\n### Examples\n\n- `devices?filter[devices][status]=offline`\n- _can be used on both the main resource and included:_ `devices?include=tasks&filter[devices][name]=DeviceName&filter[devices][status]=offline&filter[tasks][name]=SecondTask`\n- _can be used with comparison operators:_ `tasks?filter[tasks][created_at][ge]=2014-01-01`.\n",
      "x-traitTag": true
    },
    {
      "name": "Pagination",
      "description": "Pagination of resource's instances is available via a `page` query\nparameter. Can be combined with other query paraters.\n\n### Examples\n\n- _number of pages to fetch:_ `devices?page[devices][number]=10`\n- _number of records per page:_ `devices?page[devices][size]=2`\n- _fetch the first page of records_ `devices?page[devices][size]=2&page[devices][first]`\n- _fetch the last page of records_ `devices?page[devices][size]=2&page[devices][last]`\n- _fetch the next page of records_ `devices?page[devices][size]=2&page[devices][next]`\n- _fetch the previous page of records_ `devices?page[devices][size]=2&page[devices][prev]`\n- _show the total number of available pages:_ `devices?page[devices][total]`\n",
      "x-traitTag": true
    },
    {
      "name": "Searching",
      "description": "Full-text search of resource's instances is available via a `search` query\nparameter. Can be combined with other query parameters.\n\n### Examples\n\n- _search users:_ `users?search[users]=John%20engineer`\n- _search samples:_ `samples?search[samples]=solution%20fr8wv3mt`\n- _search devices:_ `devices?search[devices]=online`\n",
      "x-traitTag": true
    },
    {
      "name": "Sorting",
      "description": "Sorting of resource's instances is available via a `sort` query\nparameter. Can be combined with other query parameters.\n\n### Examples\n\n- _sort in an ascending order by a given attribute:_ `devices?sort[devices]=created_at`\n- _sort in a descending order by a given attribute:_ `devices?sort[devices]=-created_at`\n- _accepts multiple attributes:_ `sort[devices]=-created_at,name`\n",
      "x-traitTag": true
    },
    {
      "name": "applications",
      "x-displayName": "Applications",
      "x-traitTag": false
    },
    {
      "name": "authentications",
      "x-displayName": "Authentications",
      "x-traitTag": false
    },
    {
      "name": "channels",
      "x-displayName": "Channels",
      "x-traitTag": false
    },
    {
      "name": "collections",
      "x-displayName": "Collections",
      "x-traitTag": false
    },
    {
      "name": "command_executions",
      "x-displayName": "Command Executions",
      "description": "A command execution is created for every command send to a device. If\nthe driver supports it the execution will also track confirmation and\ncompletion or failure of the command.\n",
      "x-traitTag": false
    },
    {
      "name": "comments",
      "x-displayName": "Comments",
      "x-traitTag": false,
      "description": "<span style=\"color:#f44336\">Attention! This feature in under development.</span>\n"
    },
    {
      "name": "connectors",
      "x-displayName": "Connectors",
      "x-traitTag": false
    },
    {
      "name": "dashboards",
      "x-displayName": "Dashboards",
      "x-traitTag": false
    },
    {
      "name": "data_points",
      "x-displayName": "Data Points",
      "x-traitTag": false
    },
    {
      "name": "device_classes",
      "x-displayName": "Device Classes",
      "x-traitTag": false
    },
    {
      "name": "device_drivers",
      "x-displayName": "Device Drivers",
      "x-traitTag": false
    },
    {
      "name": "device_types",
      "x-displayName": "Device Types",
      "x-traitTag": false
    },
    {
      "name": "devices",
      "x-displayName": "Devices",
      "x-traitTag": false
    },
    {
      "name": "exports",
      "x-displayName": "Exports",
      "x-traitTag": false
    },
    {
      "name": "jobs",
      "x-displayName": "Jobs",
      "x-traitTag": false
    },
    {
      "name": "measurements",
      "x-displayName": "Measurements",
      "x-traitTag": false
    },
    {
      "name": "notification_settings",
      "x-displayName": "Notification Settings",
      "x-traitTag": false
    },
    {
      "name": "notification_triggers",
      "x-displayName": "Notification Triggers",
      "x-traitTag": false
    },
    {
      "name": "notifications",
      "x-displayName": "Notifications",
      "x-traitTag": false
    },
    {
      "name": "organisation_memberships",
      "x-displayName": "Organisation Memberships",
      "x-traitTag": false
    },
    {
      "name": "organisations",
      "x-displayName": "Organisations",
      "x-traitTag": false
    },
    {
      "name": "permissions",
      "x-displayName": "Permissions",
      "x-traitTag": false
    },
    {
      "name": "ports",
      "x-displayName": "Ports",
      "x-traitTag": false
    },
    {
      "name": "protocol_rules",
      "x-displayName": "Protocol Rules",
      "x-traitTag": false
    },
    {
      "name": "protonotifications",
      "x-displayName": "Protonotifications",
      "x-traitTag": false
    },
    {
      "name": "samples",
      "x-displayName": "Samples",
      "x-traitTag": false
    },
    {
      "name": "tasks",
      "x-displayName": "Tasks",
      "x-traitTag": false
    },
    {
      "name": "users",
      "x-displayName": "Users",
      "x-traitTag": false
    },
    {
      "name": "versions",
      "x-displayName": "Versions",
      "x-traitTag": false
    },
    {
      "name": "views",
      "x-displayName": "Views",
      "x-traitTag": false
    },
    {
      "name": "webhook_subscriptions",
      "x-displayName": "Webhook Subscriptions",
      "x-traitTag": false
    },
    {
      "name": "workflow_events",
      "x-displayName": "Workflow Events",
      "x-traitTag": false
    },
    {
      "name": "workflow_fields",
      "x-displayName": "Workflow Fields",
      "x-traitTag": false
    },
    {
      "name": "workflow_runs",
      "x-displayName": "Workflow Runs",
      "x-traitTag": false
    },
    {
      "name": "workflow_step_templates",
      "x-displayName": "Workflow Step Templates",
      "x-traitTag": false
    },
    {
      "name": "workflow_steps",
      "x-displayName": "Workflow Steps",
      "x-traitTag": false
    },
    {
      "name": "workflow_templates",
      "x-displayName": "Workflow Templates",
      "x-traitTag": false
    }
  ]
}